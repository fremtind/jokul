{"version":3,"file":"component---packages-button-react-documentation-buttons-mdx-30a44f9028099c83964f.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/button-react/src/BaseButton.tsx","webpack://@fremtind/portal/../packages/button-react/src/Button.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/Primary.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/Secondary.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/Tertiary.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/buttons.mdx","webpack://@fremtind/portal/../packages/loader-react/build/browser/index.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport { Props } from \"./types\";\n\nexport const BaseButton = forwardRef<HTMLButtonElement, Props>((props, ref) => <button {...props} ref={ref} />);\n\nBaseButton.displayName = \"BaseButton\";\n","import React, { forwardRef, TouchEvent } from \"react\";\nimport classNames from \"classnames\";\nimport { Loader } from \"@fremtind/jkl-loader-react\";\nimport { Props, ValidButtons } from \"./types\";\nimport { BaseButton } from \"./BaseButton\";\n\nconst makeButtonComponent = (buttonType: ValidButtons) => {\n    const button = forwardRef<HTMLButtonElement, Props>(\n        ({ children, className = \"\", forceCompact, inverted, onClick, onTouchStart, loader, ...rest }, ref) => {\n            const componentClassName = classNames(\"jkl-button\", \"jkl-button--\" + buttonType, {\n                \"jkl-button--compact\": forceCompact,\n                \"jkl-button--inverted\": inverted,\n            });\n\n            const handleTouch = (event: TouchEvent<HTMLButtonElement>) => {\n                onTouchStart && onTouchStart(event);\n\n                const target = event.target as HTMLButtonElement;\n                if (target && event.targetTouches.length) {\n                    const Xcoord = event.targetTouches[0].clientX - target.getBoundingClientRect().x;\n                    const Ycoord = event.targetTouches[0].clientY - target.getBoundingClientRect().y;\n                    target.style.setProperty(\"--jkl-touch-xcoord\", Xcoord.toPrecision(4) + \"px\");\n                    target.style.setProperty(\"--jkl-touch-ycoord\", Ycoord.toPrecision(4) + \"px\");\n                    target.classList.add(\"jkl-button--pressed\");\n                    setTimeout(() => target.classList.remove(\"jkl-button--pressed\"), 400);\n                }\n            };\n\n            if (!loader) {\n                return (\n                    <BaseButton\n                        className={classNames(componentClassName, className)}\n                        onClick={onClick}\n                        onTouchStart={handleTouch}\n                        {...rest}\n                        ref={ref}\n                    >\n                        {children}\n                    </BaseButton>\n                );\n            }\n\n            return (\n                <div\n                    className={classNames(\"jkl-button-wrapper\", className, {\n                        \"jkl-button-wrapper--compact\": forceCompact,\n                    })}\n                >\n                    <div\n                        className={classNames(\"jkl-button-wrapper__slider\", {\n                            \"jkl-button-wrapper__slider--show-loader\": !!loader.showLoader,\n                        })}\n                    >\n                        <BaseButton\n                            className={componentClassName}\n                            onClick={onClick}\n                            onTouchStart={handleTouch}\n                            disabled={loader?.showLoader}\n                            {...rest}\n                            ref={ref}\n                        >\n                            {children}\n                        </BaseButton>\n\n                        {loader?.showLoader && (\n                            <div className=\"jkl-button-wrapper__loader jkl-layout-spacing--small-top\">\n                                <Loader\n                                    textDescription={loader.textDescription}\n                                    negative={inverted}\n                                    aria-hidden={!!loader.showLoader}\n                                    inline={true}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            );\n        },\n    );\n    return button;\n};\n\nexport const PrimaryButton = makeButtonComponent(\"primary\");\nexport const SecondaryButton = makeButtonComponent(\"secondary\");\nexport const TertiaryButton = makeButtonComponent(\"tertiary\");\n","import React from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { PrimaryButton } from \"../src\";\n\nfunction onClick() {\n    console.log(\"Hello!\");\n}\n\nexport const Primary: React.FC<ExampleComponentProps> = ({ boolValues }) => (\n    <PrimaryButton\n        inverted={boolValues && boolValues[\"Invertert\"]}\n        forceCompact={boolValues && boolValues[\"Kompakt\"]}\n        loader={\n            !!boolValues?.[\"withLoader\"]\n                ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n                : undefined\n        }\n        onClick={onClick}\n        className=\"jkl-spacing--right-1\"\n    >\n        Avbryt\n    </PrimaryButton>\n);\n\nexport const PrimaryCode = `\n<PrimaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={\n        !!boolValues?.[\"withLoader\"]\n            ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n            : undefined\n    }\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Avbryt\n</PrimaryButton>\n`;\n","import React from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { SecondaryButton } from \"../src\";\n\nfunction onClick() {\n    console.log(\"Hello!\");\n}\n\nexport const Secondary: React.FC<ExampleComponentProps> = ({ boolValues }) => (\n    <SecondaryButton\n        inverted={boolValues && boolValues[\"Invertert\"]}\n        forceCompact={boolValues && boolValues[\"Kompakt\"]}\n        loader={\n            !!boolValues?.[\"withLoader\"]\n                ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n                : undefined\n        }\n        onClick={onClick}\n        className=\"jkl-spacing--right-1\"\n    >\n        Avbryt\n    </SecondaryButton>\n);\n\nexport const SecondaryCode = `\n<SecondaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={\n        !!boolValues?.[\"withLoader\"]\n            ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n            : undefined\n    }\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Avbryt\n</SecondaryButton>\n`;\n","import React from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { TertiaryButton } from \"../src\";\n\nfunction onClick() {\n    console.log(\"Hello!\");\n}\n\nexport const Tertiary: React.FC<ExampleComponentProps> = ({ boolValues }) => (\n    <TertiaryButton\n        inverted={boolValues && boolValues[\"Invertert\"]}\n        forceCompact={boolValues && boolValues[\"Kompakt\"]}\n        loader={\n            !!boolValues?.[\"withLoader\"]\n                ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n                : undefined\n        }\n        onClick={onClick}\n        className=\"jkl-spacing--right-1\"\n    >\n        Avbryt\n    </TertiaryButton>\n);\n\nexport const TertiaryCode = `\n<TertiaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={\n        !!boolValues?.[\"withLoader\"]\n            ? { showLoader: !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" }\n            : undefined\n    }\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Avbryt\n</TertiaryButton>\n`;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { Primary, PrimaryCode } from \"./Primary\";\nimport { Secondary, SecondaryCode } from \"./Secondary\";\nimport { Tertiary, TertiaryCode } from \"./Tertiary\";\nimport { PrimaryButton, SecondaryButton, TertiaryButton } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst CodeDemo = makeShortcode(\"CodeDemo\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Knapper starter en handling. Teksten på knappen forteller hva som vil skje når brukeren klikker på den.\n    </Ingress>\n    <p><strong parentName=\"p\">{`Primærknapp:`}</strong>{` brukes til den viktigste handlingen på en side - hovedhandlingen. En side kan noen ganger ha mer enn en hovedhandling, men ikke mange.`}</p>\n    <ComponentExample component={Primary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"isLoading\", 'withLoader']\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={PrimaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <p><strong parentName=\"p\">{`Sekundærknapp:`}</strong>{` brukes til handlinger som ikke er like viktige for oss eller brukeren.`}</p>\n    <ComponentExample component={Secondary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"isLoading\", 'withLoader']\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={SecondaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <p><strong parentName=\"p\">{`Tertiærknapp:`}</strong>{` brukes til handlinger som er mindre viktige, eller som kan gi uønskede konsekvenser.`}</p>\n    <ComponentExample component={Tertiary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"isLoading\", 'withLoader']\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={TertiaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <h2>{`Lastemodus`}</h2>\n    <p>{`Hvis du skal bruke lastemodus i knappen må du sørge for at `}<inlineCode parentName=\"p\">{`@fremtind/jkl-loader/loader.min.css`}</inlineCode>{` er lastet inn i klienten.`}</p>\n    <h2>{`Knappetyper`}</h2>\n    <p>{`Disse tre hovedknappetypene har et hierarki. Når brukeren har flere valg samtidig, skal vi kun ha én primærknapp.`}</p>\n    <DoDontExample type=\"do\" description=\"Kun én primærknapp\" image=\"/assets/do-donts/button-do-1.png\" mdxType=\"DoDontExample\" />\n    <DoDontExample type=\"dont\" description=\"Flere primærknapper\" image=\"/assets/do-donts/button-dont-1.png\" mdxType=\"DoDontExample\" />\n    <h2>{`Tekst på knapper`}</h2>\n    <p>{`Knappetekster skal være så enkle og korte som mulig og skal oppfordre til handling. Bruk helst bare to ord:`}</p>\n    <PrimaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"PrimaryButton\">Send inn</PrimaryButton>\n    <SecondaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"SecondaryButton\">Lagre</SecondaryButton>\n    <TertiaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"TertiaryButton\">Avbryt</TertiaryButton>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport classNames from 'classnames';\n\nvar Loader = function Loader(_ref) {\n  var textDescription = _ref.textDescription,\n      _ref$negative = _ref.negative,\n      negative = _ref$negative === void 0 ? false : _ref$negative,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      className = _ref.className,\n      _ref$dataTestAutoId = _ref.dataTestAutoId,\n      dataTestAutoId = _ref$dataTestAutoId === void 0 ? \"jkl-loader\" : _ref$dataTestAutoId,\n      _ref$politeness = _ref.politeness,\n      politeness = _ref$politeness === void 0 ? \"polite\" : _ref$politeness;\n  var componentClassName = classNames(\"jkl-loader\", className, {\n    \"jkl-loader--negative\": negative,\n    \"jkl-loader--inline\": inline\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: componentClassName,\n    \"data-testid\": \"jkl-loader\",\n    \"data-testautoid\": dataTestAutoId,\n    title: textDescription,\n    \"aria-label\": textDescription,\n    role: \"alert\",\n    \"aria-busy\": \"true\",\n    \"aria-live\": politeness\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--left\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--middle\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--right\"\n  }));\n};\n\nexport { Loader };\n"],"names":["BaseButton","forwardRef","props","ref","displayName","makeButtonComponent","buttonType","button","children","className","forceCompact","inverted","onClick","onTouchStart","loader","rest","componentClassName","classNames","handleTouch","event","target","targetTouches","length","Xcoord","clientX","getBoundingClientRect","x","Ycoord","clientY","y","style","setProperty","toPrecision","classList","add","setTimeout","remove","showLoader","disabled","textDescription","negative","inline","PrimaryButton","SecondaryButton","TertiaryButton","console","log","Primary","boolValues","undefined","Secondary","Tertiary","_frontmatter","makeShortcode","name","warn","Ingress","ComponentExample","CodeDemo","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","component","knobs","boolProps","code","type","description","image","isMDXComponent","Loader","_ref","_ref$negative","_ref$inline","_ref$dataTestAutoId","dataTestAutoId","_ref$politeness","politeness","React","title","role"],"sourceRoot":""}