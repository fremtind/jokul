{"version":3,"file":"component---packages-core-documentation-typography-mdx-20a825f0415562cc3d59.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/core/documentation/typography.mdx","webpack://@fremtind/portal/../packages/core/documentation/Typography/Typography.tsx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { NormalExample, SmallExample, LargeExample } from \"./Typography/Typography\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">Vi tilbyr Sass-mixins og utility-klasser for alle de typografiske stilene i Jøkul.</Ingress>\n    <h2>{`Bruk`}</h2>\n    <p>{`For å bruke typografistilene kan du velge mellom å bruke utility-klassene direkte, eller å lage din egen klasse hvor du bruker Sass-mixins for å hente inn riktig stil. Vi anbefaler at du bruker mixins til å lage egne klasser når du lager komponenter til løsningen din, og at du bare bruker utility-klassene til løpende tekst og overskrifter.`}</p>\n    <p>{`For å bruke mixin-ene må du ha satt opp støtte for Sass i prosjektet ditt, og importere Jøkul der du skal bruke dem, f.eks. slik: `}<inlineCode parentName=\"p\">{`@use \"~@fremtind/jkl-core/jkl\";`}</inlineCode>{`. Nøyaktig syntaks kan variere ut fra byggoppsettet ditt.`}</p>\n    <p>{`Les mer om regler for typografi `}<a parentName=\"p\" {...{\n        \"href\": \"/profil/typografi\"\n      }}>{`under Profilen vår`}</a>{`.`}</p>\n    <h3>{`Fontskala`}</h3>\n    <p>{`Dette er tekststilene som tilbys i Jøkul, og hvordan du bruker dem ved hjelp av mixins eller nytteklasser. Stilene tilpasses automatisk på små skjermer.`}</p>\n    <NormalExample mdxType=\"NormalExample\" />\n    <h3>{`Manuell styring av variant`}</h3>\n    <p>{`I de aller fleste tilfeller skal tekststilene brukes som de er, slik at tekststørrelsen tilpasses brukerens skjerm. I noen tilfeller kan det likevel være riktig å spesifisere varianten av en stil, som for eksempel når man lager en versjon av en komponent for informasjonstette løsninger.`}</p>\n    <p>{`For å velge variant må du bruke Sass-mixins, og spesifisere om du vil ha varianten for `}<inlineCode parentName=\"p\">{`small-screen`}</inlineCode>{` eller `}<inlineCode parentName=\"p\">{`large-screen`}</inlineCode>{`: `}<inlineCode parentName=\"p\">{`@include jkl.text-style(\"body/small-screen\");`}</inlineCode></p>\n    <h4>{`Fontskala for små skjermer`}</h4>\n    <SmallExample mdxType=\"SmallExample\" />\n    <h4>{`Fontskala for store skjermer`}</h4>\n    <LargeExample mdxType=\"LargeExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { VFC } from \"react\";\n\nimport \"./Typography.scss\";\n\ninterface ExampleRowProps {\n    text: string;\n    style: string;\n    type?: \"small-screen\" | \"large-screen\";\n}\nconst ExampleRow = ({ text, style, type }: ExampleRowProps) => (\n    <tr className={`jkl-typography-example-table__row ${type ? `force-${type}` : \"\"}`}>\n        <td className=\"jkl-typography-example-table__data\">\n            <p className={`jkl-${style}`}>{text}</p>\n        </td>\n        <td data-header=\"Mixin:\" className=\"jkl-typography-example-table__data\">\n            <p className=\"jkl-small\">\n                <code className=\"jkl-portal-inline-code\">{`@include jkl.text-style(\"${style}${\n                    type ? `/${type}` : \"\"\n                }\")`}</code>\n            </p>\n        </td>\n        {!type && (\n            <td data-header=\"Klasse:\" className=\"jkl-typography-example-table__data\">\n                <p className=\"jkl-small\">\n                    <code className=\"jkl-portal-inline-code\">.jkl-{style}</code>\n                </p>\n            </td>\n        )}\n    </tr>\n);\n\nexport const NormalExample: VFC = () => (\n    <table className=\"jkl-typography-example-table\">\n        <tr>\n            <th className=\"jkl-typography-example-table__header\">Stilnavn</th>\n            <th className=\"jkl-typography-example-table__header\">Mixin</th>\n            <th className=\"jkl-typography-example-table__header\">Utility-klasse</th>\n        </tr>\n        <ExampleRow text=\"Title\" style=\"title\" />\n        <ExampleRow text=\"Heading 1\" style=\"heading-1\" />\n        <ExampleRow text=\"Heading 2\" style=\"heading-2\" />\n        <ExampleRow text=\"Heading 3\" style=\"heading-3\" />\n        <ExampleRow text=\"Heading 4\" style=\"heading-4\" />\n        <ExampleRow text=\"Heading 5\" style=\"heading-5\" />\n        <ExampleRow text=\"Body\" style=\"body\" />\n        <ExampleRow text=\"Small\" style=\"small\" />\n    </table>\n);\n\nexport const SmallExample: VFC = () => (\n    <table className=\"jkl-typography-example-table\" data-compactlayout>\n        <tr>\n            <th className=\"jkl-typography-example-table__header\">Stilnavn</th>\n            <th className=\"jkl-typography-example-table__header\">Mixin</th>\n        </tr>\n        <ExampleRow text=\"Title\" style=\"title\" type=\"small-screen\" />\n        <ExampleRow text=\"Heading 1\" style=\"heading-1\" type=\"small-screen\" />\n        <ExampleRow text=\"Heading 2\" style=\"heading-2\" type=\"small-screen\" />\n        <ExampleRow text=\"Heading 3\" style=\"heading-3\" type=\"small-screen\" />\n        <ExampleRow text=\"Heading 4\" style=\"heading-4\" type=\"small-screen\" />\n        <ExampleRow text=\"Heading 5\" style=\"heading-5\" type=\"small-screen\" />\n        <ExampleRow text=\"Body\" style=\"body\" type=\"small-screen\" />\n        <ExampleRow text=\"Small\" style=\"small\" type=\"small-screen\" />\n    </table>\n);\n\nexport const LargeExample: VFC = () => (\n    <table className=\"jkl-typography-example-table\" data-compactlayout>\n        <tr>\n            <th className=\"jkl-typography-example-table__header\">Stilnavn</th>\n            <th className=\"jkl-typography-example-table__header\">Mixin</th>\n        </tr>\n        <ExampleRow text=\"Title\" style=\"title\" type=\"large-screen\" />\n        <ExampleRow text=\"Heading 1\" style=\"heading-1\" type=\"large-screen\" />\n        <ExampleRow text=\"Heading 2\" style=\"heading-2\" type=\"large-screen\" />\n        <ExampleRow text=\"Heading 3\" style=\"heading-3\" type=\"large-screen\" />\n        <ExampleRow text=\"Heading 4\" style=\"heading-4\" type=\"large-screen\" />\n        <ExampleRow text=\"Heading 5\" style=\"heading-5\" type=\"large-screen\" />\n        <ExampleRow text=\"Body\" style=\"body\" type=\"large-screen\" />\n        <ExampleRow text=\"Small\" style=\"small\" type=\"large-screen\" />\n    </table>\n);\n"],"names":["name","ExampleRow","text","style","type","className","NormalExample","SmallExample","LargeExample","_frontmatter","Ingress","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}