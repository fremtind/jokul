name: Visual regression tests

on:
  pull_request:
    branches:
      - vite-playwright

jobs:
  build:
    outputs:
      visual: ${{ steps.changes.outputs.visual }}
      preview: ${{ steps.changes.outputs.preview }}
      testlint: ${{ steps.changes.outputs.testlint }}
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        if: "!contains(github.event.sender.login, 'fremtind-bot')"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      #- name: Check for changes that require extra verification
      #  if: "!contains(github.event.sender.login, 'fremtind-bot')"
      #  uses: ./actions/paths-filter
      #  id: changes
      #  with:
      #    filters: |
      #      testlint:
      #        - "**/*.js"
      #        - "**/*.scss"
      #        - "**/*.ts"
      #        - "**/*.tsx"
      #        - "pnpm-lock.yaml"
      #      visual:
      #        - "utils/playwright/**"
      #        - "packages/**/*.spec.js"
      #        - "packages/**/*.scss"
      #        - "packages/core/**/!(*.d|*.test).ts"
      #        - "packages/core/**/!(*.test).tsx"
      #        - "packages/*-react/**/!(*.d|*.test).ts"
      #        - "packages/*-react/**/!(*.test).tsx"
      #        - "pnpm-lock.yaml"
      #      preview:
      #        - "packages/**/*.mdx"
      #        - "portal/src/texts/**"

      - name: Setup pnpm
        #if: steps.changes.outputs.has_matches == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        #if: steps.changes.outputs.has_matches == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        with:
            node-version: 18
            cache: "pnpm"

      - name: Monorepo Runner Cache
        #if: steps.changes.outputs.has_matches == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        uses: actions/cache@v3
        id: nx-cache
        with:
          path: .nx
          key: nx-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            nx-${{ hashFiles('pnpm-lock.yaml') }}-

      - name: Install dependencies and build packages
        #if: steps.changes.outputs.has_matches == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        run: pnpm ci:install

      # TODO cache playwright binaries (?)

      - name: Playwright binaries
        #if: steps.changes.outputs.visual == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        run: pnpm exec playwright install --with-deps

      - name: Update integration screenshots
        #if: needs.build.outputs.visual == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        run: pnpm integration:update-screenshots

      - name: Commit screenshots
        run: |
          git config user.email "fremtind.designsystem@fremtind.no"
          git config user.name "fremtind-bot"
          git add **/integration/__screenshots__/* || echo "No updated screenshots, nothing to add!"
          git commit -m "chore: update integration screenshots [playwright]" --no-verify || echo "No updated screenshots, nothing to commit!"
          git push      
