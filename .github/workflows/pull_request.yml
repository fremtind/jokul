name: Pull Request

on:
    pull_request:
        branches:
            - main
##
# Sjekker først om det er endringer som krever grundigere test.
# Bygger i så fall pakkene og cacher dem via turborepo.
# Bygger så portalen dersom det er visuelle endringer og cacher på samme måte.
# Cachen lastes ned av tre jobber: testlint, cypress og preview.
# Førstnevnte kjører enhetstester, ESLint, og TypeScript typesjekk.
# N instanser av cypress-jobben spinner opp og kjører deler av testene fordelt mellom seg.
# Cypressjobben server den ferdigbyggede siten og kjører et utvalg
# av testene. Om en jobb  har nye snapshots lastes disse opp som en artifact.
# Til slutt  sjekker en jobb om nye snapshots har blitt generert av en eller
# flere av cypressjobbene. I så fall samles disse i én commit
# som pushes til branchen som testes.
# Preview-jobben er en bygg og deploy av portalen, med en path prefix lik branchnavnet.
# Brukes som "staging".
##

jobs:
    build:
        outputs:
            visual: ${{ steps.changes.outputs.visual }}
            testlint: ${{ steps.changes.outputs.testlint }}
        runs-on: ubuntu-latest
        permissions:
            actions: write
            contents: read
        steps:
            - name: Checkout
              if: "!contains(github.event.sender.login, 'fremtind-bot')"
              uses: actions/checkout@v3

            - name: Check for changes that require extra verification
              if: "!contains(github.event.sender.login, 'fremtind-bot')"
              uses: dorny/paths-filter@1ec7035ff53cbd7a98744bd986f6ca1c7e17d1cb
              id: changes
              with:
                  filters: |
                      testlint:
                        - "**/*.js"
                        - "**/*.scss"
                        - "**/*.ts"
                        - "**/*.tsx"
                        - "yarn.lock"
                      visual:
                        - "cypress/**"
                        - "packages/**/*.mdx"
                        - "**/*.js"
                        - "**/*.scss"
                        - "**/!(*.d|*.test).ts"
                        - "**/!(*.test).tsx"
                        - "yarn.lock"

            - name: Setup Node
              uses: actions/setup-node@v3
              if: (steps.changes.outputs.visual == 'true' || steps.changes.outputs.testlint == 'true') && !contains(github.event.sender.login, 'fremtind-bot')
              with:
                  node-version: "lts/*"
                  cache: "yarn"

            - name: Turbo Cache
              if: (steps.changes.outputs.visual == 'true' || steps.changes.outputs.testlint == 'true') && !contains(github.event.sender.login, 'fremtind-bot')
              uses: actions/cache@v3
              id: turbo-cache
              with:
                  path: node_modules/.cache/turbo
                  key: turbo-${{ hashFiles('**/package.json') }}

            - name: Install dependencies and build packages
              if: (steps.changes.outputs.visual == 'true' || steps.changes.outputs.testlint == 'true') && !contains(github.event.sender.login, 'fremtind-bot')
              run: yarn ci:install

            - name: Build site
              if: steps.changes.outputs.visual == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
              run: yarn build:docs

    testlint:
        needs: [build]
        if: needs.build.outputs.testlint == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: "lts/*"
                  cache: "yarn"

            - name: Turbo Cache
              id: turbo-cache
              uses: actions/cache@v3
              with:
                  path: node_modules/.cache/turbo
                  key: turbo-${{ hashFiles('**/package.json') }}

            - name: Install dependencies
              run: yarn ci:install

            - name: Lint and test
              run: yarn ci:test

    cypress:
        needs: [build]
        if: needs.build.outputs.visual == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                # Om du legger til flere grupper, husk å legge til en tilsvarende download-action i snapshot
                group: [1, 2, 3]
                groups: [3]
                forced-colors: [true, false]
        permissions:
            actions: write
            contents: read
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: "lts/*"
                  cache: "yarn"

            - name: Turbo Cache
              id: turbo-cache
              uses: actions/cache@v3
              with:
                  path: node_modules/.cache/turbo
                  key: turbo-${{ hashFiles('**/package.json') }}

            - name: Calculate which tests to run
              id: parallel
              uses: outsideopen/cypress-e2e-parallel-test-action@11345a74b311e33022c365f421cf6c906518838b
              with:
                  group: ${{ matrix.group }}
                  groups: ${{ matrix.groups }}
                  test-pattern: |
                      packages/**/*.spec.js
                      portal/**/*.spec.js

            - name: Run Cypress
              uses: cypress-io/github-action@v4
              with:
                  install-command: yarn ci:install-cypress
                  browser: chrome
                  start: yarn serve
                  wait-on: "http://localhost:9000"
                  wait-on-timeout: 280
                  spec: ${{ steps.parallel.outputs.tests }}
              env:
                  FORCED_COLORS: ${{ matrix.forced-colors }}

            - name: Upload screenshots
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: cypress-screenshots-${{ matrix.forced-colors }}-${{ matrix.group }}
                  path: |
                      cypress/screenshots
                      packages/**/integration/**/*.actual.png
                      packages/**/integration/**/*.diff.png

            - name: Debug
              if: success()
              run: git status --porcelain

            - name: Look for new snapshots
              if: success()
              uses: ./actions/changed-files
              id: lfcf
              with:
                  # See the micromatch docs for more examples: https://github.com/micromatch/micromatch#matching-features
                  patterns: |
                      **/__image_snapshots__/*

            - name: Upload snapshots
              uses: actions/upload-artifact@v3
              if: steps.lfcf.outputs.has_changed_files == 'true'
              with:
                  name: cypress-snapshots-${{ matrix.forced-colors }}-${{ matrix.group }}
                  # GitHub will find the lowest common folder to reduce the number of folders
                  # in the uploaded artifact. If you want to preserve the same folder structure
                  # as in your repository when downloading the artifact, include a file from
                  # the root of your repository.
                  path: |
                      cypress.json
                      ${{ steps.lfcf.outputs.changed_files }}

    snapshots:
        needs: [cypress]
        if: needs.build.outputs.visual == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        runs-on: ubuntu-latest
        permissions:
            actions: write
            contents: write
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.event.pull_request.head.ref }}
                  token: ${{ secrets.BOT_PUBLISH_TOKEN }}

            - name: Download snapshots
              uses: actions/download-artifact@v3
              # Sannsynligvis lastet ikke alle jobbene opp nye snapshots
              # Dette gjør at vi får noen errors i oppsummeringen, men selve
              # bygget markeres som grønt.
              continue-on-error: true
              with:
                  name: cypress-snapshots-false-1

            - name: Download snapshots
              uses: actions/download-artifact@v2
              continue-on-error: true
              with:
                  name: cypress-snapshots-false-2

            - name: Download snapshots
              uses: actions/download-artifact@v3
              continue-on-error: true
              with:
                  name: cypress-snapshots-false-3

            - name: Download snapshots
              uses: actions/download-artifact@v3
              continue-on-error: true
              with:
                  name: cypress-snapshots-true-1

            - name: Download snapshots
              uses: actions/download-artifact@v3
              continue-on-error: true
              with:
                  name: cypress-snapshots-true-2

            - name: Download snapshots
              uses: actions/download-artifact@v3
              continue-on-error: true
              with:
                  name: cypress-snapshots-true-3

            - name: Commit snapshots
              run: |
                  git config user.email "fremtind.designsystem@fremtind.no"
                  git config user.name "fremtind-bot"
                  git add . || echo "No updated snapshots, nothing to add!"
                  git commit -m "chore: update cypress snapshots [ci skip cypress]" --no-verify || echo "No updated snapshots, nothing to commit!"
                  git push

    preview:
        needs: [build]
        if: needs.build.outputs.visual == 'true' && !contains(github.event.sender.login, 'fremtind-bot')
        runs-on: ubuntu-latest
        permissions:
            actions: write
            contents: write
            pull-requests: write
        env:
            PREVIEW_PATH: preview/${{ github.event.pull_request.head.ref }}
        steps:
            - name: Add a comment with a link to the preview
              uses: marocchino/sticky-pull-request-comment@a6749bc8ac4329731f34ce30797c089afdfa9e8c
              with:
                  header: preview
                  GITHUB_TOKEN: ${{ secrets.FREMTIND_BOT_ACCESS_TOKEN }}
                  message: |
                      <span aria-hidden="true">🔄</span> **Gjør klar en forhåndsvisning…**
                      <span aria-hidden="true">🔍</span> Commit: ${{ github.sha }}

            - name: Checkout
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.event.pull_request.head.ref }}
                  token: ${{ secrets.BOT_PUBLISH_TOKEN }}

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: "lts/*"
                  cache: "yarn"

            - name: Turbo Cache
              id: turbo-cache
              uses: actions/cache@v3
              with:
                  path: node_modules/.cache/turbo
                  key: turbo-${{ hashFiles('**/package.json') }}

            - name: Install dependencies
              run: yarn ci:install

            - name: Build site with path prefix
              env:
                  PREFIX_PATHS: true
              run: yarn build:docs

            - name: Deploy preview
              env:
                  GH_TOKEN: ${{ secrets.BOT_PUBLISH_TOKEN }}
              run: |
                  git config user.email "fremtind.designsystem@fremtind.no"
                  git config user.name "fremtind-bot"
                  git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/fremtind/jokul.git
                  yarn gh-pages --add --dist portal/public --dest ${{ env.PREVIEW_PATH }} --message "docs: preview #${{ github.event.number }}"

            - name: Add a comment with a link to the preview
              uses: marocchino/sticky-pull-request-comment@a6749bc8ac4329731f34ce30797c089afdfa9e8c
              with:
                  header: preview
                  GITHUB_TOKEN: ${{ secrets.FREMTIND_BOT_ACCESS_TOKEN }}
                  message: |
                      <span aria-hidden="true">✅</span> Forhåndsvisning: https://jokul.fremtind.no/${{ env.PREVIEW_PATH }}
                      <span aria-hidden="true">🔍</span> Commit: ${{ github.sha }}

                      Forhåndsvisningen blir tilgjengelig innen et par minutter. Den fjernes automatisk når pull requesten lukkes.
