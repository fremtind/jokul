name: Pull request

on:
    pull_request:
        branches: ["pre-1.0"]
    merge_group:
        types: [checks_requested]

run-name: Bygg og test ${{ github.event_name == 'merge_group' && github.event.merge_group.head_commit.message || github.event.pull_request.title }}

env:
    PREVIEW_PATH: preview/${{ github.event.pull_request.head.ref }}
    PREFIX_PATHS: true

jobs:
    build:
        name: Sjekk for endringer og bygg pakker
        if: ${{ !contains(github.event.sender.login, 'fremtind-bot') }}
        outputs:
            preview: ${{ steps.changes.outputs.preview }}
            testlint: ${{ steps.changes.outputs.testlint }}
        runs-on: ubuntu-latest
        permissions:
            actions: write
            contents: read
            pull-requests: write
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Check for changes that require extra verification
              if: ${{ github.event_name != 'merge_group' }}
              uses: ./actions/paths-filter
              id: changes
              with:
                  filters: |
                      testlint:
                        - "**/*.js"
                        - "**/*.scss"
                        - "**/*.ts"
                        - "**/*.tsx"
                        - "**/vite.test.config.mjs"
                        - "pnpm-lock.yaml"
                      preview:
                        - "packages/**/*.scss"
                        - "packages/core/**/!(*.d|*.test).ts"
                        - "packages/core/**/!(*.test).tsx"
                        - "packages/*-react/**/!(*.d|*.test).ts"
                        - "packages/*-react/**/!(*.test).tsx"
                        - "pnpm-lock.yaml"
                        - "packages/**/*.mdx"
                        - "portal/src/**"

            - name: Setup pnpm
              if: steps.changes.outputs.has_matches == 'true' || github.event_name == 'merge_group'
              uses: pnpm/action-setup@v4

            - name: Setup Node
              uses: actions/setup-node@v3
              if: steps.changes.outputs.has_matches == 'true' || github.event_name == 'merge_group'
              with:
                  node-version: 18
                  cache: "pnpm"

            - name: Restore Monorepo Runner Cache
              if: github.event_name == 'merge_group'
              uses: actions/cache/restore@v3
              with:
                  path: .nx
                  key: nx-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.sha }}
                  restore-keys: |
                      nx-${{ hashFiles('pnpm-lock.yaml') }}-

            - name: Cache Monorepo Runner
              if: github.event_name == 'pull_request' && steps.changes.outputs.has_matches == 'true'
              uses: actions/cache@v3
              with:
                  path: .nx
                  key: nx-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.sha }}
                  restore-keys: |
                      nx-${{ hashFiles('pnpm-lock.yaml') }}-

            - name: Install dependencies
              if: steps.changes.outputs.has_matches == 'true' || github.event_name == 'merge_group'
              run: pnpm install

            - name: Build packages
              if: steps.changes.outputs.has_matches == 'true' || github.event_name == 'merge_group'
              run: pnpm build

    testlint:
        name: Kjør tester og linting
        needs: [build]
        if: github.event_name == 'merge_group' || (needs.build.outputs.testlint == 'true' && !contains(github.event.sender.login, 'fremtind-bot'))
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup pnpm
              uses: pnpm/action-setup@v4

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "pnpm"

            - name: Restore Monorepo Runner Cache
              uses: actions/cache/restore@v3
              with:
                  path: .nx
                  key: nx-${{ hashFiles('pnpm-lock.yaml') }}-${{ github.sha }}
                  restore-keys: |
                      nx-${{ hashFiles('pnpm-lock.yaml') }}-

              # Steget må være med, men vil være cachet
            - name: Install dependencies
              run: pnpm install

            - name: Build packages
              run: pnpm build

            - name: Lint and test
              run: pnpm ci:test
