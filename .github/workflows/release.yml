name: Publish release

on:
    push:
        branches:
            - main

jobs:
    build-and-publish:
        name: Build and publish
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip release]')"
        permissions:
            actions: write
            contents: write
            packages: write
            deployments: write
        steps:
            - name: Checkout branch
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.BOT_PUBLISH_TOKEN }}
                  fetch-depth: "0" # fetch entire git history

            - name: Fetch version tags
              run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

            - name: Configure CI Git User
              run: |
                  git config --global user.name '@fremtind-bot'
                  git config --global user.email 'fremtind-bot@users.noreply.github.com'
                  git remote set-url origin https://fremtind-bot:$BOT_PUBLISH_TOKEN@github.com/fremtind/jokul

            - name: Setup pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 7
                  run_install: |
                      - args: [--global, lerna-clean-changelogs-cli@^2.0.18]

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "pnpm"

            - name: Install Packages
              run: |
                  pnpm install --frozen-lockfile

            - name: Monorepo Runner Cache
              uses: actions/cache@v3
              id: nx-cache
              with:
                  path: .nx
                  key: nx-${{ github.ref_name }}-${{ github.sha }}
                  restore-keys: |
                      nx-${{ github.ref_name }}-

            - name: Try logout
              continue-on-error: true
              run: npm logout

            - name: Authenticate with Registry
              run: |
                  echo "registry=http://registry.npmjs.org/" >> .npmrc
                  echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
                  npm whoami
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Verify release is needed
              id: lerna_changed
              continue-on-error: true
              run: pnpm version:check

            - name: Publish packages to NPM
              if: steps.lerna_changed.outcome == 'success' # only run if there are changes to publish
              run: pnpm release --yes
              env:
                  GH_TOKEN: ${{ secrets.BOT_PUBLISH_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.BOT_PUBLISH_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Switch registry
              if: steps.lerna_changed.outcome == 'success'
              uses: actions/setup-node@v3
              with:
                  registry-url: "https://npm.pkg.github.com"
                  # Defaults to the user or organization that owns the workflow file
                  scope: "@fremtind"

            - name: Publish packages to GitHub Packages
              if: steps.lerna_changed.outcome == 'success'
              run: pnpm release-gh --yes
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    main-to-external:
        name: Merge main to external-contributions
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - run: gh api --method POST /repos/fremtind/jokul/merges -F base='external-contributions' -F head='main' # do a server-side merge using GitHub API https://cli.github.com/manual/gh_api and https://docs.github.com/en/rest/reference/repos#merging
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
