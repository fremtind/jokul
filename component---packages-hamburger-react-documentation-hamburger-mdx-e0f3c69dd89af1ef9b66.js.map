{"version":3,"sources":["webpack://@fremtind/portal/../packages/hamburger-react/documentation/Hamburger.mdx","webpack://@fremtind/portal/../packages/hamburger-react/src/Hamburger.tsx","webpack://@fremtind/portal/../packages/hamburger-react/documentation/Example.tsx"],"names":["name","Hamburger","isOpen","onClick","inverted","description","className","componentClassname","classnames","type","boolValues","useState","setIsOpen","_frontmatter","ComponentExample","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","knobs","boolProps","component","Example","isMDXComponent"],"mappings":"4MAWsBA,E,yDCCTC,EAAY,SAAC,GAA6F,IAA3FC,EAA0F,EAA1FA,OAAQC,EAAkF,EAAlFA,QAAkF,IAAzEC,gBAAyE,aAAvDC,mBAAuD,MAAzC,YAAyC,MAA5BC,iBAA4B,MAAhB,GAAgB,EAC5GC,EAAqBC,IACvB,gBACA,CACI,yBAA0BN,EAC1B,0BAA2BE,GAE/BE,GAGJ,OACI,0BACIG,KAAK,SACL,aAAYJ,EACZF,QAASA,EACTG,UAAWC,EACX,cAAY,iBAEZ,wBAAMD,UAAU,2BCd5B,EAZgB,SAAC,GAA2C,IAAzCI,EAAwC,EAAxCA,WACf,GAA4BC,eAAS,GAA9BT,EAAP,KAAeU,EAAf,KAEA,OACI,gBAACX,EAAD,CACIC,OAAQA,EACRE,SAAUM,GAAcA,EAAU,UAClCP,QAAS,kBAAMS,GAAWV,O,iBFFzBW,EAAe,GAOtBC,GALgBd,EAKiB,mBALT,SAA6Be,GAEzD,OADAC,QAAQC,KAAK,aAAejB,EAAO,4EAC5B,eAASe,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAI5E,SAACT,EAAD,CAAkBU,MAAO,CACvBC,UAAW,CAAC,cACXC,UAAWC,EAASJ,QAAQ,sBAKnCF,EAAWO,gBAAiB","file":"component---packages-hamburger-react-documentation-hamburger-mdx-e0f3c69dd89af1ef9b66.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <ComponentExample knobs={{\n      boolProps: [\"Invertert\"]\n    }} component={Example} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport classnames from \"classnames\";\n\ninterface Props {\n    isOpen: boolean;\n    onClick: () => void;\n    className?: string;\n    /** @deprecated use data-theme[\"dark|light\"] where possible in stead. this prop is to support IE11 */\n    inverted?: boolean;\n    description?: string;\n}\n\nexport const Hamburger = ({ isOpen, onClick, inverted = false, description = \"Hovedmeny\", className = \"\" }: Props) => {\n    const componentClassname = classnames(\n        \"jkl-hamburger\",\n        {\n            \"jkl-hamburger--is-open\": isOpen,\n            \"jkl-hamburger--inverted\": inverted,\n        },\n        className,\n    );\n\n    return (\n        <button\n            type=\"button\"\n            aria-label={description}\n            onClick={onClick}\n            className={componentClassname}\n            data-testid=\"jkl-hamburger\"\n        >\n            <span className=\"jkl-hamburger__inner\"></span>\n        </button>\n    );\n};\n","import React, { useState } from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { Hamburger } from \"../src\";\n\nconst Example = ({ boolValues }: ExampleComponentProps) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (\n        <Hamburger\n            isOpen={isOpen}\n            inverted={boolValues && boolValues[\"Invertert\"]}\n            onClick={() => setIsOpen(!isOpen)}\n        />\n    );\n};\n\nexport default Example;\n"],"sourceRoot":""}