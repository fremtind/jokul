{"version":3,"file":"component---packages-alert-message-react-documentation-alert-message-mdx-c961ec6e3f02543e9b25.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/alert-message-react/src/common/MessageIcon.tsx","webpack://@fremtind/portal/../packages/alert-message-react/src/AlertMessage.tsx","webpack://@fremtind/portal/../packages/alert-message-react/documentation/AlertMessageExample.tsx","webpack://@fremtind/portal/../packages/alert-message-react/documentation/AlertMessage.mdx"],"sourcesContent":["import React from \"react\";\n\ntype messageTypes = \"info\" | \"error\" | \"success\" | \"warning\";\n\nexport function MessageIcon({ messageType }: { messageType: messageTypes }) {\n    switch (messageType) {\n        case \"error\":\n            return (\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"12\" cy=\"12\" r=\"11.5\" stroke=\"currentColor\" />\n                    <rect\n                        x=\"4\"\n                        y=\"4.22168\"\n                        width=\"1\"\n                        height=\"22\"\n                        transform=\"rotate(-45 4 4.22168)\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            );\n        case \"info\":\n            return (\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"12\" cy=\"12\" r=\"11.5\" stroke=\"currentColor\" />\n                    <path\n                        d=\"M11.952 7.328C12.384 7.328 12.688 7.072 12.688 6.624C12.688 6.192 12.384 5.92 11.952 5.92C11.536 5.92 11.248 6.192 11.248 6.624C11.248 7.072 11.536 7.328 11.952 7.328ZM11.504 18H12.512V9.408H11.504V18Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            );\n        case \"success\":\n            return (\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"12\" cy=\"12\" r=\"11.5\" stroke=\"currentColor\" />\n                    <path d=\"M7 13.5L10 16.5L19.5 7\" stroke=\"currentColor\" />\n                </svg>\n            );\n        case \"warning\":\n            return (\n                <svg width=\"24\" height=\"25\" viewBox=\"0 0 24 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"12\" cy=\"12\" r=\"11.5\" stroke=\"currentColor\" />\n                    <path\n                        className=\"jkl-icon-exclamation\"\n                        d=\"M11.112 14.624H11.688L11.896 11.36V6H10.904V11.36L11.112 14.624ZM11.4 18.24C11.784 18.24 12.136 17.952 12.136 17.504C12.136 17.072 11.784 16.784 11.4 16.784C11.016 16.784 10.664 17.072 10.664 17.504C10.664 17.952 11.016 18.24 11.4 18.24Z\"\n                        fill=\"currentColor\"\n                    />\n                </svg>\n            );\n        default:\n            return null;\n    }\n}\n","import React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { MessageIcon } from \"./common/MessageIcon\";\nimport { IconButton } from \"@fremtind/jkl-icon-button-react\";\n\ntype messageTypes = \"info\" | \"error\" | \"success\" | \"warning\";\n\ninterface Props {\n    children: ReactNode;\n    className?: string;\n    /** @deprecated */\n    inverted?: boolean;\n    maxContentWidth?: string;\n    paddingLeft?: string;\n    role?: string;\n    dismissed?: boolean;\n    dismissAction?: {\n        handleDismiss: () => void;\n        buttonTitle?: string;\n    };\n}\n\nfunction alertFactory(messageType: messageTypes) {\n    return function alertMessage({\n        className = \"\",\n        inverted,\n        maxContentWidth,\n        paddingLeft,\n        role = \"status\",\n        dismissed,\n        dismissAction,\n        children,\n    }: Props) {\n        const componentClassName = classNames(\"jkl-alert-message\", \"jkl-alert-message--\" + messageType, className, {\n            \"jkl-alert-message--dark\": inverted,\n            \"jkl-alert-message--dismissed\": dismissed,\n        });\n\n        const styles = {\n            maxWidth: maxContentWidth,\n            paddingLeft,\n        };\n\n        return (\n            <div className={componentClassName} role={role}>\n                <div className=\"jkl-alert-message__content\" data-testid=\"alert-message-content\" style={{ ...styles }}>\n                    <div aria-hidden className=\"jkl-alert-message__icon\">\n                        <MessageIcon messageType={messageType} />\n                    </div>\n                    <span className=\"jkl-alert-message__message jkl-body\">{children}</span>\n                    {dismissAction?.handleDismiss && (\n                        <IconButton\n                            className=\"jkl-alert-message__dismiss-button\"\n                            iconType=\"clear\"\n                            buttonTitle={dismissAction.buttonTitle || \"Lukk\"}\n                            onClick={dismissAction.handleDismiss}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    };\n}\n\nexport const InfoAlertMessage = alertFactory(\"info\");\nexport const ErrorAlertMessage = alertFactory(\"error\");\nexport const WarningAlertMessage = alertFactory(\"warning\");\nexport const SuccessAlertMessage = alertFactory(\"success\");\n","import React, { useState } from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { InfoAlertMessage, WarningAlertMessage, ErrorAlertMessage, SuccessAlertMessage } from \"../src\";\n\nconst getTypeOfBox = (typeofBox?: string) => {\n    switch (typeofBox) {\n        case \"Infomelding\":\n            return InfoAlertMessage;\n        case \"Suksessmelding\":\n            return SuccessAlertMessage;\n        case \"Advarselmelding\":\n            return WarningAlertMessage;\n        case \"Feilmelding\":\n            return ErrorAlertMessage;\n        default:\n            return InfoAlertMessage;\n    }\n};\n\nexport const Example: React.FC<ExampleComponentProps> = ({ boolValues, choiceValues }) => {\n    const C = getTypeOfBox(choiceValues ? choiceValues[\"Type\"] : \"\");\n    const [dismissed, setDismissed] = useState(false);\n    const dismissAction =\n        boolValues && boolValues[\"Avvisbar\"]\n            ? {\n                  handleDismiss: () => setDismissed(true),\n                  buttonTitle: \"Merk som lest\",\n              }\n            : undefined;\n\n    return (\n        <C inverted={boolValues && boolValues[\"Invertert\"]} dismissed={dismissed} dismissAction={dismissAction}>\n            Hei, jeg er en varslingsmelding av typen {choiceValues ? choiceValues[\"Type\"] : \"ᕙ(⇀‸↼‶)ᕗ\"}\n        </C>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport AlertMessageExample from \"./AlertMessageExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    En varsel melding er en beskjed til brukeren. Det kan være et varsel om at noe er feil, global informasjon eller\n    lignende. En melding består av en beskrivende tekst.\n    </Ingress>\n    <ComponentExample component={AlertMessageExample} knobs={{\n      boolProps: [\"Invertert\", \"Avvisbar\"],\n      choiceProps: [{\n        name: \"Type\",\n        values: [\"Infomelding\", \"Suksessmelding\", \"Advarselmelding\", \"Feilmelding\"],\n        defaultValue: 0\n      }]\n    }} mdxType=\"ComponentExample\" />\n    <h2>{`Bruk`}</h2>\n    <DoDontExample fullWidth type=\"do\" description=\"En global melding plassert øverst på siden\" image=\"/assets/do-donts/alert-message-do-1.png\" mdxType=\"DoDontExample\" />\n    <DoDontExample fullWidth type=\"dont\" description=\"En lokal melding relatert til en komponent. I slike tilfeller skal man bruke Message Box\" image=\"/assets/do-donts/alert-message-dont-1.png\" mdxType=\"DoDontExample\" />\n    <h2>{`Alvorlighetsgrad`}</h2>\n    <p>{`Vi har fire ulike meldinger, med fargene blå, rød, gul og grønn.`}</p>\n    <p><strong parentName=\"p\">{`Blå:`}</strong>{` gir informasjon til brukeren.`}</p>\n    <p><strong parentName=\"p\">{`Gul:`}</strong>{` gir brukeren en advarsel, for eksempel at en funksjonalitet er i beta og derfor er ustabil.`}</p>\n    <p><strong parentName=\"p\">{`Rød:`}</strong>{` gir brukeren en feilmelding, for eksempel hvis det oppstår en systemfeil eller brukeren avbryter en handling.`}</p>\n    <p><strong parentName=\"p\">{`Grønn:`}</strong>{` forteller at en handling var vellykket.`}</p>\n    <h3>{`Tilgjengelighet`}</h3>\n    <p>{`Når vi bruker meldinger med farge, må vi alltid huske å ha en god og beskrivende tekst, siden farge ikke er et godt nok kjennetegn for alle brukere. Skriv en presis meldingstekst, der du sier det viktigste først.`}</p>\n    <h2>{`Avvisbare meldinger`}</h2>\n    <p>{`Dersom meldingen ikke er koblet til en tilstand på siden (som f.eks. en feil i et skjema) kan man la brukeren lukke den. For global informasjon som driftsmeldinger bør man huske valget om å lukke meldingen, så brukeren slipper å se den på nytt.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["MessageIcon","messageType","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","x","y","transform","d","className","alertFactory","inverted","maxContentWidth","paddingLeft","role","dismissed","dismissAction","children","componentClassName","classNames","styles","maxWidth","style","handleDismiss","iconType","buttonTitle","onClick","InfoAlertMessage","ErrorAlertMessage","WarningAlertMessage","SuccessAlertMessage","boolValues","choiceValues","C","typeofBox","getTypeOfBox","useState","setDismissed","undefined","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","AlertMessageExample","knobs","boolProps","choiceProps","values","defaultValue","fullWidth","type","description","image","parentName","isMDXComponent"],"sourceRoot":""}