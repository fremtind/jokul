{"version":3,"file":"component---packages-message-box-react-documentation-message-box-mdx-820a34a0f4961c0754d8.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/message-box-react/src/MessageBox.tsx","webpack://@fremtind/portal/../packages/message-box-react/documentation/MessageBoxExample.tsx","webpack://@fremtind/portal/../packages/message-box-react/documentation/MessageBox.mdx"],"sourcesContent":["import React, { AriaRole, ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport { IconButton } from \"@fremtind/jkl-icon-button-react\";\n\ninterface Props {\n    children: ReactNode;\n    title?: string;\n    fullWidth?: boolean;\n    className?: string;\n    dismissed?: boolean;\n    dismissAction?: {\n        handleDismiss: () => void;\n        buttonTitle?: string;\n    };\n    /** Overstyr standardrollen til meldingen. Om du ønsker å \"skru av\" rollen kan du bruke verdien `none presentation`. */\n    role?: AriaRole;\n}\n\ntype messageTypes = \"info\" | \"error\" | \"success\" | \"warning\";\n\nfunction messageFactory(messageType: messageTypes) {\n    return function messageBox({ title, fullWidth, className = \"\", dismissed, dismissAction, children, role }: Props) {\n        const componentClassName = classNames(\"jkl-message-box\", \"jkl-message-box--\" + messageType, className, {\n            \"jkl-message-box--full\": fullWidth,\n            \"jkl-message-box--dismissed\": dismissed,\n        });\n\n        const getIcon = (messageType: messageTypes) => {\n            switch (messageType) {\n                case \"error\":\n                    return (\n                        <svg\n                            className=\"jkl-message-box__icon\"\n                            aria-hidden\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                clipRule=\"evenodd\"\n                                d=\"M12 24C18.8503 24 24 18.6274 24 12C24 5.37258 18.8503 0 12 0C5.59548 0 0 5.37258 0 12C0 18.6274 5.59548 24 12 24ZM17.43 8.41421L13.6371 12.2071L17.43 16L16.0158 17.4142L12 13.6213L8.43001 17.4142L7.01579 16L10.8087 12.2071L7.01579 8.41421L8.43001 7L12 10.7929L16.0158 7L17.43 8.41421Z\"\n                                fill=\"currentColor\"\n                            />\n                        </svg>\n                    );\n                case \"info\":\n                    return (\n                        <svg\n                            className=\"jkl-message-box__icon\"\n                            aria-hidden\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                clipRule=\"evenodd\"\n                                d=\"M24 12C24 18.6274 18.8503 24 12 24C5.59548 24 0 18.6274 0 12C0 5.37258 5.59548 0 12 0C18.8503 0 24 5.37258 24 12ZM11 17.4142V10H13.2229V17.4142H11.2229ZM12 8.5C12.9133 8.5 13.4729 7.94036 13.4729 7.25C13.4729 6.55964 12.9133 6 12 6C11.5325 6 10.9729 6.55964 10.9729 7.25C10.9729 7.94036 11.5325 8.5 12 8.5Z\"\n                                fill=\"currentColor\"\n                            />\n                        </svg>\n                    );\n                case \"success\":\n                    return (\n                        <svg\n                            className=\"jkl-message-box__icon\"\n                            aria-hidden\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                clipRule=\"evenodd\"\n                                d=\"M12 24C18.8503 24 24 18.6274 24 12C24 5.37258 18.8503 0 12 0C5.59548 0 0 5.37258 0 12C0 18.6274 5.59548 24 12 24ZM11.5503 16.7071L19.0503 9.20711L17.6361 7.79289L10.8432 14.5858L7.26909 11.0116L5.85486 12.4258L10.1361 16.7071L10.8432 17.4142L11.5503 16.7071Z\"\n                                fill=\"currentColor\"\n                            />\n                        </svg>\n                    );\n                case \"warning\":\n                    return (\n                        <svg\n                            className=\"jkl-message-box__icon\"\n                            aria-hidden\n                            viewBox=\"0 0 26 24\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                clipRule=\"evenodd\"\n                                d=\"M22.8058 23L3.19424 23C0.885265 23 -0.558162 20.5008 0.595683 18.5008L10.4015 1.50415C11.5559 -0.496963 14.4441 -0.496963 15.5986 1.50415L25.4043 18.5008C26.5582 20.5008 25.1148 23 22.8058 23ZM14 8.00001L14 15.4142L12 15.4142L12 8.00001L14 8.00001ZM13 17C12.3096 17 11.75 17.5597 11.75 18.25C11.75 18.9404 12.3096 19.5 13 19.5C13.6904 19.5 14.25 18.9404 14.25 18.25C14.25 17.5597 13.6904 17 13 17Z\"\n                                fill=\"currentColor\"\n                            />\n                        </svg>\n                    );\n                default:\n                    return null;\n            }\n        };\n\n        const getRole = (messageType: messageTypes) => {\n            switch (messageType) {\n                case \"error\":\n                case \"warning\":\n                    return \"alert\";\n                case \"info\":\n                case \"success\":\n                    return \"status\";\n                default:\n                    return undefined;\n            }\n        };\n\n        const hasStringChild = React.Children.map(children, (child) => typeof child === \"string\");\n\n        const newChildren = hasStringChild?.[0] ? <p className=\"jkl-body\">{children}</p> : children;\n\n        return (\n            <div className={componentClassName} role={role || getRole(messageType)} data-theme=\"light\">\n                {getIcon(messageType)}\n                <div className=\"jkl-message-box__content\">\n                    {title !== undefined && <p className=\"jkl-message-box__title\">{title}</p>}\n                    {newChildren}\n                </div>\n                {dismissAction?.handleDismiss && (\n                    <IconButton\n                        className=\"jkl-message-box__dismiss-button\"\n                        iconType=\"clear\"\n                        buttonTitle={dismissAction.buttonTitle || \"Lukk\"}\n                        onClick={dismissAction.handleDismiss}\n                    />\n                )}\n            </div>\n        );\n    };\n}\n\nexport const InfoMessageBox = messageFactory(\"info\");\nexport const ErrorMessageBox = messageFactory(\"error\");\nexport const WarningMessageBox = messageFactory(\"warning\");\nexport const SuccessMessageBox = messageFactory(\"success\");\n","import React, { useState } from \"react\";\nimport { NavLink } from \"@fremtind/jkl-core\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { ErrorMessageBox, InfoMessageBox, SuccessMessageBox, WarningMessageBox } from \"../src\";\n\nconst getTypeOfBox = (typeofBox?: string) => {\n    switch (typeofBox) {\n        case \"Infomelding\":\n            return InfoMessageBox;\n        case \"Suksessmelding\":\n            return SuccessMessageBox;\n        case \"Advarselsmelding\":\n            return WarningMessageBox;\n        case \"Feilmelding\":\n            return ErrorMessageBox;\n        default:\n            return InfoMessageBox;\n    }\n};\n\nexport const Example: React.FC<ExampleComponentProps> = ({ boolValues, choiceValues }) => {\n    const [dismissed, setDismissed] = useState(false);\n    const C = getTypeOfBox(choiceValues ? choiceValues[\"Type\"] : \"\");\n    const dismissAction =\n        boolValues && boolValues[\"Avvisbar\"]\n            ? {\n                  handleDismiss: () => setDismissed(true),\n                  buttonTitle: \"Merk som lest\",\n              }\n            : undefined;\n    return (\n        <C\n            fullWidth={boolValues && boolValues[\"Full bredde\"]}\n            title={choiceValues && choiceValues[\"Type\"]}\n            dismissed={dismissed}\n            dismissAction={dismissAction}\n        >\n            Hei, jeg er en melding av typen {choiceValues ? choiceValues[\"Type\"] : \"ʕ•ᴥ•ʔ\"} med{\" \"}\n            <NavLink href=\"/\">en navlink</NavLink>\n        </C>\n    );\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { Example } from \"./MessageBoxExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    En melding er en beskjed til brukeren. Det kan være et varsel om at noe er feil, informasjon om at noe mangler i et\n    skjema, eller en bekreftelse på at noe har blitt oppdatert. Meldingene består av en overskrift og en meldingstekst.\n    </Ingress>\n    <ComponentExample component={Example} knobs={{\n      boolProps: [\"Full bredde\", \"Avvisbar\"],\n      choiceProps: [{\n        name: \"Type\",\n        values: [\"Infomelding\", \"Suksessmelding\", \"Advarselsmelding\", \"Feilmelding\"],\n        defaultValue: 0\n      }]\n    }} mdxType=\"ComponentExample\" />\n    <h2>{`Meldingstyper`}</h2>\n    <p>{`Vi har fire ulike meldinger, med fargene blå, rød, gul og grønn.`}</p>\n    <p><strong parentName=\"p\">{`Blå:`}</strong>{` gir informasjon til brukeren.`}</p>\n    <p><strong parentName=\"p\">{`Gul:`}</strong>{` gir brukeren en advarsel, for eksempel at en funksjonalitet er i beta og derfor er ustabil.`}</p>\n    <p><strong parentName=\"p\">{`Rød:`}</strong>{` gir brukeren en feilmelding, for eksempel hvis det oppstår en systemfeil eller brukeren avbryter en handling.`}</p>\n    <p><strong parentName=\"p\">{`Grønn:`}</strong>{` forteller at en handling var vellykket.`}</p>\n    <h3>{`Tilgjengelighet`}</h3>\n    <p>{`Når vi bruker meldinger med farge, må vi alltid huske å ha en god og beskrivende overskrift, siden farge ikke er et godt nok kjennetegn for alle brukere. Skriv en presis meldingstekst, der du sier det viktigste først.`}</p>\n    <h2>{`Avvisbare meldinger`}</h2>\n    <p>{`Dersom meldingen ikke er koblet til en tilstand på siden (som f.eks. en feil i et skjema) kan man la brukeren lukke den. For global informasjon som driftsmeldinger bør man huske valget om å lukke meldingen, så brukeren slipper å se den på nytt.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["messageFactory","messageType","title","fullWidth","className","dismissed","dismissAction","children","role","componentClassName","classNames","hasStringChild","React","child","newChildren","getRole","viewBox","fill","xmlns","fillRule","clipRule","d","getIcon","undefined","handleDismiss","iconType","buttonTitle","onClick","InfoMessageBox","ErrorMessageBox","WarningMessageBox","SuccessMessageBox","Example","boolValues","choiceValues","useState","setDismissed","C","typeofBox","getTypeOfBox","href","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","knobs","boolProps","choiceProps","values","defaultValue","parentName","isMDXComponent"],"sourceRoot":""}