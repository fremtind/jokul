{"version":3,"file":"component---packages-text-input-react-documentation-autosuggest-mdx-519818abda5d9ac88ad0.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/text-input-react/documentation/AutosuggestExample.tsx","webpack://@fremtind/portal/../packages/text-input-react/documentation/Autosuggest.mdx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { Autosuggest } from \"../src\";\n\nexport const AutosuggestExample: React.FC<ExampleComponentProps> = ({ boolValues, choiceValues }) => {\n    const [value, setValue] = useState(\"\");\n    const [value2, setValue2] = useState(\"\");\n\n    const allItems = [\n        \"Afghanistan\",\n        \"Aland Islands\",\n        \"Algeria\",\n        \"Australia\",\n        \"Austria\",\n        \"Bahrain\",\n        \"Bangladesh\",\n        \"Benin\",\n        \"Bermuda\",\n        \"Bhutan\",\n    ];\n\n    const filteredItems = allItems.filter((item) => item.toLowerCase().includes(value2.toLowerCase()));\n\n    return (\n        <div style={{ maxWidth: \"400px\", width: \"100%\" }}>\n            <Autosuggest\n                label=\"Velg land\"\n                onChange={setValue}\n                value={value}\n                onConfirm={() => console.log(\"onConfirm\")}\n                allItems={allItems}\n                helpLabel={boolValues?.Hjelpetekst ? \"Velg et land\" : undefined}\n                errorLabel={boolValues?.Feiltekst ? \"Du må velge et land\" : undefined}\n                leadText={boolValues?.Leadtekst ? \"Velg det beste landet\" : undefined}\n                placeholder={boolValues?.Placeholder ? \"Velg et land\" : undefined}\n                showDropdownControllerButton={boolValues && boolValues[\"Vis kontroller\"]}\n                noHitsMessage={boolValues && boolValues[\"Ingen treff\"] ? \"Tror ikke det er et land\" : undefined}\n                maxNumberOfHits={boolValues && boolValues[\"Max antall treff\"] ? 3 : undefined}\n                variant={(choiceValues?.Variant as \"small\" | \"medium\" | \"large\") || \"medium\"}\n                inverted={boolValues?.Invertert}\n            />\n\n            <Autosuggest\n                className=\"jkl-layout-spacing--small-top\"\n                label=\"Velg land med fritekst\"\n                onInputValueChange={setValue2}\n                onChange={setValue2}\n                value={value2}\n                onConfirm={() => console.log(\"onConfirm\")}\n                allItems={filteredItems}\n                helpLabel={boolValues?.Hjelpetekst ? \"Velg et land\" : undefined}\n                errorLabel={boolValues?.Feiltekst ? \"Du må velge et land\" : undefined}\n                leadText={boolValues?.Leadtekst ? \"Velg det beste landet\" : undefined}\n                placeholder={boolValues?.Placeholder ? \"Velg et land\" : undefined}\n                showDropdownControllerButton={boolValues && boolValues[\"Vis kontroller\"]}\n                noHitsMessage={boolValues && boolValues[\"Ingen treff\"] ? \"Tror ikke det er et land\" : undefined}\n                maxNumberOfHits={boolValues && boolValues[\"Max antall treff\"] ? 3 : undefined}\n                variant={(choiceValues?.Variant as \"small\" | \"medium\" | \"large\") || \"medium\"}\n                inverted={boolValues?.Invertert}\n            />\n        </div>\n    );\n};\n\nexport default AutosuggestExample;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport AutosuggestExample from \"./AutosuggestExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst Experimental = makeShortcode(\"Experimental\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Autosuggest er en del av{\" \"}\n    <a className=\"jkl-link\" href=\"/komponenter/textinput\">\n        text-input\n    </a>{\" \"}\n    pakken, og kan brukes til å gi brukerene forslag basert på det man legger inn. Den er spesielt nyttig når brukeren må/kan\n    velge fra en veldig lang liste med potensielle resultat. Komponenten kan også brukes async, hvor resultatene hentes etter at\n    brukeren har tastet inn x antall tegn.\n    </Ingress>\n    <Experimental mdxType=\"Experimental\">\n    Denne bruker{\" \"}\n    <a className=\"jkl-link jkl-link--external\" href=\"https://github.com/downshift-js/downshift\">\n        downshift.js\n    </a>{\" \"}\n    isteden for{\" \"}\n    <a className=\"jkl-link jkl-link--external\" href=\"https://static.nrk.no/core-components/latest/index.html?core-suggest/readme.md\">\n        NRK Core-components\n    </a>\n    . Du må gjerne bruke denne, men forvent at Autosuggest kommer til å bli skrevet om. Det kommer til å være breaking changes.\n    </Experimental>\n    <ComponentExample component={AutosuggestExample} knobs={{\n      boolProps: [\"Invertert\", \"Hjelpetekst\", \"Feiltekst\", \"Leadtekst\", \"Ingen treff\", \"Max antall treff\", \"Placeholder\", \"Vis kontroller\"],\n      choiceProps: [{\n        name: \"Variant\",\n        values: [\"small\", \"medium\", \"large\"],\n        defaultValue: 0\n      }]\n    }} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["boolValues","choiceValues","useState","value","setValue","value2","setValue2","allItems","filteredItems","filter","item","toLowerCase","includes","style","maxWidth","width","label","onChange","onConfirm","console","log","helpLabel","Hjelpetekst","undefined","errorLabel","Feiltekst","leadText","Leadtekst","placeholder","Placeholder","showDropdownControllerButton","noHitsMessage","maxNumberOfHits","variant","Variant","inverted","Invertert","className","onInputValueChange","_frontmatter","makeShortcode","name","props","warn","Ingress","Experimental","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","href","component","AutosuggestExample","knobs","boolProps","choiceProps","values","defaultValue","isMDXComponent"],"sourceRoot":""}