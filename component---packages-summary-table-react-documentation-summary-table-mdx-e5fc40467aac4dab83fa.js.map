{"version":3,"file":"component---packages-summary-table-react-documentation-summary-table-mdx-e5fc40467aac4dab83fa.js","mappings":"uQAgBaA,EAA0B,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,mBAAoBC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC5E,OACI,yBAAOD,UAAWE,GAAAA,CAAG,oBAAqB,WAAYF,IAClD,yBAAOA,UAAU,eACb,0BACKF,EAAmBK,KAAI,SAACC,EAAUC,GAAX,OACpB,sBAAIC,MAAM,MAAMC,IAAQH,EAAL,IAAiBC,GAC/BD,QAMjB,6BACKL,EAAMI,KAAI,WAAiCE,GAAjC,IAAGG,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,IAAiBC,KAAAA,OAAjB,gBACP,sBAAIH,IAAQC,EAAL,IAAcH,GACjB,sBAAIC,MAAM,OACN,wBAAMN,UAAWE,GAAAA,CAAG,CAAE,+BAAgCQ,KAAUF,IAEpE,0BAAKC,QAKhBR,GACG,6BACI,0BACI,sBAAIK,MAAM,OAAOL,MAAAA,OAAjB,EAAiBA,EAAQO,OACzB,0BAAKP,MAAAA,OAAL,EAAKA,EAAQQ,WC7BxBE,EAAY,CACrBb,mBAdkC,CAAC,UAAW,SAe9CC,MAbqB,CACrB,CAAES,MAAO,SAAUC,MAAO,GAAIC,MAAM,GACpC,CAAEF,MAAM,mBAAkCC,MAAM,eAChD,CAAED,MAAM,yBAAwCC,MAAM,eACtD,CAAED,MAAO,QAASC,MAAO,GAAIC,MAAM,GACnC,CAAEF,MAAO,kBAAmBC,MAAO,cACnC,CAAED,MAAO,kBAAmBC,MAAO,eAQnCR,OALsB,CAAEO,MAAO,YAAaC,MAAO,eCCvD,EARwD,WACpD,OACI,uBAAKT,UAAU,yBACX,gBAACH,EAAiBc,K,iBCCjBC,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,SAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAI5E,SAACP,EAAD,CAASO,QAAQ,WAAjB,6JAIA,SAACN,EAAD,CAAkBO,UAAWC,EAASF,QAAQ,sBAKlDF,EAAWK,gBAAiB","sources":["webpack://@fremtind/portal/../packages/summary-table-react/src/SummaryTable.tsx","webpack://@fremtind/portal/../packages/summary-table-react/mocks/index.ts","webpack://@fremtind/portal/../packages/summary-table-react/documentation/Example.tsx","webpack://@fremtind/portal/../packages/summary-table-react/documentation/SummaryTable.mdx"],"sourcesContent":["import React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nexport interface Item {\n    label: string;\n    value: string;\n    bold?: boolean;\n}\n\nexport interface Props {\n    columnDescriptions: [string, string];\n    items: Item[];\n    className?: string;\n    footer?: Item;\n}\n\nexport const SummaryTable: FC<Props> = ({ columnDescriptions, items, className, footer }) => {\n    return (\n        <table className={cn(\"jkl-summary-table\", \"jkl-body\", className)}>\n            <thead className=\"jkl-sr-only\">\n                <tr>\n                    {columnDescriptions.map((category, index) => (\n                        <th scope=\"col\" key={`${category}-${index}`}>\n                            {category}\n                        </th>\n                    ))}\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map(({ label, value, bold = false }, index) => (\n                    <tr key={`${label}-${index}`}>\n                        <th scope=\"row\">\n                            <span className={cn({ \"jkl-summary-table__row--bold\": bold })}>{label}</span>\n                        </th>\n                        <td>{value}</td>\n                    </tr>\n                ))}\n            </tbody>\n\n            {footer && (\n                <tfoot>\n                    <tr>\n                        <th scope=\"row\">{footer?.label}</th>\n                        <td>{footer?.value}</td>\n                    </tr>\n                </tfoot>\n            )}\n        </table>\n    );\n};\n","const SOFT_HYPHEN = \"\\u00AD\";\n\nexport const mockColumnDescriptions = [\"Product\", \"Price\"] as [string, string];\n\nexport const mockItems = [\n    { label: \"Person\", value: \"\", bold: true },\n    { label: `Barne${SOFT_HYPHEN}forsikring`, value: `200 ${SOFT_HYPHEN}kr/mnd` },\n    { label: `Behandlings${SOFT_HYPHEN}forsikring`, value: `200 ${SOFT_HYPHEN}kr/mnd` },\n    { label: \"Skade\", value: \"\", bold: true },\n    { label: \"Innboforsikring\", value: \"100 kr/mnd\" },\n    { label: \"Reiseforsikring\", value: \"100 kr/mnd\" },\n];\n\nexport const mockFooter = { label: \"Total sum\", value: \"600 kr/mnd\" };\n\nexport const mockProps = {\n    columnDescriptions: mockColumnDescriptions,\n    items: mockItems,\n    footer: mockFooter,\n};\n","import React from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { SummaryTable } from \"../src\";\nimport { mockProps } from \"../mocks\";\nimport \"./Example.scss\";\n\nexport const Example: React.FC<ExampleComponentProps> = () => {\n    return (\n        <div className=\"summary-table-example\">\n            <SummaryTable {...mockProps} />\n        </div>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { SummaryTable } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Summary table brukes for å oppsumere et sett med elementer. \n    Dette kan for eksempel være å vise produkter i handlekurven med informasjon om navn og pris. \n    </Ingress>\n    <ComponentExample component={Example} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["SummaryTable","columnDescriptions","items","className","footer","cn","map","category","index","scope","key","label","value","bold","mockProps","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","Example","isMDXComponent"],"sourceRoot":""}