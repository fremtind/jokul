{"version":3,"file":"component---src-texts-getstarted-examples-mdx-d274db8e73d137d94de2.js","mappings":"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","sources":["webpack://@fremtind/portal/./src/components/Examples/SimpleForm/PersonalInfoForm.tsx","webpack://@fremtind/portal/./src/components/Examples/SimpleForm/AddressForm.tsx","webpack://@fremtind/portal/./src/components/Examples/SimpleForm/HouseDetailsForm.tsx","webpack://@fremtind/portal/./src/components/Examples/SimpleForm.tsx","webpack://@fremtind/portal/./src/texts/getstarted/Examples.mdx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { TextInput } from \"@fremtind/jkl-text-input-react\";\nimport { PrimaryButton } from \"@fremtind/jkl-button-react\";\nimport { ExampleContext } from \"../../../../../doc-utils\";\nimport { Label } from \"@fremtind/jkl-core\";\n\ninterface Props {\n    onSubmit: (arg0: boolean) => void;\n}\n\nconst PersonalInfoForm: React.FC<Props> = ({ onSubmit }) => {\n    const [showNext, setShowNext] = useState(true);\n    const { darkMode, isCompact } = useContext(ExampleContext);\n    const { register, handleSubmit, formState } = useForm();\n\n    const handleChange = () => {\n        setShowNext(true);\n        onSubmit(false);\n    };\n\n    const submit = () => {\n        setShowNext(false);\n        onSubmit(true);\n    };\n\n    const fornavnInput = register(\"fornavn\", { required: true });\n    const etternavnInput = register(\"etternavn\", { required: true });\n    const personnummerInput = register(\"personnummer\", {\n        required: true,\n        maxLength: 11,\n        minLength: 11,\n        pattern: /^[0-9]*$/,\n    });\n\n    return (\n        <form onSubmit={handleSubmit(submit)}>\n            <Label\n                standAlone\n                variant=\"large\"\n                className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n            >\n                Første steg\n            </Label>\n            <TextInput\n                className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                label=\"Fornavn\"\n                errorLabel={formState.errors.fornavn ? \"Du må fylle inn fornavn\" : \"\"}\n                inverted={darkMode}\n                forceCompact={isCompact}\n                {...fornavnInput}\n                onChange={(e) => {\n                    fornavnInput.onChange(e);\n                    handleChange();\n                }}\n                variant=\"small\"\n            />\n            <TextInput\n                className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                label=\"Etternavn\"\n                errorLabel={formState.errors.etternavn ? \"Du må fylle inn etternavn\" : \"\"}\n                inverted={darkMode}\n                forceCompact={isCompact}\n                {...etternavnInput}\n                onChange={(e) => {\n                    etternavnInput.onChange(e);\n                    handleChange();\n                }}\n                variant=\"small\"\n            />\n            <TextInput\n                className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                label=\"Personnummer\"\n                errorLabel={formState.errors.personnummer ? \"Du må fylle inn personnummer\" : \"\"}\n                helpLabel=\"Vi lagrer ikke ditt personnummer\"\n                inverted={darkMode}\n                forceCompact={isCompact}\n                maxLength={11}\n                type=\"tel\"\n                placeholder=\"11 siffer\"\n                {...personnummerInput}\n                onChange={(e) => {\n                    personnummerInput.onChange(e);\n                    handleChange();\n                }}\n                variant=\"small\"\n            />\n            {showNext && (\n                <PrimaryButton\n                    forceCompact={isCompact}\n                    inverted={darkMode}\n                    className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                >\n                    Gå videre\n                </PrimaryButton>\n            )}\n        </form>\n    );\n};\n\nexport default PersonalInfoForm;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { TextInput } from \"@fremtind/jkl-text-input-react\";\nimport { PrimaryButton } from \"@fremtind/jkl-button-react\";\nimport { ExampleContext } from \"../../../../../doc-utils\";\nimport { useScrollIntoView } from \"@fremtind/jkl-react-hooks\";\nimport { InfoMessageBox } from \"@fremtind/jkl-message-box-react\";\n\nimport \"./AddressForm.scss\";\nimport { Select } from \"@fremtind/jkl-select-react\";\n\ninterface Props {\n    onSubmit: (arg0: boolean) => void;\n}\n\nconst AddressForm: React.FC<Props> = ({ onSubmit }) => {\n    const [showNext, setShowNext] = useState(true);\n    const { darkMode, isCompact } = useContext(ExampleContext);\n    const { register, handleSubmit, formState, watch } = useForm();\n    const ref = useRef<HTMLFormElement>(null);\n    const numberRef = useRef<HTMLDivElement>(null);\n\n    useScrollIntoView({ ref });\n\n    const postnummer = watch(\"postnummer\");\n\n    const handleChange = () => {\n        setShowNext(true);\n        onSubmit(false);\n    };\n\n    const submit = () => {\n        setShowNext(false);\n        onSubmit(true);\n    };\n\n    const postnummerInput = register(\"postnummer\", { required: true, maxLength: 4, minLength: 4, pattern: /^[0-9]*$/ });\n    const streetnameInput = register(\"streetName\", { required: true });\n\n    return (\n        <motion.form\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onSubmit={handleSubmit(submit)}\n            style={{ position: \"relative\" }}\n        >\n            <aside style={{ position: \"absolute\", top: \"-150px\" }} ref={ref} />\n            <InfoMessageBox\n                title=\"Fant ikke addresse\"\n                fullWidth\n                className={`jkl-spacing-${isCompact ? \"2xl\" : \"3xl\"}--top jkl-spacing-l--bottom`}\n            >\n                Vi fant ikke addressen din i vår database. Fortell oss hvor du bor.\n            </InfoMessageBox>\n            <div className=\"jkl-simple-form__postal-group\">\n                <TextInput\n                    variant=\"large\"\n                    label=\"Postnummer\"\n                    className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                    errorLabel={formState.errors.postnummer ? \"Du må fylle inn postnummer\" : \"\"}\n                    inverted={darkMode}\n                    forceCompact={isCompact}\n                    maxLength={6}\n                    placeholder=\"4 siffer\"\n                    type=\"tel\"\n                    {...postnummerInput}\n                    onChange={(e) => {\n                        postnummerInput.onChange(e);\n                        handleChange();\n                    }}\n                />\n                <AnimatePresence>\n                    {postnummer?.toString().length === 4 && (\n                        <motion.p\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                            className={`jkl-simple-form__postal-group__area ${\n                                isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacingls--bottom\"\n                            }`}\n                        >\n                            Geilo\n                        </motion.p>\n                    )}\n                </AnimatePresence>\n            </div>\n            <AnimatePresence>\n                {postnummer?.toString().length === 4 && (\n                    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n                        <TextInput\n                            variant=\"medium\"\n                            label=\"Gatenavn\"\n                            className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                            errorLabel={formState.errors.streetName ? \"Du må fylle inn gateadresse\" : \"\"}\n                            inverted={darkMode}\n                            forceCompact={isCompact}\n                            type=\"text\"\n                            {...streetnameInput}\n                            onChange={(e) => {\n                                streetnameInput.onChange(e);\n                                handleChange();\n                            }}\n                        />\n                    </motion.div>\n                )}\n            </AnimatePresence>\n            <AnimatePresence>\n                {postnummer?.toString().length === 4 && (\n                    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} ref={numberRef}>\n                        <Select\n                            className={`jkl-simple-form__postal-group__house-number ${\n                                isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacingls--bottom\"\n                            }`}\n                            items={[\"1\", \"3\", \"5\", \"7\", \"9\"]}\n                            label=\"Nummer\"\n                        />\n                    </motion.div>\n                )}\n            </AnimatePresence>\n            {showNext && (\n                <PrimaryButton\n                    forceCompact={isCompact}\n                    inverted={darkMode}\n                    className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                >\n                    Gå videre\n                </PrimaryButton>\n            )}\n        </motion.form>\n    );\n};\n\nexport default AddressForm;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { PrimaryButton } from \"@fremtind/jkl-button-react\";\nimport { ExampleContext } from \"../../../../../doc-utils\";\nimport { useScrollIntoView } from \"@fremtind/jkl-react-hooks\";\nimport { ErrorMessageBox } from \"@fremtind/jkl-message-box-react\";\nimport { RadioButtons } from \"@fremtind/jkl-radio-button-react\";\n\ninterface Props {\n    onSubmit: () => void;\n}\n\nconst HouseDetailsForm: React.FC<Props> = ({ onSubmit }) => {\n    const { darkMode, isCompact } = useContext(ExampleContext);\n    const [houseType, setHouseType] = useState<string>();\n    const ref = useRef<HTMLFormElement>(null);\n\n    useScrollIntoView({ ref });\n\n    return (\n        <motion.form\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSubmit();\n            }}\n            style={{ position: \"relative\" }}\n        >\n            <aside style={{ position: \"absolute\", top: \"-150px\" }} ref={ref} />\n            <RadioButtons\n                choices={[\"Enebolig\", \"Tomannsbolig\", \"Rekkehus\", \"Leilighet\"]}\n                legend=\"Hvilken boligtype?\"\n                name=\"housetype\"\n                onChange={(e) => setHouseType(e.target.value)}\n                selectedValue={houseType}\n                className={\n                    isCompact\n                        ? \"jkl-spacing-l--bottom jkl-spacing-xl--top\"\n                        : \"jkl-spacing-xl--bottom jkl-spacing-2xl--top\"\n                }\n                variant=\"large\"\n            />\n\n            <AnimatePresence>\n                {houseType === \"Enebolig\" && (\n                    <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                    >\n                        <ErrorMessageBox title=\"Vi forsikrer ikke eneboliger\">\n                            Fordi vi ville vise en alternativ sti her så har vi lagt inn denne tulleregelen. Kontakt\n                            nærmeste person for å få vite mer om dette.\n                        </ErrorMessageBox>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n            {houseType !== \"Enebolig\" && (\n                <PrimaryButton\n                    forceCompact={isCompact}\n                    inverted={darkMode}\n                    className={isCompact ? \"jkl-spacing-l--bottom\" : \"jkl-spacing-xl--bottom\"}\n                >\n                    Gå videre\n                </PrimaryButton>\n            )}\n        </motion.form>\n    );\n};\n\nexport default HouseDetailsForm;\n","import React, { useContext, useState, useEffect, VFC } from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { TertiaryButton } from \"@fremtind/jkl-button-react\";\nimport { ExampleContext } from \"../../../../doc-utils\";\n\nimport PersonalInfoForm from \"./SimpleForm/PersonalInfoForm\";\nimport AddressForm from \"./SimpleForm/AddressForm\";\nimport HouseDetailsForm from \"./SimpleForm/HouseDetailsForm\";\n\nconst SimpleForm: VFC = () => {\n    const [showAddress, setShowAddress] = useState(false);\n    const [showHouseDetails, setShowHouseDetails] = useState(false);\n    const { registerKnobs } = useContext(ExampleContext);\n\n    useEffect(() => {\n        if (registerKnobs) {\n            registerKnobs([\n                <TertiaryButton onClick={() => location.reload()} key=\"reset\">\n                    Reset\n                </TertiaryButton>,\n            ]);\n        }\n    }, [registerKnobs]);\n\n    return (\n        <section>\n            <h1 className=\"jkl-title jkl-spacing-2xl--top jkl-spacing-xl--bottom\">Liksomskjema</h1>\n            <p className=\"jkl-heading-2 jkl-spacing-xl--bottom\">\n                Har du husforsikring får du erstatning slik at du kan reparere eller bygge nytt hvis noe skjer med\n                boligen din.\n            </p>\n            <PersonalInfoForm onSubmit={setShowAddress} />\n            <AnimatePresence>{showAddress && <AddressForm onSubmit={setShowHouseDetails} />}</AnimatePresence>\n            <AnimatePresence>\n                {showHouseDetails && <HouseDetailsForm onSubmit={() => console.log(\"yeah\")} />}\n            </AnimatePresence>\n        </section>\n    );\n};\n\nexport default SimpleForm;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport SimpleForm from \"../../components/Examples/SimpleForm\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst FlowExample = makeShortcode(\"FlowExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Eksempler`}</h1>\n    <Ingress mdxType=\"Ingress\">Her finner du eksempler på hvordan du kan bruke Jøkul</Ingress>\n    <h2>{`Enkelt skjema`}</h2>\n    <FlowExample mdxType=\"FlowExample\">\n    <SimpleForm mdxType=\"SimpleForm\" />\n    </FlowExample>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["onSubmit","useState","showNext","setShowNext","useContext","ExampleContext","darkMode","isCompact","useForm","register","handleSubmit","formState","handleChange","fornavnInput","required","etternavnInput","personnummerInput","maxLength","minLength","pattern","standAlone","variant","className","label","errorLabel","errors","fornavn","inverted","forceCompact","onChange","e","etternavn","personnummer","helpLabel","type","placeholder","watch","ref","useRef","numberRef","useScrollIntoView","postnummer","postnummerInput","streetnameInput","motion","initial","opacity","animate","exit","style","position","top","title","fullWidth","AnimatePresence","toString","length","streetName","items","houseType","setHouseType","preventDefault","choices","legend","name","target","value","selectedValue","showAddress","setShowAddress","showHouseDetails","setShowHouseDetails","registerKnobs","useEffect","onClick","location","reload","key","console","log","_frontmatter","makeShortcode","props","warn","Ingress","FlowExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","isMDXComponent"],"sourceRoot":""}