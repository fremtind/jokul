{"version":3,"file":"component---packages-tag-react-documentation-tag-mdx-1da9fe81acdc6c74a726.js","mappings":"8RAsBA,SAASA,EAAWC,GAChB,IAAMC,EAAiB,SAAC,GAAD,MAAGC,EAAH,EAAGA,UAAcC,GAAjB,mBACnB,sCACID,UAAWE,GAAAA,CACP,WADS,OAGJ,iBAA8B,SAAZJ,EAHd,EAIJ,kBAA+B,UAAZA,EAJf,EAKJ,oBAAiC,YAAZA,EALjB,EAMJ,oBAAiC,YAAZA,EANjB,GAQTE,IAEAC,KAIZ,OADAF,EAAII,YA/BR,SAAwBL,GACpB,OAAQA,GACJ,IAAK,OACD,MAAO,UACX,IAAK,QACD,MAAO,WACX,IAAK,UACD,MAAO,aACX,IAAK,UACD,MAAO,aACX,QACI,MAAO,OAoBGM,CAAeN,GAC1BC,EAGJ,IAAMA,EAAMF,IACNQ,EAAUR,EAAW,QACrBS,EAAWT,EAAW,SACtBU,EAAaV,EAAW,WACxBW,EAAaX,EAAW,WC9BrC,EAZ+C,WAC3C,OACI,2BACI,gBAACE,EAAD,CAAKC,UAAU,+CAAf,QACA,gBAACK,EAAD,CAASL,UAAU,+CAAnB,QACA,gBAACQ,EAAD,CAAYR,UAAU,+CAAtB,WACA,gBAACO,EAAD,CAAYP,UAAU,+CAAtB,YACA,gBAACM,EAAD,CAAUN,UAAU,+CAApB,U,iBCDCS,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAWP,EAAc,YACzBQ,EAAgBR,EAAc,iBAC9BS,EAAc,CAClBV,aAAAA,GAEIW,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGX,GACF,YACD,OAAO,SAACQ,EAAD,iBAAeD,EAAiBP,EAAhC,CAAuCW,WAAYA,EAAYC,QAAQ,eAI5E,SAACT,EAAD,CAASS,QAAQ,WAAjB,iIAIA,oDACA,oBACE,eAAIC,WAAW,MAAf,wCACA,eAAIA,WAAW,MAAf,yCAEF,SAACT,EAAD,CAAkBU,MAAM,MAAMC,UAAWC,EAAYJ,QAAQ,qBAChE,SAACP,EAAD,CAAUY,KDzBgB,2bCyBML,QAAQ,eAErC,wEACA,oBACE,eAAIC,WAAW,MAAf,+BACA,eAAIA,WAAW,MAAf,6GACA,eAAIA,WAAW,MAAf,yCACA,eAAIA,WAAW,MAAf,sCAEF,qBACH,SAACP,EAAD,CAAeY,KAAK,KAAKC,YAAY,aAAaC,SAAS,SAACjC,EAAD,CAAKC,UAAU,8CAA8CwB,QAAQ,OAArE,WAA0FA,QAAQ,mBAC7J,SAACN,EAAD,CAAeY,KAAK,OAAOC,YAAY,aAAaC,SAAS,SAACjC,EAAD,CAAKC,UAAU,8CAA8CwB,QAAQ,OAArE,qBAAoGA,QAAQ,oBAEtK,qBACH,SAACN,EAAD,CAAeY,KAAK,KAAKC,YAAY,cAAcC,SAAS,SAACjC,EAAD,CAAKC,UAAU,8CAA8CwB,QAAQ,OAArE,OAAsFA,QAAQ,mBAC1J,SAACN,EAAD,CAAeY,KAAK,OAAOC,YAAY,mBAAmBC,SAAS,SAACjC,EAAD,CAAKC,UAAU,8CAA8CwB,QAAQ,OAArE,WAA0FA,QAAQ,oBAElK,8EAA+D,cAAGC,WAAW,IACzE,KAAQ,2BADmD,eAA/D,MAGA,oBACE,eAAIA,WAAW,MAAf,iDACA,eAAIA,WAAW,MAAf,oGACA,eAAIA,WAAW,MAAf,oGAEF,gTACA,qBACH,SAACP,EAAD,CAAeY,KAAK,KAAKC,YAAY,SAASC,SAAS,SAACxB,EAAD,CAAYR,UAAU,8CAA8CwB,QAAQ,cAA5E,cAAkHA,QAAQ,mBACjL,SAACN,EAAD,CAAeY,KAAK,OAAOC,YAAY,uBAAuBC,SAAS,SAACxB,EAAD,CAAYR,UAAU,8CAA8CwB,QAAQ,cAA5E,gBAAoHA,QAAQ,oBAEhM,qBACH,SAACN,EAAD,CAAeY,KAAK,KAAKC,YAAY,SAASC,SAAS,SAAC3B,EAAD,CAASL,UAAU,8CAA8CwB,QAAQ,WAAzE,aAAwGA,QAAQ,mBACvK,SAACN,EAAD,CAAeY,KAAK,OAAOC,YAAY,uBAAuBC,SAAS,SAACjC,EAAD,CAAKC,UAAU,8CAA8CwB,QAAQ,OAArE,aAA4FA,QAAQ,oBAExK,qBACH,SAACN,EAAD,CAAeY,KAAK,KAAKC,YAAY,OAAOC,SAAS,SAACjC,EAAD,CAAKC,UAAU,8CAA8CwB,QAAQ,OAArE,QAAuFA,QAAQ,mBACpJ,SAACN,EAAD,CAAeY,KAAK,OAAOC,YAAY,uBAAuBC,SAAS,SAAC3B,EAAD,CAASL,UAAU,8CAA8CwB,QAAQ,WAAzE,QAAmGA,QAAQ,oBAE/K,2CACA,gFACA,oBACE,eAAIC,WAAW,MAAf,kDACA,eAAIA,WAAW,MAAf,6FACA,eAAIA,WAAW,MAAf,uFACA,eAAIA,WAAW,MAAf,mHAMNH,EAAWW,gBAAiB","sources":["webpack://@fremtind/portal/../packages/tag-react/src/Tag.tsx","webpack://@fremtind/portal/../packages/tag-react/documentation/TagExample.tsx","webpack://@fremtind/portal/../packages/tag-react/documentation/Tag.mdx"],"sourcesContent":["import React, { FC } from \"react\";\nimport cx from \"classnames\";\n\ntype Props = React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\ntype Variant = \"info\" | \"error\" | \"warning\" | \"success\";\n\nfunction getDisplayName(variant?: Variant) {\n    switch (variant) {\n        case \"info\":\n            return \"InfoTag\";\n        case \"error\":\n            return \"ErrorTag\";\n        case \"warning\":\n            return \"WarningTag\";\n        case \"success\":\n            return \"SuccessTag\";\n        default:\n            return \"Tag\";\n    }\n}\n\nfunction tagFactory(variant?: Variant) {\n    const Tag: FC<Props> = ({ className, ...rest }) => (\n        <span\n            className={cx(\n                \"jkl-tag\",\n                {\n                    [\"jkl-tag--info\"]: variant === \"info\",\n                    [\"jkl-tag--error\"]: variant === \"error\",\n                    [\"jkl-tag--warning\"]: variant === \"warning\",\n                    [\"jkl-tag--success\"]: variant === \"success\",\n                },\n                className,\n            )}\n            {...rest}\n        />\n    );\n    Tag.displayName = getDisplayName(variant);\n    return Tag;\n}\n\nexport const Tag = tagFactory();\nexport const InfoTag = tagFactory(\"info\");\nexport const ErrorTag = tagFactory(\"error\");\nexport const WarningTag = tagFactory(\"warning\");\nexport const SuccessTag = tagFactory(\"success\");\n","import React, { VFC } from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { Tag, InfoTag, SuccessTag, WarningTag, ErrorTag } from \"../src\";\n\nconst TagExample: VFC<ExampleComponentProps> = () => {\n    return (\n        <div>\n            <Tag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Emne</Tag>\n            <InfoTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Info</InfoTag>\n            <SuccessTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Suksess</SuccessTag>\n            <WarningTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Advarsel</WarningTag>\n            <ErrorTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Feil</ErrorTag>\n        </div>\n    );\n};\n\nexport default TagExample;\n\nexport const tagExampleCode = `\n    <Tag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Emne</Tag>\n    <InfoTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Info</InfoTag>\n    <SuccessTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Suksess</SuccessTag>\n    <WarningTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Advarsel</WarningTag>\n    <ErrorTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\">Feil</ErrorTag>\n`;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { Tag, InfoTag, ErrorTag, WarningTag, SuccessTag } from \"../src\";\nimport TagExample, { tagExampleCode } from \"./TagExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst CodeDemo = makeShortcode(\"CodeDemo\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n\tTags er små informasjonsbobler som kan brukes til å presentere en eller flere biter med informasjon tilknyttet et\n\thovedtema.\n    </Ingress>\n    <p>{`Vi har to kategorier av tags:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Status vises med en passende farge.`}</li>\n      <li parentName=\"ol\">{`Emne eller metadata vises nøytralt.`}</li>\n    </ol>\n    <ComponentExample title=\"Tag\" component={TagExample} mdxType=\"ComponentExample\">\n\t<CodeDemo code={tagExampleCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <p>{`Vi har også noen prinsipper for innholdet i tags:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Tags inneholder kun tekst.`}</li>\n      <li parentName=\"ul\">{`Teksten starter med stor forbokstav etterfulgt av små, med mindre det er en forkortelse eller merkevare.`}</li>\n      <li parentName=\"ul\">{`Teksten bør ikke overskride 12 tegn.`}</li>\n      <li parentName=\"ul\">{`Mellomrom bør unngås hvis mulig.`}</li>\n    </ul>\n    <div>\n\t<DoDontExample type=\"do\" description=\"Kort tekst\" content={<Tag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"Tag\">E-kunde</Tag>} mdxType=\"DoDontExample\" />\n\t<DoDontExample type=\"dont\" description=\"Lang tekst\" content={<Tag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"Tag\">Kunden er e-kunde</Tag>} mdxType=\"DoDontExample\" />\n    </div>\n    <div>\n\t<DoDontExample type=\"do\" description=\"Forkortelse\" content={<Tag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"Tag\">PDF</Tag>} mdxType=\"DoDontExample\" />\n\t<DoDontExample type=\"dont\" description=\"Alt som versaler\" content={<Tag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"Tag\">E-KUNDE</Tag>} mdxType=\"DoDontExample\" />\n    </div>\n    <p>{`Fargene i statustags har en betydning på samme måte som `}<a parentName=\"p\" {...{\n        \"href\": \"/komponenter/messagebox\"\n      }}>{`Message box`}</a>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Grønt betyr at noe er vellykket eller ferdig`}</li>\n      <li parentName=\"ul\">{`Gult informerer om noe som kan ha innvirkning på brukeren, men hvor det ikke kreves en handling`}</li>\n      <li parentName=\"ul\">{`Rødt betyr at en handling kreves eller noe har gått galt så handlingen ikke kunne gjennomføres`}</li>\n    </ul>\n    <p>{`Blått kan brukes om de andre kategoriene ikke passer, men bare dersom samme sted vil kunne vise en annen statusfarge hvis situasjonen var annerledes. Blått er med andre ord ikke en nøytral farge som kan brukes til informasjon utenfor statuskategorien. Til det brukes emnevarianten.`}</p>\n    <div>\n\t<DoDontExample type=\"do\" description=\"Status\" content={<SuccessTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"SuccessTag\">Registrert</SuccessTag>} mdxType=\"DoDontExample\" />\n\t<DoDontExample type=\"dont\" description=\"Statusfarge for emne\" content={<SuccessTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"SuccessTag\">Miljøvennlig</SuccessTag>} mdxType=\"DoDontExample\" />\n    </div>\n    <div>\n\t<DoDontExample type=\"do\" description=\"Status\" content={<InfoTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"InfoTag\">Behandles</InfoTag>} mdxType=\"DoDontExample\" />\n\t<DoDontExample type=\"dont\" description=\"Emnefarge for status\" content={<Tag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"Tag\">Behandles</Tag>} mdxType=\"DoDontExample\" />\n    </div>\n    <div>\n\t<DoDontExample type=\"do\" description=\"Emne\" content={<Tag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"Tag\">Flom</Tag>} mdxType=\"DoDontExample\" />\n\t<DoDontExample type=\"dont\" description=\"Statusfarge for emne\" content={<InfoTag className=\"jkl-spacing-2xs--right jkl-spacing-2xs--top\" mdxType=\"InfoTag\">Flom</InfoTag>} mdxType=\"DoDontExample\" />\n    </div>\n    <h2>{`Når bruker vi tags?`}</h2>\n    <p>{`Før du bruker en tag bør du stille noen kontrollspørsmål:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Er teksten kort nok til å passe inn i en tag?`}</li>\n      <li parentName=\"ul\">{`Er det tydelig for brukeren hva tagsene er tilknyttet? Også for brukere av skjermlesere?`}</li>\n      <li parentName=\"ul\">{`Passer informasjonen jeg skal vise inn i én av de to kategoriene – status og emne?`}</li>\n      <li parentName=\"ul\">{`Vises informasjonen i en tabell? I så fall, gir det verdi å bruke en tag i stedet for en vanlig tekstkolonne?`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["tagFactory","variant","Tag","className","rest","cx","displayName","getDisplayName","InfoTag","ErrorTag","WarningTag","SuccessTag","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","CodeDemo","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","title","component","TagExample","code","type","description","content","isMDXComponent"],"sourceRoot":""}