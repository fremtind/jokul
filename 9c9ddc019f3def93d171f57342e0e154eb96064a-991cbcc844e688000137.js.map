{"version":3,"file":"9c9ddc019f3def93d171f57342e0e154eb96064a-991cbcc844e688000137.js","mappings":"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","sources":["webpack://@fremtind/portal/../node_modules/react-is/cjs/react-is.production.min.js","webpack://@fremtind/portal/../node_modules/react-is/index.js","webpack://@fremtind/portal/../packages/text-input-react/src/TextArea.tsx","webpack://@fremtind/portal/../packages/text-input-react/src/BaseInputField.tsx","webpack://@fremtind/portal/../packages/text-input-react/src/TextInput.tsx","webpack://@fremtind/portal/../node_modules/compute-scroll-into-view/dist/index.module.js","webpack://@fremtind/portal/../node_modules/downshift/dist/downshift.esm.js","webpack://@fremtind/portal/../packages/text-input-react/src/autosuggest/ControllerButton.tsx","webpack://@fremtind/portal/../packages/text-input-react/src/autosuggest/Menu.tsx","webpack://@fremtind/portal/../packages/text-input-react/src/autosuggest/BaseAutosuggest.tsx","webpack://@fremtind/portal/../packages/text-input-react/src/autosuggest/Autosuggest.tsx","webpack://@fremtind/portal/../packages/text-input-react/src/autosuggest/utils.ts","webpack://@fremtind/portal/../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"sourcesContent":["/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar b = 60103,\n    c = 60106,\n    d = 60107,\n    e = 60108,\n    f = 60114,\n    g = 60109,\n    h = 60110,\n    k = 60112,\n    l = 60113,\n    m = 60120,\n    n = 60115,\n    p = 60116,\n    q = 60121,\n    r = 60122,\n    u = 60117,\n    v = 60129,\n    w = 60131;\n\nif (\"function\" === typeof Symbol && Symbol.for) {\n  var x = Symbol.for;\n  b = x(\"react.element\");\n  c = x(\"react.portal\");\n  d = x(\"react.fragment\");\n  e = x(\"react.strict_mode\");\n  f = x(\"react.profiler\");\n  g = x(\"react.provider\");\n  h = x(\"react.context\");\n  k = x(\"react.forward_ref\");\n  l = x(\"react.suspense\");\n  m = x(\"react.suspense_list\");\n  n = x(\"react.memo\");\n  p = x(\"react.lazy\");\n  q = x(\"react.block\");\n  r = x(\"react.server.block\");\n  u = x(\"react.fundamental\");\n  v = x(\"react.debug_trace_mode\");\n  w = x(\"react.legacy_hidden\");\n}\n\nfunction y(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var t = a.$$typeof;\n\n    switch (t) {\n      case b:\n        switch (a = a.type, a) {\n          case d:\n          case f:\n          case e:\n          case l:\n          case m:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case h:\n              case k:\n              case p:\n              case n:\n              case g:\n                return a;\n\n              default:\n                return t;\n            }\n\n        }\n\n      case c:\n        return t;\n    }\n  }\n}\n\nvar z = g,\n    A = b,\n    B = k,\n    C = d,\n    D = p,\n    E = n,\n    F = c,\n    G = f,\n    H = e,\n    I = l;\nexports.ContextConsumer = h;\nexports.ContextProvider = z;\nexports.Element = A;\nexports.ForwardRef = B;\nexports.Fragment = C;\nexports.Lazy = D;\nexports.Memo = E;\nexports.Portal = F;\nexports.Profiler = G;\nexports.StrictMode = H;\nexports.Suspense = I;\n\nexports.isAsyncMode = function () {\n  return !1;\n};\n\nexports.isConcurrentMode = function () {\n  return !1;\n};\n\nexports.isContextConsumer = function (a) {\n  return y(a) === h;\n};\n\nexports.isContextProvider = function (a) {\n  return y(a) === g;\n};\n\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === b;\n};\n\nexports.isForwardRef = function (a) {\n  return y(a) === k;\n};\n\nexports.isFragment = function (a) {\n  return y(a) === d;\n};\n\nexports.isLazy = function (a) {\n  return y(a) === p;\n};\n\nexports.isMemo = function (a) {\n  return y(a) === n;\n};\n\nexports.isPortal = function (a) {\n  return y(a) === c;\n};\n\nexports.isProfiler = function (a) {\n  return y(a) === f;\n};\n\nexports.isStrictMode = function (a) {\n  return y(a) === e;\n};\n\nexports.isSuspense = function (a) {\n  return y(a) === l;\n};\n\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === d || a === f || a === v || a === e || a === l || a === m || a === w || \"object\" === typeof a && null !== a && (a.$$typeof === p || a.$$typeof === n || a.$$typeof === g || a.$$typeof === h || a.$$typeof === k || a.$$typeof === u || a.$$typeof === q || a[0] === r) ? !0 : !1;\n};\n\nexports.typeOf = y;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","import React, { forwardRef, FocusEvent, useRef, useState, useEffect, RefObject } from \"react\";\nimport classNames from \"classnames\";\nimport { nanoid } from \"nanoid\";\nimport { Label, SupportLabel, LabelVariant } from \"@fremtind/jkl-core\";\nimport { BaseProps } from \"./BaseInputField\";\n\nexport interface Props extends BaseProps {\n    label: string;\n    helpLabel?: string;\n    errorLabel?: string;\n    variant?: LabelVariant;\n    /** @deprecated */\n    inverted?: boolean;\n    forceCompact?: boolean;\n    rows?: number;\n    autoExpand?: boolean;\n}\n\nexport const TextArea = forwardRef<HTMLTextAreaElement, Props>(\n    (\n        {\n            id,\n            variant,\n            inverted,\n            label,\n            className,\n            helpLabel,\n            errorLabel,\n            rows = 7,\n            placeholder = \" \",\n            autoExpand = false,\n            forceCompact,\n            ...restProps\n        },\n        ref,\n    ) => {\n        const componentClassName = classNames(\"jkl-text-input jkl-text-area\", className, {\n            \"jkl-text-input--compact\": forceCompact,\n            \"jkl-text-input--inverted\": inverted,\n        });\n        const [uid] = useState(id || `jkl-text-area-${nanoid(8)}`);\n        const [supportId] = useState(`jkl-support-label-${nanoid(8)}`);\n        const hasSupportText = helpLabel || errorLabel;\n        const describedBy = hasSupportText ? supportId : undefined;\n\n        const [textAreaFocused, setTextAreaFocused] = useState(false);\n        const [baseScrollHeight, setBaseScrollHeight] = useState(0);\n        const [currentRows, setCurrentRows] = useState(1);\n        const internalRef = useRef<HTMLTextAreaElement>(null);\n        const textAreaRef = (ref as RefObject<HTMLTextAreaElement>) || internalRef;\n\n        useEffect(() => {\n            const textAreaElement = textAreaRef.current;\n            if (autoExpand && textAreaElement) {\n                const savedValue = textAreaElement.value;\n                const savedPlaceholder = textAreaElement.placeholder;\n                const savedRows = textAreaElement.rows;\n                // BaseScrollHeight must be calculated from an empty textarea and empty placeholder.\n                textAreaElement.value = \"\";\n                textAreaElement.placeholder = \"\";\n                textAreaElement.rows = 1;\n                setBaseScrollHeight(textAreaElement.scrollHeight);\n                textAreaElement.value = savedValue;\n                textAreaElement.placeholder = savedPlaceholder;\n                textAreaElement.rows = savedRows;\n            }\n        }, [textAreaRef, autoExpand]);\n\n        useEffect(() => {\n            const textAreaElement = textAreaRef.current;\n            const minimumRows = rows;\n\n            if (textAreaElement) {\n                const calculatedRows = calculateRows(textAreaElement, baseScrollHeight);\n                if (textAreaFocused || restProps.value) {\n                    setCurrentRows(Math.max(minimumRows, calculatedRows));\n                } else {\n                    setCurrentRows(calculatedRows);\n                }\n            }\n        }, [textAreaRef, restProps.value, textAreaFocused, baseScrollHeight, rows]);\n\n        function onFocus(e: FocusEvent<HTMLTextAreaElement>) {\n            setTextAreaFocused(true);\n            restProps.onFocus && restProps.onFocus(e);\n        }\n\n        function onBlur(e: FocusEvent<HTMLTextAreaElement>) {\n            setTextAreaFocused(false);\n            restProps.onBlur && restProps.onBlur(e);\n        }\n\n        function calculateRows(textAreaElement: HTMLTextAreaElement, baseScrollHeight: number) {\n            const lineHeightWithPx = window ? window.getComputedStyle(textAreaElement).lineHeight : \"16px\"; // Default to 16px\n            const lineHeight = parseInt(lineHeightWithPx.replace(\"px\", \"\"));\n            const savedRows = textAreaElement.rows;\n            // We need to set rows to 1 to shrink the textarea when removing characters.\n            textAreaElement.rows = 1;\n            const calculatedRows = Math.ceil((textAreaElement.scrollHeight - baseScrollHeight) / lineHeight) + 1;\n            textAreaElement.rows = savedRows;\n            return calculatedRows;\n        }\n\n        return (\n            <div data-testid=\"jkl-text-area\" className={componentClassName}>\n                <Label standAlone htmlFor={uid} variant={variant} forceCompact={forceCompact}>\n                    {label}\n                </Label>\n                <textarea\n                    id={uid}\n                    ref={textAreaRef}\n                    className={`jkl-text-input__input jkl-text-input__input--${rows}-rows`}\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                    aria-invalid={!!errorLabel}\n                    aria-describedby={describedBy}\n                    placeholder={placeholder}\n                    rows={autoExpand ? currentRows : undefined}\n                    // Must set overflowX hidden for Firefox https://stackoverflow.com/a/22700700\n                    style={autoExpand ? { height: \"auto\", overflowX: \"hidden\" } : undefined}\n                    {...restProps}\n                />\n                <SupportLabel\n                    inverted={inverted}\n                    id={supportId}\n                    helpLabel={helpLabel}\n                    errorLabel={errorLabel}\n                    forceCompact={forceCompact}\n                />\n            </div>\n        );\n    },\n);\n\nTextArea.displayName = \"TextArea\";\n","import React, {\n    ChangeEventHandler,\n    CSSProperties,\n    FocusEventHandler,\n    forwardRef,\n    KeyboardEventHandler,\n    MouseEventHandler,\n} from \"react\";\n\nexport interface BaseProps {\n    id?: string;\n    className?: string;\n    maxLength?: number;\n    width?: string;\n    value?: string;\n    onChange?: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    onClick?: MouseEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    onBlur?: FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    onFocus?: FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    onKeyDown?: KeyboardEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    onKeyUp?: KeyboardEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    onKeyPress?: KeyboardEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n    placeholder?: string;\n    readOnly?: boolean;\n    autoComplete?: string;\n    required?: boolean;\n    type?: \"text\" | \"number\" | \"tel\" | \"password\" | \"email\" | \"year\";\n    name?: string;\n    defaultValue?: string;\n}\n\nexport interface Props extends BaseProps {\n    describedBy?: string;\n    style?: CSSProperties;\n    invalid?: boolean;\n}\n\nfunction getWidthAsStyle(width?: string, maxLength?: number): CSSProperties | undefined {\n    if (width) {\n        return { width }; // prioritize width prop\n    }\n\n    if (maxLength) {\n        // adapt to maxLength, but capped at 40ch\n        const length = `${Math.min(maxLength, 40)}ch`;\n        const padding = \"24px\"; // left + right padding\n        return { width: `calc(${length} + ${padding})` };\n    }\n\n    return undefined;\n}\n\nexport const BaseInputField = forwardRef<HTMLInputElement, Props>(\n    ({ id, describedBy, invalid, maxLength, width, type = \"text\", className = \"\", ...rest }, ref) => (\n        <input\n            ref={ref}\n            id={id}\n            className={`jkl-text-input__input ${className}`}\n            style={getWidthAsStyle(width, maxLength)}\n            aria-describedby={describedBy}\n            aria-invalid={invalid}\n            maxLength={maxLength}\n            type={type}\n            {...rest}\n        />\n    ),\n);\nBaseInputField.displayName = \"BaseInputField\";\n","import React, { forwardRef, useState, HTMLAttributes, MouseEventHandler } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport classNames from \"classnames\";\nimport { Label, SupportLabel, LabelVariant } from \"@fremtind/jkl-core\";\nimport { IconButton, IconVariant } from \"@fremtind/jkl-icon-button-react\";\nimport { BaseInputField, BaseProps } from \"./BaseInputField\";\n\nexport interface Action extends Exclude<HTMLAttributes<HTMLButtonElement>, \"disabled\"> {\n    icon: IconVariant;\n    label: string;\n    onClick: MouseEventHandler<HTMLButtonElement>;\n}\n\nexport interface Props extends BaseProps {\n    label: string;\n    helpLabel?: string;\n    errorLabel?: string;\n    variant?: LabelVariant;\n    \"data-testautoid\"?: string;\n    /** @deprecated */\n    inverted?: boolean;\n    forceCompact?: boolean;\n    inline?: boolean;\n    action?: Action;\n}\n\nexport const TextInput = forwardRef<HTMLInputElement, Props>(\n    (\n        {\n            id,\n            className,\n            label,\n            helpLabel,\n            errorLabel,\n            variant,\n            inline,\n            inverted,\n            forceCompact,\n            action,\n            \"data-testautoid\": testAutoId,\n            ...inputProps\n        },\n        ref,\n    ) => {\n        const [uid] = useState(id || `jkl-text-input-${nanoid(8)}`);\n        const [supportId] = useState(`jkl-support-label-${nanoid(8)}`);\n        const hasSupportText = helpLabel || errorLabel;\n        const describedBy = hasSupportText ? supportId : undefined;\n        const componentClassName = classNames(\n            {\n                \"jkl-text-input\": true,\n                \"jkl-text-input--inline\": inline,\n                \"jkl-text-input--inverted\": inverted,\n                \"jkl-text-input--compact\": forceCompact,\n                \"jkl-text-input--action\": action,\n            },\n            className,\n        );\n        return (\n            <div data-testid=\"jkl-text-input\" className={componentClassName}>\n                <Label forceCompact={forceCompact} standAlone srOnly={inline} htmlFor={uid} variant={variant}>\n                    {label}\n                </Label>\n                <div className=\"jkl-text-input__input-wrapper\">\n                    <BaseInputField\n                        ref={ref}\n                        id={uid}\n                        describedBy={describedBy}\n                        invalid={!!errorLabel}\n                        data-testautoid={testAutoId}\n                        {...inputProps}\n                    />\n                    {action && (\n                        <IconButton\n                            className=\"jkl-text-input__action-button\"\n                            iconType={action.icon}\n                            buttonTitle={action.label}\n                            onClick={action.onClick}\n                            onFocus={action.onFocus}\n                            onBlur={action.onBlur}\n                        />\n                    )}\n                </div>\n                <SupportLabel\n                    inverted={inverted}\n                    id={supportId}\n                    helpLabel={helpLabel}\n                    errorLabel={errorLabel}\n                    srOnly={inline}\n                />\n            </div>\n        );\n    },\n);\nTextInput.displayName = \"TextInput\";\n","function t(t) {\n  return \"object\" == typeof t && null != t && 1 === t.nodeType;\n}\n\nfunction e(t, e) {\n  return (!e || \"hidden\" !== t) && \"visible\" !== t && \"clip\" !== t;\n}\n\nfunction n(t, n) {\n  if (t.clientHeight < t.scrollHeight || t.clientWidth < t.scrollWidth) {\n    var r = getComputedStyle(t, null);\n    return e(r.overflowY, n) || e(r.overflowX, n) || function (t) {\n      var e = function (t) {\n        if (!t.ownerDocument || !t.ownerDocument.defaultView) return null;\n\n        try {\n          return t.ownerDocument.defaultView.frameElement;\n        } catch (t) {\n          return null;\n        }\n      }(t);\n\n      return !!e && (e.clientHeight < t.scrollHeight || e.clientWidth < t.scrollWidth);\n    }(t);\n  }\n\n  return !1;\n}\n\nfunction r(t, e, n, r, i, o, l, d) {\n  return o < t && l > e || o > t && l < e ? 0 : o <= t && d <= n || l >= e && d >= n ? o - t - r : l > e && d < n || o < t && d > n ? l - e + i : 0;\n}\n\nexport default function (e, i) {\n  var o = window,\n      l = i.scrollMode,\n      d = i.block,\n      u = i.inline,\n      h = i.boundary,\n      a = i.skipOverflowHiddenElements,\n      c = \"function\" == typeof h ? h : function (t) {\n    return t !== h;\n  };\n  if (!t(e)) throw new TypeError(\"Invalid target\");\n\n  for (var f = document.scrollingElement || document.documentElement, s = [], p = e; t(p) && c(p);) {\n    if ((p = p.parentElement) === f) {\n      s.push(p);\n      break;\n    }\n\n    null != p && p === document.body && n(p) && !n(document.documentElement) || null != p && n(p, a) && s.push(p);\n  }\n\n  for (var m = o.visualViewport ? o.visualViewport.width : innerWidth, g = o.visualViewport ? o.visualViewport.height : innerHeight, w = window.scrollX || pageXOffset, v = window.scrollY || pageYOffset, W = e.getBoundingClientRect(), b = W.height, H = W.width, y = W.top, E = W.right, M = W.bottom, V = W.left, x = \"start\" === d || \"nearest\" === d ? y : \"end\" === d ? M : y + b / 2, I = \"center\" === u ? V + H / 2 : \"end\" === u ? E : V, C = [], T = 0; T < s.length; T++) {\n    var k = s[T],\n        B = k.getBoundingClientRect(),\n        D = B.height,\n        O = B.width,\n        R = B.top,\n        X = B.right,\n        Y = B.bottom,\n        L = B.left;\n    if (\"if-needed\" === l && y >= 0 && V >= 0 && M <= g && E <= m && y >= R && M <= Y && V >= L && E <= X) return C;\n    var S = getComputedStyle(k),\n        j = parseInt(S.borderLeftWidth, 10),\n        q = parseInt(S.borderTopWidth, 10),\n        z = parseInt(S.borderRightWidth, 10),\n        A = parseInt(S.borderBottomWidth, 10),\n        F = 0,\n        G = 0,\n        J = \"offsetWidth\" in k ? k.offsetWidth - k.clientWidth - j - z : 0,\n        K = \"offsetHeight\" in k ? k.offsetHeight - k.clientHeight - q - A : 0;\n    if (f === k) F = \"start\" === d ? x : \"end\" === d ? x - g : \"nearest\" === d ? r(v, v + g, g, q, A, v + x, v + x + b, b) : x - g / 2, G = \"start\" === u ? I : \"center\" === u ? I - m / 2 : \"end\" === u ? I - m : r(w, w + m, m, j, z, w + I, w + I + H, H), F = Math.max(0, F + v), G = Math.max(0, G + w);else {\n      F = \"start\" === d ? x - R - q : \"end\" === d ? x - Y + A + K : \"nearest\" === d ? r(R, Y, D, q, A + K, x, x + b, b) : x - (R + D / 2) + K / 2, G = \"start\" === u ? I - L - j : \"center\" === u ? I - (L + O / 2) + J / 2 : \"end\" === u ? I - X + z + J : r(L, X, O, j, z + J, I, I + H, H);\n      var N = k.scrollLeft,\n          P = k.scrollTop;\n      x += P - (F = Math.max(0, Math.min(P + F, k.scrollHeight - D + K))), I += N - (G = Math.max(0, Math.min(N + G, k.scrollWidth - O + J)));\n    }\n    C.push({\n      el: k,\n      top: F,\n      left: G\n    });\n  }\n\n  return C;\n}","import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport { cloneElement, Component, useRef, useEffect, useCallback, useLayoutEffect, useReducer, useMemo } from 'react';\nimport { isForwardRef } from 'react-is';\nimport computeScrollIntoView from 'compute-scroll-into-view';\nimport { __assign } from 'tslib';\nvar idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\n\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\n\n\nfunction scrollIntoView(node, menuNode) {\n  if (!node) {\n    return;\n  }\n\n  var actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @param {Window} environment The window context where downshift renders.\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\n\nfunction isOrContainsNode(parent, child, environment) {\n  var result = parent === child || child instanceof environment.Node && parent.contains && parent.contains(child);\n  return result;\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\n\nfunction debounce(fn, time) {\n  var timeoutId;\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    cancel();\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      fn.apply(void 0, args);\n    }, time);\n  }\n\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(function (fn) {\n      if (fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\n\nfunction handleRefs() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n\n  return function (node) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specify if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\n\nfunction getA11yStatusMessage$1(_ref2) {\n  var isOpen = _ref2.isOpen,\n      resultCount = _ref2.resultCount,\n      previousResultCount = _ref2.previousResultCount;\n\n  if (!isOpen) {\n    return '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  if (resultCount !== previousResultCount) {\n    return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter key to select.\";\n  }\n\n  return '';\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\n\nfunction isDOMElement(element) {\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\n\nfunction getElementProps(element) {\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(\"The property \\\"\" + propName + \"\\\" is required in \\\"\" + fnName + \"\\\"\");\n}\n\nvar stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var result = {};\n  stateKeys.forEach(function (k) {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * This will perform a shallow merge of the given state object\n * with the state coming from props\n * (for the controlled component scenario)\n * This is used in state updater functions so they're referencing\n * the right state regardless of where it comes from.\n *\n * @param {Object} state The state of the component/hook.\n * @param {Object} props The props that may contain controlled values.\n * @returns {Object} The merged controlled state.\n */\n\n\nfunction getState(state, props) {\n  return Object.keys(state).reduce(function (prevState, key) {\n    prevState[key] = isControlledProp(props, key) ? props[key] : state[key];\n    return prevState;\n  }, {});\n}\n/**\n * This determines whether a prop is a \"controlled prop\" meaning it is\n * state which is controlled by the outside of this component rather\n * than within this component.\n *\n * @param {Object} props The props that may contain controlled values.\n * @param {String} key the key to check\n * @return {Boolean} whether it is a controlled controlled prop\n */\n\n\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\n\nfunction normalizeArrowKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return \"Arrow\" + key;\n  }\n\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\n\n\nfunction getNextWrappingIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  if (circular === void 0) {\n    circular = true;\n  }\n\n  if (itemCount === 0) {\n    return -1;\n  }\n\n  var itemsLastIndex = itemCount - 1;\n\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  var newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  var nonDisabledNewIndex = getNextNonDisabledIndex(moveAmount, newIndex, itemCount, getItemNodeFromIndex, circular);\n\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n\n  return nonDisabledNewIndex;\n}\n/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\n\n\nfunction getNextNonDisabledIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  var currentElementNode = getItemNodeFromIndex(baseIndex);\n\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (var index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (var _index = baseIndex - 1; _index >= 0; _index--) {\n      if (!getItemNodeFromIndex(_index).hasAttribute('disabled')) {\n        return _index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0 ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false) : getNextNonDisabledIndex(-1, itemCount - 1, itemCount, getItemNodeFromIndex, false);\n  }\n\n  return -1;\n}\n/**\n * Checks if event target is within the downshift elements.\n *\n * @param {EventTarget} target Target to check.\n * @param {HTMLElement[]} downshiftElements The elements that form downshift (list, toggle button etc).\n * @param {Window} environment The window context where downshift renders.\n * @param {boolean} checkActiveElement Whether to also check activeElement.\n *\n * @returns {boolean} Whether or not the target is within downshift elements.\n */\n\n\nfunction targetWithinDownshift(target, downshiftElements, environment, checkActiveElement) {\n  if (checkActiveElement === void 0) {\n    checkActiveElement = true;\n  }\n\n  return downshiftElements.some(function (contextNode) {\n    return contextNode && (isOrContainsNode(contextNode, target, environment) || checkActiveElement && isOrContainsNode(contextNode, environment.document.activeElement, environment));\n  });\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nvar validateControlledUnchanged = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validateControlledUnchanged = function validateControlledUnchanged(state, prevProps, nextProps) {\n    var warningDescription = \"This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props\";\n    Object.keys(state).forEach(function (propKey) {\n      if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n        // eslint-disable-next-line no-console\n        console.error(\"downshift: A component has changed the controlled prop \\\"\" + propKey + \"\\\" to be uncontrolled. \" + warningDescription);\n      } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n        // eslint-disable-next-line no-console\n        console.error(\"downshift: A component has changed the uncontrolled prop \\\"\" + propKey + \"\\\" to be controlled. \" + warningDescription);\n      }\n    });\n  };\n}\n\nvar cleanupStatus = debounce(function (documentProp) {\n  getStatusDiv(documentProp).textContent = '';\n}, 500);\n/**\n * @param {String} status the status message\n * @param {Object} documentProp document passed by the user.\n */\n\nfunction setStatus(status, documentProp) {\n  var div = getStatusDiv(documentProp);\n\n  if (!status) {\n    return;\n  }\n\n  div.textContent = status;\n  cleanupStatus(documentProp);\n}\n/**\n * Get the status node or create it if it does not already exist.\n * @param {Object} documentProp document passed by the user.\n * @return {HTMLElement} the status node.\n */\n\n\nfunction getStatusDiv(documentProp) {\n  if (documentProp === void 0) {\n    documentProp = document;\n  }\n\n  var statusDiv = documentProp.getElementById('a11y-status-message');\n\n  if (statusDiv) {\n    return statusDiv;\n  }\n\n  statusDiv = documentProp.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'polite');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  documentProp.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nvar unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nvar mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nvar itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nvar keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nvar keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nvar keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nvar keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nvar keyDownHome = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_home__' : 7;\nvar keyDownEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_end__' : 8;\nvar clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 9;\nvar blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 10;\nvar changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 11;\nvar keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 12;\nvar clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 13;\nvar blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 14;\nvar controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;\nvar touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 16;\nvar stateChangeTypes$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  keyDownHome: keyDownHome,\n  keyDownEnd: keyDownEnd,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\nvar _excluded$4 = [\"refKey\", \"ref\"],\n    _excluded2$3 = [\"onClick\", \"onPress\", \"onKeyDown\", \"onKeyUp\", \"onBlur\"],\n    _excluded3$2 = [\"onKeyDown\", \"onBlur\", \"onChange\", \"onInput\", \"onChangeText\"],\n    _excluded4$1 = [\"refKey\", \"ref\"],\n    _excluded5$1 = [\"onMouseMove\", \"onMouseDown\", \"onClick\", \"onPress\", \"index\", \"item\"];\n\nvar Downshift = /*#__PURE__*/function () {\n  var Downshift = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(Downshift, _Component);\n\n    function Downshift(_props) {\n      var _this;\n\n      _this = _Component.call(this, _props) || this; // fancy destructuring + defaults + aliases\n      // this basically says each value of state should either be set to\n      // the initial value or the default value if the initial value is not provided\n\n      _this.id = _this.props.id || \"downshift-\" + generateId();\n      _this.menuId = _this.props.menuId || _this.id + \"-menu\";\n      _this.labelId = _this.props.labelId || _this.id + \"-label\";\n      _this.inputId = _this.props.inputId || _this.id + \"-input\";\n\n      _this.getItemId = _this.props.getItemId || function (index) {\n        return _this.id + \"-item-\" + index;\n      };\n\n      _this.input = null;\n      _this.items = [];\n      _this.itemCount = null;\n      _this.previousResultCount = 0;\n      _this.timeoutIds = [];\n\n      _this.internalSetTimeout = function (fn, time) {\n        var id = setTimeout(function () {\n          _this.timeoutIds = _this.timeoutIds.filter(function (i) {\n            return i !== id;\n          });\n          fn();\n        }, time);\n\n        _this.timeoutIds.push(id);\n      };\n\n      _this.setItemCount = function (count) {\n        _this.itemCount = count;\n      };\n\n      _this.unsetItemCount = function () {\n        _this.itemCount = null;\n      };\n\n      _this.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n        if (highlightedIndex === void 0) {\n          highlightedIndex = _this.props.defaultHighlightedIndex;\n        }\n\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_extends({\n          highlightedIndex: highlightedIndex\n        }, otherStateToSet));\n      };\n\n      _this.clearSelection = function (cb) {\n        _this.internalSetState({\n          selectedItem: null,\n          inputValue: '',\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          isOpen: _this.props.defaultIsOpen\n        }, cb);\n      };\n\n      _this.selectItem = function (item, otherStateToSet, cb) {\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_extends({\n          isOpen: _this.props.defaultIsOpen,\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          selectedItem: item,\n          inputValue: _this.props.itemToString(item)\n        }, otherStateToSet), cb);\n      };\n\n      _this.selectItemAtIndex = function (itemIndex, otherStateToSet, cb) {\n        var item = _this.items[itemIndex];\n\n        if (item == null) {\n          return;\n        }\n\n        _this.selectItem(item, otherStateToSet, cb);\n      };\n\n      _this.selectHighlightedItem = function (otherStateToSet, cb) {\n        return _this.selectItemAtIndex(_this.getState().highlightedIndex, otherStateToSet, cb);\n      };\n\n      _this.internalSetState = function (stateToSet, cb) {\n        var isItemSelected, onChangeArg;\n        var onStateChangeArg = {};\n        var isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n        // so someone controlling the `inputValue` state gets notified of\n        // the input change as soon as possible. This avoids issues with\n        // preserving the cursor position.\n        // See https://github.com/downshift-js/downshift/issues/217 for more info.\n\n        if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          _this.props.onInputValueChange(stateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), stateToSet));\n        }\n\n        return _this.setState(function (state) {\n          state = _this.getState(state);\n          var newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n          newStateToSet = _this.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n          // what was selected before\n          // used to determine if onSelect and onChange callbacks should be called\n\n          isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n          var nextState = {}; // this is just used to tell whether the state changed\n\n          var nextFullState = {}; // we need to call on change if the outside world is controlling any of our state\n          // and we're trying to update that state. OR if the selection has changed and we're\n          // trying to update the selection\n\n          if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n            onChangeArg = newStateToSet.selectedItem;\n          }\n\n          newStateToSet.type = newStateToSet.type || unknown;\n          Object.keys(newStateToSet).forEach(function (key) {\n            // onStateChangeArg should only have the state that is\n            // actually changing\n            if (state[key] !== newStateToSet[key]) {\n              onStateChangeArg[key] = newStateToSet[key];\n            } // the type is useful for the onStateChangeArg\n            // but we don't actually want to set it in internal state.\n            // this is an undocumented feature for now... Not all internalSetState\n            // calls support it and I'm not certain we want them to yet.\n            // But it enables users controlling the isOpen state to know when\n            // the isOpen state changes due to mouseup events which is quite handy.\n\n\n            if (key === 'type') {\n              return;\n            }\n\n            nextFullState[key] = newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n            if (!isControlledProp(_this.props, key)) {\n              nextState[key] = newStateToSet[key];\n            }\n          }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n          // earlier, so we'll call it now that we know what the inputValue state will be.\n\n          if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n            _this.props.onInputValueChange(newStateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), newStateToSet));\n          }\n\n          return nextState;\n        }, function () {\n          // call the provided callback if it's a function\n          cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n          // we have relevant information to pass them.\n\n          var hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n\n          if (hasMoreStateThanType) {\n            _this.props.onStateChange(onStateChangeArg, _this.getStateAndHelpers());\n          }\n\n          if (isItemSelected) {\n            _this.props.onSelect(stateToSet.selectedItem, _this.getStateAndHelpers());\n          }\n\n          if (onChangeArg !== undefined) {\n            _this.props.onChange(onChangeArg, _this.getStateAndHelpers());\n          } // this is currently undocumented and therefore subject to change\n          // We'll try to not break it, but just be warned.\n\n\n          _this.props.onUserAction(onStateChangeArg, _this.getStateAndHelpers());\n        });\n      };\n\n      _this.rootRef = function (node) {\n        return _this._rootNode = node;\n      };\n\n      _this.getRootProps = function (_temp, _temp2) {\n        var _extends2;\n\n        var _ref = _temp === void 0 ? {} : _temp,\n            _ref$refKey = _ref.refKey,\n            refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n            ref = _ref.ref,\n            rest = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n\n        var _ref2 = _temp2 === void 0 ? {} : _temp2,\n            _ref2$suppressRefErro = _ref2.suppressRefError,\n            suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro; // this is used in the render to know whether the user has called getRootProps.\n        // It uses that to know whether to apply the props automatically\n\n\n        _this.getRootProps.called = true;\n        _this.getRootProps.refKey = refKey;\n        _this.getRootProps.suppressRefError = suppressRefError;\n\n        var _this$getState = _this.getState(),\n            isOpen = _this$getState.isOpen;\n\n        return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, _this.rootRef), _extends2.role = 'combobox', _extends2['aria-expanded'] = isOpen, _extends2['aria-haspopup'] = 'listbox', _extends2['aria-owns'] = isOpen ? _this.menuId : null, _extends2['aria-labelledby'] = _this.labelId, _extends2), rest);\n      };\n\n      _this.keyDownHandlers = {\n        ArrowDown: function ArrowDown(event) {\n          var _this2 = this;\n\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? 5 : 1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowDown\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowDown\n            }, function () {\n              var itemCount = _this2.getItemCount();\n\n              if (itemCount > 0) {\n                var _this2$getState = _this2.getState(),\n                    highlightedIndex = _this2$getState.highlightedIndex;\n\n                var nextHighlightedIndex = getNextWrappingIndex(1, highlightedIndex, itemCount, function (index) {\n                  return _this2.getItemNodeFromIndex(index);\n                });\n\n                _this2.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowDown\n                });\n              }\n            });\n          }\n        },\n        ArrowUp: function ArrowUp(event) {\n          var _this3 = this;\n\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? -5 : -1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowUp\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowUp\n            }, function () {\n              var itemCount = _this3.getItemCount();\n\n              if (itemCount > 0) {\n                var _this3$getState = _this3.getState(),\n                    highlightedIndex = _this3$getState.highlightedIndex;\n\n                var nextHighlightedIndex = getNextWrappingIndex(-1, highlightedIndex, itemCount, function (index) {\n                  return _this3.getItemNodeFromIndex(index);\n                });\n\n                _this3.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowUp\n                });\n              }\n            });\n          }\n        },\n        Enter: function Enter(event) {\n          if (event.which === 229) {\n            return;\n          }\n\n          var _this$getState2 = this.getState(),\n              isOpen = _this$getState2.isOpen,\n              highlightedIndex = _this$getState2.highlightedIndex;\n\n          if (isOpen && highlightedIndex != null) {\n            event.preventDefault();\n            var item = this.items[highlightedIndex];\n            var itemNode = this.getItemNodeFromIndex(highlightedIndex);\n\n            if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n              return;\n            }\n\n            this.selectHighlightedItem({\n              type: keyDownEnter\n            });\n          }\n        },\n        Escape: function Escape(event) {\n          event.preventDefault();\n          this.reset(_extends({\n            type: keyDownEscape\n          }, !this.state.isOpen && {\n            selectedItem: null,\n            inputValue: ''\n          }));\n        }\n      };\n      _this.buttonKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n        ' ': function _(event) {\n          event.preventDefault();\n          this.toggleMenu({\n            type: keyDownSpaceButton\n          });\n        }\n      });\n      _this.inputKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n        Home: function Home(event) {\n          var _this4 = this;\n\n          var _this$getState3 = this.getState(),\n              isOpen = _this$getState3.isOpen;\n\n          if (!isOpen) {\n            return;\n          }\n\n          event.preventDefault();\n          var itemCount = this.getItemCount();\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting downwards from 0 if that's disabled.\n\n\n          var newHighlightedIndex = getNextNonDisabledIndex(1, 0, itemCount, function (index) {\n            return _this4.getItemNodeFromIndex(index);\n          }, false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownHome\n          });\n        },\n        End: function End(event) {\n          var _this5 = this;\n\n          var _this$getState4 = this.getState(),\n              isOpen = _this$getState4.isOpen;\n\n          if (!isOpen) {\n            return;\n          }\n\n          event.preventDefault();\n          var itemCount = this.getItemCount();\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting upwards from last index if that's disabled.\n\n\n          var newHighlightedIndex = getNextNonDisabledIndex(-1, itemCount - 1, itemCount, function (index) {\n            return _this5.getItemNodeFromIndex(index);\n          }, false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownEnd\n          });\n        }\n      });\n\n      _this.getToggleButtonProps = function (_temp3) {\n        var _ref3 = _temp3 === void 0 ? {} : _temp3,\n            onClick = _ref3.onClick;\n\n        _ref3.onPress;\n\n        var onKeyDown = _ref3.onKeyDown,\n            onKeyUp = _ref3.onKeyUp,\n            onBlur = _ref3.onBlur,\n            rest = _objectWithoutPropertiesLoose(_ref3, _excluded2$3);\n\n        var _this$getState5 = _this.getState(),\n            isOpen = _this$getState5.isOpen;\n\n        var enabledEventHandlers = {\n          onClick: callAllEventHandlers(onClick, _this.buttonHandleClick),\n          onKeyDown: callAllEventHandlers(onKeyDown, _this.buttonHandleKeyDown),\n          onKeyUp: callAllEventHandlers(onKeyUp, _this.buttonHandleKeyUp),\n          onBlur: callAllEventHandlers(onBlur, _this.buttonHandleBlur)\n        };\n        var eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n        return _extends({\n          type: 'button',\n          role: 'button',\n          'aria-label': isOpen ? 'close menu' : 'open menu',\n          'aria-haspopup': true,\n          'data-toggle': true\n        }, eventHandlers, rest);\n      };\n\n      _this.buttonHandleKeyUp = function (event) {\n        // Prevent click event from emitting in Firefox\n        event.preventDefault();\n      };\n\n      _this.buttonHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n\n        if (_this.buttonKeyDownHandlers[key]) {\n          _this.buttonKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n        }\n      };\n\n      _this.buttonHandleClick = function (event) {\n        event.preventDefault(); // handle odd case for Safari and Firefox which\n        // don't give the button the focus properly.\n\n        /* istanbul ignore if (can't reasonably test this) */\n\n        if (_this.props.environment.document.activeElement === _this.props.environment.document.body) {\n          event.target.focus();\n        } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n        // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n        // when building for production and should therefore have no impact on production code.\n\n\n        if (process.env.NODE_ENV === 'test') {\n          _this.toggleMenu({\n            type: clickButton\n          });\n        } else {\n          // Ensure that toggle of menu occurs after the potential blur event in iOS\n          _this.internalSetTimeout(function () {\n            return _this.toggleMenu({\n              type: clickButton\n            });\n          });\n        }\n      };\n\n      _this.buttonHandleBlur = function (event) {\n        var blurTarget = event.target; // Save blur target for comparison with activeElement later\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n        _this.internalSetTimeout(function () {\n          if (!_this.isMouseDown && (_this.props.environment.document.activeElement == null || _this.props.environment.document.activeElement.id !== _this.inputId) && _this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n          ) {\n            _this.reset({\n              type: blurButton\n            });\n          }\n        });\n      };\n\n      _this.getLabelProps = function (props) {\n        return _extends({\n          htmlFor: _this.inputId,\n          id: _this.labelId\n        }, props);\n      };\n\n      _this.getInputProps = function (_temp4) {\n        var _ref4 = _temp4 === void 0 ? {} : _temp4,\n            onKeyDown = _ref4.onKeyDown,\n            onBlur = _ref4.onBlur,\n            onChange = _ref4.onChange,\n            onInput = _ref4.onInput;\n\n        _ref4.onChangeText;\n\n        var rest = _objectWithoutPropertiesLoose(_ref4, _excluded3$2);\n\n        var onChangeKey;\n        var eventHandlers = {};\n        /* istanbul ignore next (preact) */\n\n        {\n          onChangeKey = 'onChange';\n        }\n\n        var _this$getState6 = _this.getState(),\n            inputValue = _this$getState6.inputValue,\n            isOpen = _this$getState6.isOpen,\n            highlightedIndex = _this$getState6.highlightedIndex;\n\n        if (!rest.disabled) {\n          var _eventHandlers;\n\n          eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, _this.inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, _this.inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, _this.inputHandleBlur), _eventHandlers);\n        }\n\n        return _extends({\n          'aria-autocomplete': 'list',\n          'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n          'aria-controls': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n          // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n          autoComplete: 'off',\n          value: inputValue,\n          id: _this.inputId\n        }, eventHandlers, rest);\n      };\n\n      _this.inputHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n\n        if (key && _this.inputKeyDownHandlers[key]) {\n          _this.inputKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n        }\n      };\n\n      _this.inputHandleChange = function (event) {\n        _this.internalSetState({\n          type: changeInput,\n          isOpen: true,\n          inputValue: event.target.value,\n          highlightedIndex: _this.props.defaultHighlightedIndex\n        });\n      };\n\n      _this.inputHandleBlur = function () {\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n        _this.internalSetTimeout(function () {\n          var downshiftButtonIsActive = _this.props.environment.document && !!_this.props.environment.document.activeElement && !!_this.props.environment.document.activeElement.dataset && _this.props.environment.document.activeElement.dataset.toggle && _this._rootNode && _this._rootNode.contains(_this.props.environment.document.activeElement);\n\n          if (!_this.isMouseDown && !downshiftButtonIsActive) {\n            _this.reset({\n              type: blurInput\n            });\n          }\n        });\n      };\n\n      _this.menuRef = function (node) {\n        _this._menuNode = node;\n      };\n\n      _this.getMenuProps = function (_temp5, _temp6) {\n        var _extends3;\n\n        var _ref5 = _temp5 === void 0 ? {} : _temp5,\n            _ref5$refKey = _ref5.refKey,\n            refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n            ref = _ref5.ref,\n            props = _objectWithoutPropertiesLoose(_ref5, _excluded4$1);\n\n        var _ref6 = _temp6 === void 0 ? {} : _temp6,\n            _ref6$suppressRefErro = _ref6.suppressRefError,\n            suppressRefError = _ref6$suppressRefErro === void 0 ? false : _ref6$suppressRefErro;\n\n        _this.getMenuProps.called = true;\n        _this.getMenuProps.refKey = refKey;\n        _this.getMenuProps.suppressRefError = suppressRefError;\n        return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, _this.menuRef), _extends3.role = 'listbox', _extends3['aria-labelledby'] = props && props['aria-label'] ? null : _this.labelId, _extends3.id = _this.menuId, _extends3), props);\n      };\n\n      _this.getItemProps = function (_temp7) {\n        var _enabledEventHandlers;\n\n        var _ref7 = _temp7 === void 0 ? {} : _temp7,\n            onMouseMove = _ref7.onMouseMove,\n            onMouseDown = _ref7.onMouseDown,\n            onClick = _ref7.onClick;\n\n        _ref7.onPress;\n\n        var index = _ref7.index,\n            _ref7$item = _ref7.item,\n            item = _ref7$item === void 0 ? process.env.NODE_ENV === 'production' ?\n        /* istanbul ignore next */\n        undefined : requiredProp('getItemProps', 'item') : _ref7$item,\n            rest = _objectWithoutPropertiesLoose(_ref7, _excluded5$1);\n\n        if (index === undefined) {\n          _this.items.push(item);\n\n          index = _this.items.indexOf(item);\n        } else {\n          _this.items[index] = item;\n        }\n\n        var onSelectKey = 'onClick';\n        var customClickHandler = onClick;\n        var enabledEventHandlers = (_enabledEventHandlers = {\n          // onMouseMove is used over onMouseEnter here. onMouseMove\n          // is only triggered on actual mouse movement while onMouseEnter\n          // can fire on DOM changes, interrupting keyboard navigation\n          onMouseMove: callAllEventHandlers(onMouseMove, function () {\n            if (index === _this.getState().highlightedIndex) {\n              return;\n            }\n\n            _this.setHighlightedIndex(index, {\n              type: itemMouseEnter\n            }); // We never want to manually scroll when changing state based\n            // on `onMouseMove` because we will be moving the element out\n            // from under the user which is currently scrolling/moving the\n            // cursor\n\n\n            _this.avoidScrolling = true;\n\n            _this.internalSetTimeout(function () {\n              return _this.avoidScrolling = false;\n            }, 250);\n          }),\n          onMouseDown: callAllEventHandlers(onMouseDown, function (event) {\n            // This prevents the activeElement from being changed\n            // to the item so it can remain with the current activeElement\n            // which is a more common use case.\n            event.preventDefault();\n          })\n        }, _enabledEventHandlers[onSelectKey] = callAllEventHandlers(customClickHandler, function () {\n          _this.selectItemAtIndex(index, {\n            type: clickItem\n          });\n        }), _enabledEventHandlers); // Passing down the onMouseDown handler to prevent redirect\n        // of the activeElement if clicking on disabled items\n\n        var eventHandlers = rest.disabled ? {\n          onMouseDown: enabledEventHandlers.onMouseDown\n        } : enabledEventHandlers;\n        return _extends({\n          id: _this.getItemId(index),\n          role: 'option',\n          'aria-selected': _this.getState().highlightedIndex === index\n        }, eventHandlers, rest);\n      };\n\n      _this.clearItems = function () {\n        _this.items = [];\n      };\n\n      _this.reset = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(function (_ref8) {\n          var selectedItem = _ref8.selectedItem;\n          return _extends({\n            isOpen: _this.props.defaultIsOpen,\n            highlightedIndex: _this.props.defaultHighlightedIndex,\n            inputValue: _this.props.itemToString(selectedItem)\n          }, otherStateToSet);\n        }, cb);\n      };\n\n      _this.toggleMenu = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(function (_ref9) {\n          var isOpen = _ref9.isOpen;\n          return _extends({\n            isOpen: !isOpen\n          }, isOpen && {\n            highlightedIndex: _this.props.defaultHighlightedIndex\n          }, otherStateToSet);\n        }, function () {\n          var _this$getState7 = _this.getState(),\n              isOpen = _this$getState7.isOpen,\n              highlightedIndex = _this$getState7.highlightedIndex;\n\n          if (isOpen) {\n            if (_this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n              _this.setHighlightedIndex(highlightedIndex, otherStateToSet);\n            }\n          }\n\n          cbToCb(cb)();\n        });\n      };\n\n      _this.openMenu = function (cb) {\n        _this.internalSetState({\n          isOpen: true\n        }, cb);\n      };\n\n      _this.closeMenu = function (cb) {\n        _this.internalSetState({\n          isOpen: false\n        }, cb);\n      };\n\n      _this.updateStatus = debounce(function () {\n        var state = _this.getState();\n\n        var item = _this.items[state.highlightedIndex];\n\n        var resultCount = _this.getItemCount();\n\n        var status = _this.props.getA11yStatusMessage(_extends({\n          itemToString: _this.props.itemToString,\n          previousResultCount: _this.previousResultCount,\n          resultCount: resultCount,\n          highlightedItem: item\n        }, state));\n\n        _this.previousResultCount = resultCount;\n        setStatus(status, _this.props.environment.document);\n      }, 200);\n\n      var _this$props = _this.props,\n          defaultHighlightedIndex = _this$props.defaultHighlightedIndex,\n          _this$props$initialHi = _this$props.initialHighlightedIndex,\n          _highlightedIndex = _this$props$initialHi === void 0 ? defaultHighlightedIndex : _this$props$initialHi,\n          defaultIsOpen = _this$props.defaultIsOpen,\n          _this$props$initialIs = _this$props.initialIsOpen,\n          _isOpen = _this$props$initialIs === void 0 ? defaultIsOpen : _this$props$initialIs,\n          _this$props$initialIn = _this$props.initialInputValue,\n          _inputValue = _this$props$initialIn === void 0 ? '' : _this$props$initialIn,\n          _this$props$initialSe = _this$props.initialSelectedItem,\n          _selectedItem = _this$props$initialSe === void 0 ? null : _this$props$initialSe;\n\n      var _state = _this.getState({\n        highlightedIndex: _highlightedIndex,\n        isOpen: _isOpen,\n        inputValue: _inputValue,\n        selectedItem: _selectedItem\n      });\n\n      if (_state.selectedItem != null && _this.props.initialInputValue === undefined) {\n        _state.inputValue = _this.props.itemToString(_state.selectedItem);\n      }\n\n      _this.state = _state;\n      return _this;\n    }\n\n    var _proto = Downshift.prototype;\n    /**\n     * Clear all running timeouts\n     */\n\n    _proto.internalClearTimeouts = function internalClearTimeouts() {\n      this.timeoutIds.forEach(function (id) {\n        clearTimeout(id);\n      });\n      this.timeoutIds = [];\n    }\n    /**\n     * Gets the state based on internal state or props\n     * If a state value is passed via props, then that\n     * is the value given, otherwise it's retrieved from\n     * stateToMerge\n     *\n     * @param {Object} stateToMerge defaults to this.state\n     * @return {Object} the state\n     */\n    ;\n\n    _proto.getState = function getState$1(stateToMerge) {\n      if (stateToMerge === void 0) {\n        stateToMerge = this.state;\n      }\n\n      return getState(stateToMerge, this.props);\n    };\n\n    _proto.getItemCount = function getItemCount() {\n      // things read better this way. They're in priority order:\n      // 1. `this.itemCount`\n      // 2. `this.props.itemCount`\n      // 3. `this.items.length`\n      var itemCount = this.items.length;\n\n      if (this.itemCount != null) {\n        itemCount = this.itemCount;\n      } else if (this.props.itemCount !== undefined) {\n        itemCount = this.props.itemCount;\n      }\n\n      return itemCount;\n    };\n\n    _proto.getItemNodeFromIndex = function getItemNodeFromIndex(index) {\n      return this.props.environment.document.getElementById(this.getItemId(index));\n    };\n\n    _proto.scrollHighlightedItemIntoView = function scrollHighlightedItemIntoView() {\n      /* istanbul ignore else (react-native) */\n      {\n        var node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n        this.props.scrollIntoView(node, this._menuNode);\n      }\n    };\n\n    _proto.moveHighlightedIndex = function moveHighlightedIndex(amount, otherStateToSet) {\n      var _this6 = this;\n\n      var itemCount = this.getItemCount();\n\n      var _this$getState8 = this.getState(),\n          highlightedIndex = _this$getState8.highlightedIndex;\n\n      if (itemCount > 0) {\n        var nextHighlightedIndex = getNextWrappingIndex(amount, highlightedIndex, itemCount, function (index) {\n          return _this6.getItemNodeFromIndex(index);\n        });\n        this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet);\n      }\n    };\n\n    _proto.getStateAndHelpers = function getStateAndHelpers() {\n      var _this$getState9 = this.getState(),\n          highlightedIndex = _this$getState9.highlightedIndex,\n          inputValue = _this$getState9.inputValue,\n          selectedItem = _this$getState9.selectedItem,\n          isOpen = _this$getState9.isOpen;\n\n      var itemToString = this.props.itemToString;\n      var id = this.id;\n      var getRootProps = this.getRootProps,\n          getToggleButtonProps = this.getToggleButtonProps,\n          getLabelProps = this.getLabelProps,\n          getMenuProps = this.getMenuProps,\n          getInputProps = this.getInputProps,\n          getItemProps = this.getItemProps,\n          openMenu = this.openMenu,\n          closeMenu = this.closeMenu,\n          toggleMenu = this.toggleMenu,\n          selectItem = this.selectItem,\n          selectItemAtIndex = this.selectItemAtIndex,\n          selectHighlightedItem = this.selectHighlightedItem,\n          setHighlightedIndex = this.setHighlightedIndex,\n          clearSelection = this.clearSelection,\n          clearItems = this.clearItems,\n          reset = this.reset,\n          setItemCount = this.setItemCount,\n          unsetItemCount = this.unsetItemCount,\n          setState = this.internalSetState;\n      return {\n        // prop getters\n        getRootProps: getRootProps,\n        getToggleButtonProps: getToggleButtonProps,\n        getLabelProps: getLabelProps,\n        getMenuProps: getMenuProps,\n        getInputProps: getInputProps,\n        getItemProps: getItemProps,\n        // actions\n        reset: reset,\n        openMenu: openMenu,\n        closeMenu: closeMenu,\n        toggleMenu: toggleMenu,\n        selectItem: selectItem,\n        selectItemAtIndex: selectItemAtIndex,\n        selectHighlightedItem: selectHighlightedItem,\n        setHighlightedIndex: setHighlightedIndex,\n        clearSelection: clearSelection,\n        clearItems: clearItems,\n        setItemCount: setItemCount,\n        unsetItemCount: unsetItemCount,\n        setState: setState,\n        // props\n        itemToString: itemToString,\n        // derived\n        id: id,\n        // state\n        highlightedIndex: highlightedIndex,\n        inputValue: inputValue,\n        isOpen: isOpen,\n        selectedItem: selectedItem\n      };\n    } //////////////////////////// ROOT\n    ;\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this7 = this;\n      /* istanbul ignore if (react-native) */\n\n\n      if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      {\n        // this.isMouseDown helps us track whether the mouse is currently held down.\n        // This is useful when the user clicks on an item in the list, but holds the mouse\n        // down long enough for the list to disappear (because the blur event fires on the input)\n        // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n        // trigger hiding the menu.\n        var onMouseDown = function onMouseDown() {\n          _this7.isMouseDown = true;\n        };\n\n        var onMouseUp = function onMouseUp(event) {\n          _this7.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n          // then we don't want to reset downshift\n\n          var contextWithinDownshift = targetWithinDownshift(event.target, [_this7._rootNode, _this7._menuNode], _this7.props.environment);\n\n          if (!contextWithinDownshift && _this7.getState().isOpen) {\n            _this7.reset({\n              type: mouseUp\n            }, function () {\n              return _this7.props.onOuterClick(_this7.getStateAndHelpers());\n            });\n          }\n        }; // Touching an element in iOS gives focus and hover states, but touching out of\n        // the element will remove hover, and persist the focus state, resulting in the\n        // blur event not being triggered.\n        // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n        // If the user taps outside of Downshift, the component should be reset,\n        // but not if the user is swiping\n\n\n        var onTouchStart = function onTouchStart() {\n          _this7.isTouchMove = false;\n        };\n\n        var onTouchMove = function onTouchMove() {\n          _this7.isTouchMove = true;\n        };\n\n        var onTouchEnd = function onTouchEnd(event) {\n          var contextWithinDownshift = targetWithinDownshift(event.target, [_this7._rootNode, _this7._menuNode], _this7.props.environment, false);\n\n          if (!_this7.isTouchMove && !contextWithinDownshift && _this7.getState().isOpen) {\n            _this7.reset({\n              type: touchEnd\n            }, function () {\n              return _this7.props.onOuterClick(_this7.getStateAndHelpers());\n            });\n          }\n        };\n\n        var environment = this.props.environment;\n        environment.addEventListener('mousedown', onMouseDown);\n        environment.addEventListener('mouseup', onMouseUp);\n        environment.addEventListener('touchstart', onTouchStart);\n        environment.addEventListener('touchmove', onTouchMove);\n        environment.addEventListener('touchend', onTouchEnd);\n\n        this.cleanup = function () {\n          _this7.internalClearTimeouts();\n\n          _this7.updateStatus.cancel();\n\n          environment.removeEventListener('mousedown', onMouseDown);\n          environment.removeEventListener('mouseup', onMouseUp);\n          environment.removeEventListener('touchstart', onTouchStart);\n          environment.removeEventListener('touchmove', onTouchMove);\n          environment.removeEventListener('touchend', onTouchEnd);\n        };\n      }\n    };\n\n    _proto.shouldScroll = function shouldScroll(prevState, prevProps) {\n      var _ref10 = this.props.highlightedIndex === undefined ? this.getState() : this.props,\n          currentHighlightedIndex = _ref10.highlightedIndex;\n\n      var _ref11 = prevProps.highlightedIndex === undefined ? prevState : prevProps,\n          prevHighlightedIndex = _ref11.highlightedIndex;\n\n      var scrollWhenOpen = currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen;\n      var scrollWhenNavigating = currentHighlightedIndex !== prevHighlightedIndex;\n      return scrollWhenOpen || scrollWhenNavigating;\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateControlledUnchanged(this.state, prevProps, this.props);\n        /* istanbul ignore if (react-native) */\n\n        if (this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n          validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n        }\n      }\n\n      if (isControlledProp(this.props, 'selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n        this.internalSetState({\n          type: controlledPropUpdatedSelectedItem,\n          inputValue: this.props.itemToString(this.props.selectedItem)\n        });\n      }\n\n      if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n        this.scrollHighlightedItemIntoView();\n      }\n      /* istanbul ignore else (react-native) */\n\n\n      {\n        this.updateStatus();\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.cleanup(); // avoids memory leak\n    };\n\n    _proto.render = function render() {\n      var children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n      // we clear this out each render and it will be populated again as\n      // getItemProps is called.\n\n      this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n      // this render. If they do then we don't need to do anything,\n      // if they don't then we need to clone the element they return and\n      // apply the props for them.\n\n      this.getRootProps.called = false;\n      this.getRootProps.refKey = undefined;\n      this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n      this.getMenuProps.called = false;\n      this.getMenuProps.refKey = undefined;\n      this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n      this.getLabelProps.called = false; // and something similar for getInputProps\n\n      this.getInputProps.called = false;\n      var element = unwrapArray(children(this.getStateAndHelpers()));\n\n      if (!element) {\n        return null;\n      }\n\n      if (this.getRootProps.called || this.props.suppressRefError) {\n        if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n          validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n        }\n\n        return element;\n      } else if (isDOMElement(element)) {\n        // they didn't apply the root props, but we can clone\n        // this and apply the props ourselves\n        return /*#__PURE__*/cloneElement(element, this.getRootProps(getElementProps(element)));\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // they didn't apply the root props, but they need to\n        // otherwise we can't query around the autocomplete\n        throw new Error('downshift: If you return a non-DOM element, you must apply the getRootProps function');\n      }\n      /* istanbul ignore next */\n\n\n      return undefined;\n    };\n\n    return Downshift;\n  }(Component);\n\n  Downshift.defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultIsOpen: false,\n    getA11yStatusMessage: getA11yStatusMessage$1,\n    itemToString: function itemToString(i) {\n      if (i == null) {\n        return '';\n      }\n\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n        // eslint-disable-next-line no-console\n        console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n      }\n\n      return String(i);\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: function selectedItemChanged(prevItem, item) {\n      return prevItem !== item;\n    },\n    environment:\n    /* istanbul ignore next (ssr) */\n    typeof window === 'undefined' ? {} : window,\n    stateReducer: function stateReducer(state, stateToSet) {\n      return stateToSet;\n    },\n    suppressRefError: false,\n    scrollIntoView: scrollIntoView\n  };\n  Downshift.stateChangeTypes = stateChangeTypes$3;\n  return Downshift;\n}();\n\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nvar Downshift$1 = Downshift;\n\nfunction validateGetMenuPropsCalledCorrectly(node, _ref12) {\n  var refKey = _ref12.refKey;\n\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: The ref prop \\\"\" + refKey + \"\\\" from getMenuProps was not applied correctly on your menu element.\");\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref13) {\n  var refKey = _ref13.refKey;\n  var refKeySpecified = refKey !== 'ref';\n  var isComposite = !isDOMElement(element);\n\n  if (isComposite && !refKeySpecified && !isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \\\"\" + refKey + \"\\\"\");\n  }\n\n  if (!isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You must apply the ref prop \\\"\" + refKey + \"\\\" from getRootProps onto your root element.\");\n  }\n}\n\nvar _excluded$3 = [\"isInitialMount\", \"highlightedIndex\", \"items\", \"environment\"];\nvar dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\n\nfunction callOnChangeProps(action, state, newState) {\n  var props = action.props,\n      type = action.type;\n  var changes = {};\n  Object.keys(state).forEach(function (key) {\n    invokeOnChangeHandler(key, action, state, newState);\n\n    if (newState[key] !== state[key]) {\n      changes[key] = newState[key];\n    }\n  });\n\n  if (props.onStateChange && Object.keys(changes).length) {\n    props.onStateChange(_extends({\n      type: type\n    }, changes));\n  }\n}\n\nfunction invokeOnChangeHandler(key, action, state, newState) {\n  var props = action.props,\n      type = action.type;\n  var handler = \"on\" + capitalizeString(key) + \"Change\";\n\n  if (props[handler] && newState[key] !== undefined && newState[key] !== state[key]) {\n    props[handler](_extends({\n      type: type\n    }, newState));\n  }\n}\n/**\n * Default state reducer that returns the changes.\n *\n * @param {Object} s state.\n * @param {Object} a action with changes.\n * @returns {Object} changes.\n */\n\n\nfunction stateReducer(s, a) {\n  return a.changes;\n}\n/**\n * Returns a message to be added to aria-live region when item is selected.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11ySelectionMessage(selectionParameters) {\n  var selectedItem = selectionParameters.selectedItem,\n      itemToStringLocal = selectionParameters.itemToString;\n  return selectedItem ? itemToStringLocal(selectedItem) + \" has been selected.\" : '';\n}\n/**\n * Debounced call for updating the a11y message.\n */\n\n\nvar updateA11yStatus = debounce(function (getA11yMessage, document) {\n  setStatus(getA11yMessage(), document);\n}, 200); // istanbul ignore next\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction useElementIds(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? \"downshift-\" + generateId() : _ref$id,\n      labelId = _ref.labelId,\n      menuId = _ref.menuId,\n      getItemId = _ref.getItemId,\n      toggleButtonId = _ref.toggleButtonId,\n      inputId = _ref.inputId;\n  var elementIdsRef = useRef({\n    labelId: labelId || id + \"-label\",\n    menuId: menuId || id + \"-menu\",\n    getItemId: getItemId || function (index) {\n      return id + \"-item-\" + index;\n    },\n    toggleButtonId: toggleButtonId || id + \"-toggle-button\",\n    inputId: inputId || id + \"-input\"\n  });\n  return elementIdsRef.current;\n}\n\nfunction getItemIndex(index, item, items) {\n  if (index !== undefined) {\n    return index;\n  }\n\n  if (items.length === 0) {\n    return -1;\n  }\n\n  return items.indexOf(item);\n}\n\nfunction itemToString(item) {\n  return item ? String(item) : '';\n}\n\nfunction isAcceptedCharacterKey(key) {\n  return /^\\S{1}$/.test(key);\n}\n\nfunction capitalizeString(string) {\n  return \"\" + string.slice(0, 1).toUpperCase() + string.slice(1);\n}\n\nfunction useLatestRef(val) {\n  var ref = useRef(val); // technically this is not \"concurrent mode safe\" because we're manipulating\n  // the value during render (so it's not idempotent). However, the places this\n  // hook is used is to support memoizing callbacks which will be called\n  // *during* render, so we need the latest values *during* render.\n  // If not for this, then we'd probably want to use useLayoutEffect instead.\n\n  ref.current = val;\n  return ref;\n}\n/**\n * Computes the controlled state using a the previous state, props,\n * two reducers, one from downshift and an optional one from the user.\n * Also calls the onChange handlers for state values that have changed.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\n\nfunction useEnhancedReducer(reducer, initialState, props) {\n  var prevStateRef = useRef();\n  var actionRef = useRef();\n  var enhancedReducer = useCallback(function (state, action) {\n    actionRef.current = action;\n    state = getState(state, action.props);\n    var changes = reducer(state, action);\n    var newState = action.props.stateReducer(state, _extends({}, action, {\n      changes: changes\n    }));\n    return newState;\n  }, [reducer]);\n\n  var _useReducer = useReducer(enhancedReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var propsRef = useLatestRef(props);\n  var dispatchWithProps = useCallback(function (action) {\n    return dispatch(_extends({\n      props: propsRef.current\n    }, action));\n  }, [propsRef]);\n  var action = actionRef.current;\n  useEffect(function () {\n    if (action && prevStateRef.current && prevStateRef.current !== state) {\n      callOnChangeProps(action, getState(prevStateRef.current, action.props), state);\n    }\n\n    prevStateRef.current = state;\n  }, [state, props, action]);\n  return [state, dispatchWithProps];\n}\n/**\n * Wraps the useEnhancedReducer and applies the controlled prop values before\n * returning the new state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\n\nfunction useControlledReducer$1(reducer, initialState, props) {\n  var _useEnhancedReducer = useEnhancedReducer(reducer, initialState, props),\n      state = _useEnhancedReducer[0],\n      dispatch = _useEnhancedReducer[1];\n\n  return [getState(state, props), dispatch];\n}\n\nvar defaultProps$3 = {\n  itemToString: itemToString,\n  stateReducer: stateReducer,\n  getA11ySelectionMessage: getA11ySelectionMessage,\n  scrollIntoView: scrollIntoView,\n  circularNavigation: false,\n  environment:\n  /* istanbul ignore next (ssr) */\n  typeof window === 'undefined' ? {} : window\n};\n\nfunction getDefaultValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n\n  var defaultPropKey = \"default\" + capitalizeString(propKey);\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  }\n\n  return defaultStateValues[propKey];\n}\n\nfunction getInitialValue$1(props, propKey, defaultStateValues) {\n  if (defaultStateValues === void 0) {\n    defaultStateValues = dropdownDefaultStateValues;\n  }\n\n  if (propKey in props) {\n    return props[propKey];\n  }\n\n  var initialPropKey = \"initial\" + capitalizeString(propKey);\n\n  if (initialPropKey in props) {\n    return props[initialPropKey];\n  }\n\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n\nfunction getInitialState$2(props) {\n  var selectedItem = getInitialValue$1(props, 'selectedItem');\n  var isOpen = getInitialValue$1(props, 'isOpen');\n  var highlightedIndex = getInitialValue$1(props, 'highlightedIndex');\n  var inputValue = getInitialValue$1(props, 'inputValue');\n  return {\n    highlightedIndex: highlightedIndex < 0 && selectedItem && isOpen ? props.items.indexOf(selectedItem) : highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nfunction getHighlightedIndexOnOpen(props, state, offset, getItemNodeFromIndex) {\n  var items = props.items,\n      initialHighlightedIndex = props.initialHighlightedIndex,\n      defaultHighlightedIndex = props.defaultHighlightedIndex;\n  var selectedItem = state.selectedItem,\n      highlightedIndex = state.highlightedIndex;\n\n  if (items.length === 0) {\n    return -1;\n  } // initialHighlightedIndex will give value to highlightedIndex on initial state only.\n\n\n  if (initialHighlightedIndex !== undefined && highlightedIndex === initialHighlightedIndex) {\n    return initialHighlightedIndex;\n  }\n\n  if (defaultHighlightedIndex !== undefined) {\n    return defaultHighlightedIndex;\n  }\n\n  if (selectedItem) {\n    if (offset === 0) {\n      return items.indexOf(selectedItem);\n    }\n\n    return getNextWrappingIndex(offset, items.indexOf(selectedItem), items.length, getItemNodeFromIndex, false);\n  }\n\n  if (offset === 0) {\n    return -1;\n  }\n\n  return offset < 0 ? items.length - 1 : 0;\n}\n/**\n * Reuse the movement tracking of mouse and touch events.\n *\n * @param {boolean} isOpen Whether the dropdown is open or not.\n * @param {Array<Object>} downshiftElementRefs Downshift element refs to track movement (toggleButton, menu etc.)\n * @param {Object} environment Environment where component/hook exists.\n * @param {Function} handleBlur Handler on blur from mouse or touch.\n * @returns {Object} Ref containing whether mouseDown or touchMove event is happening\n */\n\n\nfunction useMouseAndTouchTracker(isOpen, downshiftElementRefs, environment, handleBlur) {\n  var mouseAndTouchTrackersRef = useRef({\n    isMouseDown: false,\n    isTouchMove: false\n  });\n  useEffect(function () {\n    // The same strategy for checking if a click occurred inside or outside downsift\n    // as in downshift.js.\n    var onMouseDown = function onMouseDown() {\n      mouseAndTouchTrackersRef.current.isMouseDown = true;\n    };\n\n    var onMouseUp = function onMouseUp(event) {\n      mouseAndTouchTrackersRef.current.isMouseDown = false;\n\n      if (isOpen && !targetWithinDownshift(event.target, downshiftElementRefs.map(function (ref) {\n        return ref.current;\n      }), environment)) {\n        handleBlur();\n      }\n    };\n\n    var onTouchStart = function onTouchStart() {\n      mouseAndTouchTrackersRef.current.isTouchMove = false;\n    };\n\n    var onTouchMove = function onTouchMove() {\n      mouseAndTouchTrackersRef.current.isTouchMove = true;\n    };\n\n    var onTouchEnd = function onTouchEnd(event) {\n      if (isOpen && !mouseAndTouchTrackersRef.current.isTouchMove && !targetWithinDownshift(event.target, downshiftElementRefs.map(function (ref) {\n        return ref.current;\n      }), environment, false)) {\n        handleBlur();\n      }\n    };\n\n    environment.addEventListener('mousedown', onMouseDown);\n    environment.addEventListener('mouseup', onMouseUp);\n    environment.addEventListener('touchstart', onTouchStart);\n    environment.addEventListener('touchmove', onTouchMove);\n    environment.addEventListener('touchend', onTouchEnd);\n    return function cleanup() {\n      environment.removeEventListener('mousedown', onMouseDown);\n      environment.removeEventListener('mouseup', onMouseUp);\n      environment.removeEventListener('touchstart', onTouchStart);\n      environment.removeEventListener('touchmove', onTouchMove);\n      environment.removeEventListener('touchend', onTouchEnd);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, environment]);\n  return mouseAndTouchTrackersRef;\n}\n/* istanbul ignore next */\n// eslint-disable-next-line import/no-mutable-exports\n\n\nvar useGetterPropsCalledChecker = function useGetterPropsCalledChecker() {\n  return noop;\n};\n/**\n * Custom hook that checks if getter props are called correctly.\n *\n * @param  {...any} propKeys Getter prop names to be handled.\n * @returns {Function} Setter function called inside getter props to set call information.\n */\n\n/* istanbul ignore next */\n\n\nif (process.env.NODE_ENV !== 'production') {\n  useGetterPropsCalledChecker = function useGetterPropsCalledChecker() {\n    var isInitialMountRef = useRef(true);\n\n    for (var _len = arguments.length, propKeys = new Array(_len), _key = 0; _key < _len; _key++) {\n      propKeys[_key] = arguments[_key];\n    }\n\n    var getterPropsCalledRef = useRef(propKeys.reduce(function (acc, propKey) {\n      acc[propKey] = {};\n      return acc;\n    }, {}));\n    useEffect(function () {\n      Object.keys(getterPropsCalledRef.current).forEach(function (propKey) {\n        var propCallInfo = getterPropsCalledRef.current[propKey];\n\n        if (isInitialMountRef.current) {\n          if (!Object.keys(propCallInfo).length) {\n            // eslint-disable-next-line no-console\n            console.error(\"downshift: You forgot to call the \" + propKey + \" getter function on your component / element.\");\n            return;\n          }\n        }\n\n        var suppressRefError = propCallInfo.suppressRefError,\n            refKey = propCallInfo.refKey,\n            elementRef = propCallInfo.elementRef;\n\n        if ((!elementRef || !elementRef.current) && !suppressRefError) {\n          // eslint-disable-next-line no-console\n          console.error(\"downshift: The ref prop \\\"\" + refKey + \"\\\" from \" + propKey + \" was not applied correctly on your element.\");\n        }\n      });\n      isInitialMountRef.current = false;\n    });\n    var setGetterPropCallInfo = useCallback(function (propKey, suppressRefError, refKey, elementRef) {\n      getterPropsCalledRef.current[propKey] = {\n        suppressRefError: suppressRefError,\n        refKey: refKey,\n        elementRef: elementRef\n      };\n    }, []);\n    return setGetterPropCallInfo;\n  };\n}\n\nfunction useA11yMessageSetter(getA11yMessage, dependencyArray, _ref2) {\n  var isInitialMount = _ref2.isInitialMount,\n      highlightedIndex = _ref2.highlightedIndex,\n      items = _ref2.items,\n      environment = _ref2.environment,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded$3); // Sets a11y status message on changes in state.\n\n\n  useEffect(function () {\n    if (isInitialMount || false) {\n      return;\n    }\n\n    updateA11yStatus(function () {\n      return getA11yMessage(_extends({\n        highlightedIndex: highlightedIndex,\n        highlightedItem: items[highlightedIndex],\n        resultCount: items.length\n      }, rest));\n    }, environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencyArray);\n}\n\nfunction useScrollIntoView(_ref3) {\n  var highlightedIndex = _ref3.highlightedIndex,\n      isOpen = _ref3.isOpen,\n      itemRefs = _ref3.itemRefs,\n      getItemNodeFromIndex = _ref3.getItemNodeFromIndex,\n      menuElement = _ref3.menuElement,\n      scrollIntoViewProp = _ref3.scrollIntoView; // used not to scroll on highlight by mouse.\n\n  var shouldScrollRef = useRef(true); // Scroll on highlighted item if change comes from keyboard.\n\n  useIsomorphicLayoutEffect(function () {\n    if (highlightedIndex < 0 || !isOpen || !Object.keys(itemRefs.current).length) {\n      return;\n    }\n\n    if (shouldScrollRef.current === false) {\n      shouldScrollRef.current = true;\n    } else {\n      scrollIntoViewProp(getItemNodeFromIndex(highlightedIndex), menuElement);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [highlightedIndex]);\n  return shouldScrollRef;\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nvar useControlPropsValidator = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  useControlPropsValidator = function useControlPropsValidator(_ref4) {\n    var isInitialMount = _ref4.isInitialMount,\n        props = _ref4.props,\n        state = _ref4.state; // used for checking when props are moving from controlled to uncontrolled.\n\n    var prevPropsRef = useRef(props);\n    useEffect(function () {\n      if (isInitialMount) {\n        return;\n      }\n\n      validateControlledUnchanged(state, prevPropsRef.current, props);\n      prevPropsRef.current = props;\n    }, [state, props, isInitialMount]);\n  };\n}\n/* eslint-disable complexity */\n\n\nfunction downshiftCommonReducer(state, action, stateChangeTypes) {\n  var type = action.type,\n      props = action.props;\n  var changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemMouseMove:\n      changes = {\n        highlightedIndex: action.index\n      };\n      break;\n\n    case stateChangeTypes.MenuMouseLeave:\n      changes = {\n        highlightedIndex: -1\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case stateChangeTypes.FunctionSetHighlightedIndex:\n      changes = {\n        highlightedIndex: action.highlightedIndex\n      };\n      break;\n\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        selectedItem: getDefaultValue$1(props, 'selectedItem'),\n        inputValue: getDefaultValue$1(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _extends({}, state, changes);\n}\n/* eslint-enable complexity */\n\n\nfunction getItemIndexByCharacterKey(_a) {\n  var keysSoFar = _a.keysSoFar,\n      highlightedIndex = _a.highlightedIndex,\n      items = _a.items,\n      itemToString = _a.itemToString,\n      getItemNodeFromIndex = _a.getItemNodeFromIndex;\n  var lowerCasedKeysSoFar = keysSoFar.toLowerCase();\n\n  for (var index = 0; index < items.length; index++) {\n    var offsetIndex = (index + highlightedIndex + 1) % items.length;\n    var item = items[offsetIndex];\n\n    if (item !== undefined && itemToString(item).toLowerCase().startsWith(lowerCasedKeysSoFar)) {\n      var element = getItemNodeFromIndex(offsetIndex);\n\n      if (!(element === null || element === void 0 ? void 0 : element.hasAttribute('disabled'))) {\n        return offsetIndex;\n      }\n    }\n  }\n\n  return highlightedIndex;\n}\n\nvar propTypes$2 = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specift if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\nfunction getA11yStatusMessage(_a) {\n  var isOpen = _a.isOpen,\n      resultCount = _a.resultCount,\n      previousResultCount = _a.previousResultCount;\n\n  if (!isOpen) {\n    return '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  if (resultCount !== previousResultCount) {\n    return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter or Space Bar keys to select.\";\n  }\n\n  return '';\n}\n\nvar defaultProps$2 = __assign(__assign({}, defaultProps$3), {\n  getA11yStatusMessage: getA11yStatusMessage\n}); // eslint-disable-next-line import/no-mutable-exports\n\n\nvar validatePropTypes$2 = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes$2 = function validatePropTypes$2(options, caller) {\n    PropTypes.checkPropTypes(propTypes$2, options, 'prop', caller.name);\n  };\n}\n\nvar MenuKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_down__' : 0;\nvar MenuKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_up__' : 1;\nvar MenuKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_escape__' : 2;\nvar MenuKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_home__' : 3;\nvar MenuKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_end__' : 4;\nvar MenuKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_enter__' : 5;\nvar MenuKeyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_space_button__' : 6;\nvar MenuKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_character__' : 7;\nvar MenuBlur = process.env.NODE_ENV !== \"production\" ? '__menu_blur__' : 8;\nvar MenuMouseLeave$1 = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 9;\nvar ItemMouseMove$1 = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 10;\nvar ItemClick$1 = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 11;\nvar ToggleButtonClick$1 = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 12;\nvar ToggleButtonKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_down__' : 13;\nvar ToggleButtonKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_up__' : 14;\nvar ToggleButtonKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_character__' : 15;\nvar FunctionToggleMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 16;\nvar FunctionOpenMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 17;\nvar FunctionCloseMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 18;\nvar FunctionSetHighlightedIndex$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 19;\nvar FunctionSelectItem$1 = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 20;\nvar FunctionSetInputValue$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 21;\nvar FunctionReset$2 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 22;\nvar stateChangeTypes$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MenuKeyDownArrowDown: MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp: MenuKeyDownArrowUp,\n  MenuKeyDownEscape: MenuKeyDownEscape,\n  MenuKeyDownHome: MenuKeyDownHome,\n  MenuKeyDownEnd: MenuKeyDownEnd,\n  MenuKeyDownEnter: MenuKeyDownEnter,\n  MenuKeyDownSpaceButton: MenuKeyDownSpaceButton,\n  MenuKeyDownCharacter: MenuKeyDownCharacter,\n  MenuBlur: MenuBlur,\n  MenuMouseLeave: MenuMouseLeave$1,\n  ItemMouseMove: ItemMouseMove$1,\n  ItemClick: ItemClick$1,\n  ToggleButtonClick: ToggleButtonClick$1,\n  ToggleButtonKeyDownArrowDown: ToggleButtonKeyDownArrowDown,\n  ToggleButtonKeyDownArrowUp: ToggleButtonKeyDownArrowUp,\n  ToggleButtonKeyDownCharacter: ToggleButtonKeyDownCharacter,\n  FunctionToggleMenu: FunctionToggleMenu$1,\n  FunctionOpenMenu: FunctionOpenMenu$1,\n  FunctionCloseMenu: FunctionCloseMenu$1,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex$1,\n  FunctionSelectItem: FunctionSelectItem$1,\n  FunctionSetInputValue: FunctionSetInputValue$1,\n  FunctionReset: FunctionReset$2\n});\n/* eslint-disable complexity */\n\nfunction downshiftSelectReducer(state, action) {\n  var type = action.type,\n      props = action.props,\n      shiftKey = action.shiftKey;\n  var changes;\n\n  switch (type) {\n    case ItemClick$1:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index]\n      };\n      break;\n\n    case ToggleButtonKeyDownCharacter:\n      {\n        var lowercasedKey = action.key;\n        var inputValue = \"\" + state.inputValue + lowercasedKey;\n        var itemIndex = getItemIndexByCharacterKey({\n          keysSoFar: inputValue,\n          highlightedIndex: state.selectedItem ? props.items.indexOf(state.selectedItem) : -1,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = _extends({\n          inputValue: inputValue\n        }, itemIndex >= 0 && {\n          selectedItem: props.items[itemIndex]\n        });\n      }\n      break;\n\n    case ToggleButtonKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case ToggleButtonKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case MenuKeyDownEnter:\n    case MenuKeyDownSpaceButton:\n      changes = _extends({\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex')\n      }, state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex]\n      });\n      break;\n\n    case MenuKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuKeyDownCharacter:\n      {\n        var _lowercasedKey = action.key;\n\n        var _inputValue = \"\" + state.inputValue + _lowercasedKey;\n\n        var highlightedIndex = getItemIndexByCharacterKey({\n          keysSoFar: _inputValue,\n          highlightedIndex: state.highlightedIndex,\n          items: props.items,\n          itemToString: props.itemToString,\n          getItemNodeFromIndex: action.getItemNodeFromIndex\n        });\n        changes = _extends({\n          inputValue: _inputValue\n        }, highlightedIndex >= 0 && {\n          highlightedIndex: highlightedIndex\n        });\n      }\n      break;\n\n    case MenuKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case MenuKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case FunctionSelectItem$1:\n      changes = {\n        selectedItem: action.selectedItem\n      };\n      break;\n\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$2);\n  }\n\n  return _extends({}, state, changes);\n}\n/* eslint-enable complexity */\n\n\nvar _excluded$2 = [\"onMouseLeave\", \"refKey\", \"onKeyDown\", \"onBlur\", \"ref\"],\n    _excluded2$2 = [\"onClick\", \"onKeyDown\", \"refKey\", \"ref\"],\n    _excluded3$1 = [\"item\", \"index\", \"onMouseMove\", \"onClick\", \"refKey\", \"ref\"];\nuseSelect.stateChangeTypes = stateChangeTypes$2;\n\nfunction useSelect(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes$2(userProps, useSelect); // Props defaults and destructuring.\n\n  var props = _extends({}, defaultProps$2, userProps);\n\n  var items = props.items,\n      scrollIntoView = props.scrollIntoView,\n      environment = props.environment,\n      initialIsOpen = props.initialIsOpen,\n      defaultIsOpen = props.defaultIsOpen,\n      itemToString = props.itemToString,\n      getA11ySelectionMessage = props.getA11ySelectionMessage,\n      getA11yStatusMessage = props.getA11yStatusMessage; // Initial state depending on controlled props.\n\n  var initialState = getInitialState$2(props);\n\n  var _useControlledReducer = useControlledReducer$1(downshiftSelectReducer, initialState, props),\n      state = _useControlledReducer[0],\n      dispatch = _useControlledReducer[1];\n\n  var isOpen = state.isOpen,\n      highlightedIndex = state.highlightedIndex,\n      selectedItem = state.selectedItem,\n      inputValue = state.inputValue; // Element efs.\n\n  var toggleButtonRef = useRef(null);\n  var menuRef = useRef(null);\n  var itemRefs = useRef({}); // used not to trigger menu blur action in some scenarios.\n\n  var shouldBlurRef = useRef(true); // used to keep the inputValue clearTimeout object between renders.\n\n  var clearTimeoutRef = useRef(null); // prevent id re-generation between renders.\n\n  var elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  var previousResultCountRef = useRef();\n  var isInitialMountRef = useRef(true); // utility callback to get item element.\n\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  }); // Some utils.\n\n  var getItemNodeFromIndex = useCallback(function (index) {\n    return itemRefs.current[elementIds.getItemId(index)];\n  }, [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], _extends({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], _extends({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Scroll on highlighted item if change comes from keyboard.\n\n  var shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    itemRefs: itemRefs,\n    scrollIntoView: scrollIntoView,\n    getItemNodeFromIndex: getItemNodeFromIndex\n  }); // Sets cleanup for the keysSoFar callback, debounded after 500ms.\n\n  useEffect(function () {\n    // init the clean function here as we need access to dispatch.\n    clearTimeoutRef.current = debounce(function (outerDispatch) {\n      outerDispatch({\n        type: FunctionSetInputValue$1,\n        inputValue: ''\n      });\n    }, 500); // Cancel any pending debounced calls on mount\n\n    return function () {\n      clearTimeoutRef.current.cancel();\n    };\n  }, []); // Invokes the keysSoFar callback set up above.\n\n  useEffect(function () {\n    if (!inputValue) {\n      return;\n    }\n\n    clearTimeoutRef.current(dispatch);\n  }, [dispatch, inputValue]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  });\n  /* Controls the focus on the menu or the toggle button. */\n\n  useEffect(function () {\n    // Don't focus menu on first render.\n    if (isInitialMountRef.current) {\n      // Unless it was initialised as open.\n      if ((initialIsOpen || defaultIsOpen || isOpen) && menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus menu on open.\n\n\n    if (isOpen) {\n      // istanbul ignore else\n      if (menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus toggleButton on close, but not if it was closed with (Shift+)Tab.\n\n\n    if (environment.document.activeElement === menuRef.current) {\n      // istanbul ignore else\n      if (toggleButtonRef.current) {\n        shouldBlurRef.current = false;\n        toggleButtonRef.current.focus();\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  var mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [menuRef, toggleButtonRef], environment, function () {\n    dispatch({\n      type: MenuBlur\n    });\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getMenuProps', 'getToggleButtonProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(function () {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]); // Event handler functions.\n\n  var toggleButtonKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: ToggleButtonKeyDownArrowDown,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: ToggleButtonKeyDownArrowUp,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      }\n    };\n  }, [dispatch, getItemNodeFromIndex]);\n  var menuKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownArrowDown,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownArrowUp,\n          getItemNodeFromIndex: getItemNodeFromIndex,\n          shiftKey: event.shiftKey\n        });\n      },\n      Home: function Home(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownHome,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      End: function End(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownEnd,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Escape: function Escape() {\n        dispatch({\n          type: MenuKeyDownEscape\n        });\n      },\n      Enter: function Enter(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownEnter\n        });\n      },\n      ' ': function _(event) {\n        event.preventDefault();\n        dispatch({\n          type: MenuKeyDownSpaceButton\n        });\n      }\n    };\n  }, [dispatch, getItemNodeFromIndex]); // Action functions.\n\n  var toggleMenu = useCallback(function () {\n    dispatch({\n      type: FunctionToggleMenu$1\n    });\n  }, [dispatch]);\n  var closeMenu = useCallback(function () {\n    dispatch({\n      type: FunctionCloseMenu$1\n    });\n  }, [dispatch]);\n  var openMenu = useCallback(function () {\n    dispatch({\n      type: FunctionOpenMenu$1\n    });\n  }, [dispatch]);\n  var setHighlightedIndex = useCallback(function (newHighlightedIndex) {\n    dispatch({\n      type: FunctionSetHighlightedIndex$1,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  var selectItem = useCallback(function (newSelectedItem) {\n    dispatch({\n      type: FunctionSelectItem$1,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset$2\n    });\n  }, [dispatch]);\n  var setInputValue = useCallback(function (newInputValue) {\n    dispatch({\n      type: FunctionSetInputValue$1,\n      inputValue: newInputValue\n    });\n  }, [dispatch]); // Getter functions.\n\n  var getLabelProps = useCallback(function (labelProps) {\n    return _extends({\n      id: elementIds.labelId,\n      htmlFor: elementIds.toggleButtonId\n    }, labelProps);\n  }, [elementIds]);\n  var getMenuProps = useCallback(function (_temp, _temp2) {\n    var _extends2;\n\n    var _ref = _temp === void 0 ? {} : _temp,\n        onMouseLeave = _ref.onMouseLeave,\n        _ref$refKey = _ref.refKey,\n        refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n        onKeyDown = _ref.onKeyDown,\n        onBlur = _ref.onBlur,\n        ref = _ref.ref,\n        rest = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$suppressRefErro = _ref2.suppressRefError,\n        suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n    var latestState = latest.current.state;\n\n    var menuHandleKeyDown = function menuHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && menuKeyDownHandlers[key]) {\n        menuKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: MenuKeyDownCharacter,\n          key: key,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n\n    var menuHandleBlur = function menuHandleBlur() {\n      // if the blur was a result of selection, we don't trigger this action.\n      if (shouldBlurRef.current === false) {\n        shouldBlurRef.current = true;\n        return;\n      }\n\n      var shouldBlur = !mouseAndTouchTrackersRef.current.isMouseDown;\n      /* istanbul ignore else */\n\n      if (shouldBlur) {\n        dispatch({\n          type: MenuBlur\n        });\n      }\n    };\n\n    var menuHandleMouseLeave = function menuHandleMouseLeave() {\n      dispatch({\n        type: MenuMouseLeave$1\n      });\n    };\n\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {\n      menuRef.current = menuNode;\n    }), _extends2.id = elementIds.menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = elementIds.labelId, _extends2.tabIndex = -1, _extends2), latestState.isOpen && latestState.highlightedIndex > -1 && {\n      'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n    }, {\n      onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave),\n      onKeyDown: callAllEventHandlers(onKeyDown, menuHandleKeyDown),\n      onBlur: callAllEventHandlers(onBlur, menuHandleBlur)\n    }, rest);\n  }, [dispatch, latest, menuKeyDownHandlers, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  var getToggleButtonProps = useCallback(function (_temp3, _temp4) {\n    var _extends3;\n\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n        onClick = _ref3.onClick,\n        onKeyDown = _ref3.onKeyDown,\n        _ref3$refKey = _ref3.refKey,\n        refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n        ref = _ref3.ref,\n        rest = _objectWithoutPropertiesLoose(_ref3, _excluded2$2);\n\n    var _ref4 = _temp4 === void 0 ? {} : _temp4,\n        _ref4$suppressRefErro = _ref4.suppressRefError,\n        suppressRefError = _ref4$suppressRefErro === void 0 ? false : _ref4$suppressRefErro;\n\n    var toggleButtonHandleClick = function toggleButtonHandleClick() {\n      dispatch({\n        type: ToggleButtonClick$1\n      });\n    };\n\n    var toggleButtonHandleKeyDown = function toggleButtonHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && toggleButtonKeyDownHandlers[key]) {\n        toggleButtonKeyDownHandlers[key](event);\n      } else if (isAcceptedCharacterKey(key)) {\n        dispatch({\n          type: ToggleButtonKeyDownCharacter,\n          key: key,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n\n    var toggleProps = _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (toggleButtonNode) {\n      toggleButtonRef.current = toggleButtonNode;\n    }), _extends3.id = elementIds.toggleButtonId, _extends3['aria-haspopup'] = 'listbox', _extends3['aria-expanded'] = latest.current.state.isOpen, _extends3['aria-labelledby'] = elementIds.labelId + \" \" + elementIds.toggleButtonId, _extends3), rest);\n\n    if (!rest.disabled) {\n      toggleProps.onClick = callAllEventHandlers(onClick, toggleButtonHandleClick);\n      toggleProps.onKeyDown = callAllEventHandlers(onKeyDown, toggleButtonHandleKeyDown);\n    }\n\n    setGetterPropCallInfo('getToggleButtonProps', suppressRefError, refKey, toggleButtonRef);\n    return toggleProps;\n  }, [dispatch, latest, toggleButtonKeyDownHandlers, setGetterPropCallInfo, elementIds, getItemNodeFromIndex]);\n  var getItemProps = useCallback(function (_temp5) {\n    var _extends4;\n\n    var _ref5 = _temp5 === void 0 ? {} : _temp5,\n        item = _ref5.item,\n        index = _ref5.index,\n        onMouseMove = _ref5.onMouseMove,\n        onClick = _ref5.onClick,\n        _ref5$refKey = _ref5.refKey,\n        refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n        ref = _ref5.ref,\n        rest = _objectWithoutPropertiesLoose(_ref5, _excluded3$1);\n\n    var _latest$current = latest.current,\n        latestState = _latest$current.state,\n        latestProps = _latest$current.props;\n\n    var itemHandleMouseMove = function itemHandleMouseMove() {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove$1,\n        index: index\n      });\n    };\n\n    var itemHandleClick = function itemHandleClick() {\n      dispatch({\n        type: ItemClick$1,\n        index: index\n      });\n    };\n\n    var itemIndex = getItemIndex(index, item, latestProps.items);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n\n    var itemProps = _extends((_extends4 = {\n      role: 'option',\n      'aria-selected': \"\" + (itemIndex === latestState.highlightedIndex),\n      id: elementIds.getItemId(itemIndex)\n    }, _extends4[refKey] = handleRefs(ref, function (itemNode) {\n      if (itemNode) {\n        itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n      }\n    }), _extends4), rest);\n\n    if (!rest.disabled) {\n      itemProps.onMouseMove = callAllEventHandlers(onMouseMove, itemHandleMouseMove);\n      itemProps.onClick = callAllEventHandlers(onClick, itemHandleClick);\n    }\n\n    return itemProps;\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  return {\n    // prop getters.\n    getToggleButtonProps: getToggleButtonProps,\n    getLabelProps: getLabelProps,\n    getMenuProps: getMenuProps,\n    getItemProps: getItemProps,\n    // actions.\n    toggleMenu: toggleMenu,\n    openMenu: openMenu,\n    closeMenu: closeMenu,\n    setHighlightedIndex: setHighlightedIndex,\n    selectItem: selectItem,\n    reset: reset,\n    setInputValue: setInputValue,\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nvar InputKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_down__' : 0;\nvar InputKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_up__' : 1;\nvar InputKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__input_keydown_escape__' : 2;\nvar InputKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__input_keydown_home__' : 3;\nvar InputKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__input_keydown_end__' : 4;\nvar InputKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__input_keydown_enter__' : 5;\nvar InputChange = process.env.NODE_ENV !== \"production\" ? '__input_change__' : 6;\nvar InputBlur = process.env.NODE_ENV !== \"production\" ? '__input_blur__' : 7;\nvar MenuMouseLeave = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 8;\nvar ItemMouseMove = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 9;\nvar ItemClick = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 10;\nvar ToggleButtonClick = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 11;\nvar FunctionToggleMenu = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 12;\nvar FunctionOpenMenu = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 13;\nvar FunctionCloseMenu = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 14;\nvar FunctionSetHighlightedIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 15;\nvar FunctionSelectItem = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 16;\nvar FunctionSetInputValue = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 17;\nvar FunctionReset$1 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 18;\nvar ControlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__controlled_prop_updated_selected_item__' : 19;\nvar stateChangeTypes$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  InputKeyDownArrowDown: InputKeyDownArrowDown,\n  InputKeyDownArrowUp: InputKeyDownArrowUp,\n  InputKeyDownEscape: InputKeyDownEscape,\n  InputKeyDownHome: InputKeyDownHome,\n  InputKeyDownEnd: InputKeyDownEnd,\n  InputKeyDownEnter: InputKeyDownEnter,\n  InputChange: InputChange,\n  InputBlur: InputBlur,\n  MenuMouseLeave: MenuMouseLeave,\n  ItemMouseMove: ItemMouseMove,\n  ItemClick: ItemClick,\n  ToggleButtonClick: ToggleButtonClick,\n  FunctionToggleMenu: FunctionToggleMenu,\n  FunctionOpenMenu: FunctionOpenMenu,\n  FunctionCloseMenu: FunctionCloseMenu,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex,\n  FunctionSelectItem: FunctionSelectItem,\n  FunctionSetInputValue: FunctionSetInputValue,\n  FunctionReset: FunctionReset$1,\n  ControlledPropUpdatedSelectedItem: ControlledPropUpdatedSelectedItem\n});\n\nfunction getInitialState$1(props) {\n  var initialState = getInitialState$2(props);\n  var selectedItem = initialState.selectedItem;\n  var inputValue = initialState.inputValue;\n\n  if (inputValue === '' && selectedItem && props.defaultInputValue === undefined && props.initialInputValue === undefined && props.inputValue === undefined) {\n    inputValue = props.itemToString(selectedItem);\n  }\n\n  return _extends({}, initialState, {\n    inputValue: inputValue\n  });\n}\n\nvar propTypes$1 = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  inputValue: PropTypes.string,\n  defaultInputValue: PropTypes.string,\n  initialInputValue: PropTypes.string,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  inputId: PropTypes.string,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n/**\n * The useCombobox version of useControlledReducer, which also\n * checks if the controlled prop selectedItem changed between\n * renders. If so, it will also update inputValue with its\n * string equivalent. It uses the common useEnhancedReducer to\n * compute the rest of the state.\n *\n * @param {Function} reducer Reducer function from downshift.\n * @param {Object} initialState Initial state of the hook.\n * @param {Object} props The hook props.\n * @returns {Array} An array with the state and an action dispatcher.\n */\n\nfunction useControlledReducer(reducer, initialState, props) {\n  var previousSelectedItemRef = useRef();\n\n  var _useEnhancedReducer = useEnhancedReducer(reducer, initialState, props),\n      state = _useEnhancedReducer[0],\n      dispatch = _useEnhancedReducer[1]; // ToDo: if needed, make same approach as selectedItemChanged from Downshift.\n\n\n  useEffect(function () {\n    if (isControlledProp(props, 'selectedItem')) {\n      if (previousSelectedItemRef.current !== props.selectedItem) {\n        dispatch({\n          type: ControlledPropUpdatedSelectedItem,\n          inputValue: props.itemToString(props.selectedItem)\n        });\n      }\n\n      previousSelectedItemRef.current = state.selectedItem === previousSelectedItemRef.current ? props.selectedItem : state.selectedItem;\n    }\n  });\n  return [getState(state, props), dispatch];\n} // eslint-disable-next-line import/no-mutable-exports\n\n\nvar validatePropTypes$1 = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes$1 = function validatePropTypes(options, caller) {\n    PropTypes.checkPropTypes(propTypes$1, options, 'prop', caller.name);\n  };\n}\n\nvar defaultProps$1 = _extends({}, defaultProps$3, {\n  getA11yStatusMessage: getA11yStatusMessage$1,\n  circularNavigation: true\n});\n/* eslint-disable complexity */\n\n\nfunction downshiftUseComboboxReducer(state, action) {\n  var type = action.type,\n      props = action.props,\n      shiftKey = action.shiftKey;\n  var changes;\n\n  switch (type) {\n    case ItemClick:\n      changes = {\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case InputKeyDownArrowDown:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n\n      break;\n\n    case InputKeyDownArrowUp:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n          isOpen: props.items.length >= 0\n        };\n      }\n\n      break;\n\n    case InputKeyDownEnter:\n      changes = _extends({}, state.isOpen && state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex],\n        isOpen: getDefaultValue$1(props, 'isOpen'),\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        inputValue: props.itemToString(props.items[state.highlightedIndex])\n      });\n      break;\n\n    case InputKeyDownEscape:\n      changes = _extends({\n        isOpen: false,\n        highlightedIndex: -1\n      }, !state.isOpen && {\n        selectedItem: null,\n        inputValue: ''\n      });\n      break;\n\n    case InputKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputBlur:\n      changes = _extends({\n        isOpen: false,\n        highlightedIndex: -1\n      }, state.highlightedIndex >= 0 && action.selectItem && {\n        selectedItem: props.items[state.highlightedIndex],\n        inputValue: props.itemToString(props.items[state.highlightedIndex])\n      });\n      break;\n\n    case InputChange:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getDefaultValue$1(props, 'highlightedIndex'),\n        inputValue: action.inputValue\n      };\n      break;\n\n    case FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n\n    case ControlledPropUpdatedSelectedItem:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    default:\n      return downshiftCommonReducer(state, action, stateChangeTypes$1);\n  }\n\n  return _extends({}, state, changes);\n}\n/* eslint-enable complexity */\n\n\nvar _excluded$1 = [\"onMouseLeave\", \"refKey\", \"ref\"],\n    _excluded2$1 = [\"item\", \"index\", \"refKey\", \"ref\", \"onMouseMove\", \"onClick\", \"onPress\"],\n    _excluded3 = [\"onClick\", \"onPress\", \"refKey\", \"ref\"],\n    _excluded4 = [\"onKeyDown\", \"onChange\", \"onInput\", \"onBlur\", \"onChangeText\", \"refKey\", \"ref\"],\n    _excluded5 = [\"refKey\", \"ref\"];\nuseCombobox.stateChangeTypes = stateChangeTypes$1;\n\nfunction useCombobox(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes$1(userProps, useCombobox); // Props defaults and destructuring.\n\n  var props = _extends({}, defaultProps$1, userProps);\n\n  var initialIsOpen = props.initialIsOpen,\n      defaultIsOpen = props.defaultIsOpen,\n      items = props.items,\n      scrollIntoView = props.scrollIntoView,\n      environment = props.environment,\n      getA11yStatusMessage = props.getA11yStatusMessage,\n      getA11ySelectionMessage = props.getA11ySelectionMessage,\n      itemToString = props.itemToString; // Initial state depending on controlled props.\n\n  var initialState = getInitialState$1(props);\n\n  var _useControlledReducer = useControlledReducer(downshiftUseComboboxReducer, initialState, props),\n      state = _useControlledReducer[0],\n      dispatch = _useControlledReducer[1];\n\n  var isOpen = state.isOpen,\n      highlightedIndex = state.highlightedIndex,\n      selectedItem = state.selectedItem,\n      inputValue = state.inputValue; // Element refs.\n\n  var menuRef = useRef(null);\n  var itemRefs = useRef({});\n  var inputRef = useRef(null);\n  var toggleButtonRef = useRef(null);\n  var comboboxRef = useRef(null);\n  var isInitialMountRef = useRef(true); // prevent id re-generation between renders.\n\n  var elementIds = useElementIds(props); // used to keep track of how many items we had on previous cycle.\n\n  var previousResultCountRef = useRef(); // utility callback to get item element.\n\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  });\n  var getItemNodeFromIndex = useCallback(function (index) {\n    return itemRefs.current[elementIds.getItemId(index)];\n  }, [elementIds]); // Effects.\n  // Sets a11y status message on changes in state.\n\n  useA11yMessageSetter(getA11yStatusMessage, [isOpen, highlightedIndex, inputValue, items], _extends({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Sets a11y status message on changes in selectedItem.\n\n  useA11yMessageSetter(getA11ySelectionMessage, [selectedItem], _extends({\n    isInitialMount: isInitialMountRef.current,\n    previousResultCount: previousResultCountRef.current,\n    items: items,\n    environment: environment,\n    itemToString: itemToString\n  }, state)); // Scroll on highlighted item if change comes from keyboard.\n\n  var shouldScrollRef = useScrollIntoView({\n    menuElement: menuRef.current,\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    itemRefs: itemRefs,\n    scrollIntoView: scrollIntoView,\n    getItemNodeFromIndex: getItemNodeFromIndex\n  });\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  }); // Focus the input on first render if required.\n\n  useEffect(function () {\n    var focusOnOpen = initialIsOpen || defaultIsOpen || isOpen;\n\n    if (focusOnOpen && inputRef.current) {\n      inputRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    previousResultCountRef.current = items.length;\n  }); // Add mouse/touch events to document.\n\n  var mouseAndTouchTrackersRef = useMouseAndTouchTracker(isOpen, [comboboxRef, menuRef, toggleButtonRef], environment, function () {\n    dispatch({\n      type: InputBlur,\n      selectItem: false\n    });\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getInputProps', 'getComboboxProps', 'getMenuProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Reset itemRefs on close.\n\n  useEffect(function () {\n    if (!isOpen) {\n      itemRefs.current = {};\n    }\n  }, [isOpen]);\n  /* Event handler functions */\n\n  var inputKeyDownHandlers = useMemo(function () {\n    return {\n      ArrowDown: function ArrowDown(event) {\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownArrowDown,\n          shiftKey: event.shiftKey,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      ArrowUp: function ArrowUp(event) {\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownArrowUp,\n          shiftKey: event.shiftKey,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Home: function Home(event) {\n        if (!latest.current.state.isOpen) {\n          return;\n        }\n\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownHome,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      End: function End(event) {\n        if (!latest.current.state.isOpen) {\n          return;\n        }\n\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownEnd,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      },\n      Escape: function Escape() {\n        var latestState = latest.current.state;\n\n        if (latestState.isOpen || latestState.inputValue || latestState.selectedItem || latestState.highlightedIndex > -1) {\n          dispatch({\n            type: InputKeyDownEscape\n          });\n        }\n      },\n      Enter: function Enter(event) {\n        var latestState = latest.current.state; // if closed or no highlighted index, do nothing.\n\n        if (!latestState.isOpen || latestState.highlightedIndex < 0 || event.which === 229 // if IME composing, wait for next Enter keydown event.\n        ) {\n          return;\n        }\n\n        event.preventDefault();\n        dispatch({\n          type: InputKeyDownEnter,\n          getItemNodeFromIndex: getItemNodeFromIndex\n        });\n      }\n    };\n  }, [dispatch, latest, getItemNodeFromIndex]); // Getter props.\n\n  var getLabelProps = useCallback(function (labelProps) {\n    return _extends({\n      id: elementIds.labelId,\n      htmlFor: elementIds.inputId\n    }, labelProps);\n  }, [elementIds]);\n  var getMenuProps = useCallback(function (_temp, _temp2) {\n    var _extends2;\n\n    var _ref = _temp === void 0 ? {} : _temp,\n        onMouseLeave = _ref.onMouseLeave,\n        _ref$refKey = _ref.refKey,\n        refKey = _ref$refKey === void 0 ? 'ref' : _ref$refKey,\n        ref = _ref.ref,\n        rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$suppressRefErro = _ref2.suppressRefError,\n        suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n    setGetterPropCallInfo('getMenuProps', suppressRefError, refKey, menuRef);\n    return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {\n      menuRef.current = menuNode;\n    }), _extends2.id = elementIds.menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = elementIds.labelId, _extends2.onMouseLeave = callAllEventHandlers(onMouseLeave, function () {\n      dispatch({\n        type: MenuMouseLeave\n      });\n    }), _extends2), rest);\n  }, [dispatch, setGetterPropCallInfo, elementIds]);\n  var getItemProps = useCallback(function (_temp3) {\n    var _extends3, _ref4;\n\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n        item = _ref3.item,\n        index = _ref3.index,\n        _ref3$refKey = _ref3.refKey,\n        refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n        ref = _ref3.ref,\n        onMouseMove = _ref3.onMouseMove,\n        onClick = _ref3.onClick;\n\n    _ref3.onPress;\n\n    var rest = _objectWithoutPropertiesLoose(_ref3, _excluded2$1);\n\n    var _latest$current = latest.current,\n        latestProps = _latest$current.props,\n        latestState = _latest$current.state;\n    var itemIndex = getItemIndex(index, item, latestProps.items);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either item or item index in getItemProps!');\n    }\n\n    var onSelectKey = 'onClick';\n    var customClickHandler = onClick;\n\n    var itemHandleMouseMove = function itemHandleMouseMove() {\n      if (index === latestState.highlightedIndex) {\n        return;\n      }\n\n      shouldScrollRef.current = false;\n      dispatch({\n        type: ItemMouseMove,\n        index: index\n      });\n    };\n\n    var itemHandleClick = function itemHandleClick() {\n      dispatch({\n        type: ItemClick,\n        index: index\n      });\n\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    };\n\n    return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (itemNode) {\n      if (itemNode) {\n        itemRefs.current[elementIds.getItemId(itemIndex)] = itemNode;\n      }\n    }), _extends3.role = 'option', _extends3['aria-selected'] = \"\" + (itemIndex === latestState.highlightedIndex), _extends3.id = elementIds.getItemId(itemIndex), _extends3), !rest.disabled && (_ref4 = {\n      onMouseMove: callAllEventHandlers(onMouseMove, itemHandleMouseMove)\n    }, _ref4[onSelectKey] = callAllEventHandlers(customClickHandler, itemHandleClick), _ref4), rest);\n  }, [dispatch, latest, shouldScrollRef, elementIds]);\n  var getToggleButtonProps = useCallback(function (_temp4) {\n    var _extends4;\n\n    var _ref5 = _temp4 === void 0 ? {} : _temp4,\n        onClick = _ref5.onClick;\n\n    _ref5.onPress;\n\n    var _ref5$refKey = _ref5.refKey,\n        refKey = _ref5$refKey === void 0 ? 'ref' : _ref5$refKey,\n        ref = _ref5.ref,\n        rest = _objectWithoutPropertiesLoose(_ref5, _excluded3);\n\n    var toggleButtonHandleClick = function toggleButtonHandleClick() {\n      dispatch({\n        type: ToggleButtonClick\n      });\n\n      if (!latest.current.state.isOpen && inputRef.current) {\n        inputRef.current.focus();\n      }\n    };\n\n    return _extends((_extends4 = {}, _extends4[refKey] = handleRefs(ref, function (toggleButtonNode) {\n      toggleButtonRef.current = toggleButtonNode;\n    }), _extends4.id = elementIds.toggleButtonId, _extends4.tabIndex = -1, _extends4), !rest.disabled && _extends({}, {\n      onClick: callAllEventHandlers(onClick, toggleButtonHandleClick)\n    }), rest);\n  }, [dispatch, latest, elementIds]);\n  var getInputProps = useCallback(function (_temp5, _temp6) {\n    var _extends5;\n\n    var _ref6 = _temp5 === void 0 ? {} : _temp5,\n        onKeyDown = _ref6.onKeyDown,\n        onChange = _ref6.onChange,\n        onInput = _ref6.onInput,\n        onBlur = _ref6.onBlur;\n\n    _ref6.onChangeText;\n\n    var _ref6$refKey = _ref6.refKey,\n        refKey = _ref6$refKey === void 0 ? 'ref' : _ref6$refKey,\n        ref = _ref6.ref,\n        rest = _objectWithoutPropertiesLoose(_ref6, _excluded4);\n\n    var _ref7 = _temp6 === void 0 ? {} : _temp6,\n        _ref7$suppressRefErro = _ref7.suppressRefError,\n        suppressRefError = _ref7$suppressRefErro === void 0 ? false : _ref7$suppressRefErro;\n\n    setGetterPropCallInfo('getInputProps', suppressRefError, refKey, inputRef);\n    var latestState = latest.current.state;\n\n    var inputHandleKeyDown = function inputHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && inputKeyDownHandlers[key]) {\n        inputKeyDownHandlers[key](event);\n      }\n    };\n\n    var inputHandleChange = function inputHandleChange(event) {\n      dispatch({\n        type: InputChange,\n        inputValue: event.target.value\n      });\n    };\n\n    var inputHandleBlur = function inputHandleBlur() {\n      /* istanbul ignore else */\n      if (latestState.isOpen && !mouseAndTouchTrackersRef.current.isMouseDown) {\n        dispatch({\n          type: InputBlur,\n          selectItem: true\n        });\n      }\n    };\n    /* istanbul ignore next (preact) */\n\n\n    var onChangeKey = 'onChange';\n    var eventHandlers = {};\n\n    if (!rest.disabled) {\n      var _eventHandlers;\n\n      eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, inputHandleBlur), _eventHandlers);\n    }\n\n    return _extends((_extends5 = {}, _extends5[refKey] = handleRefs(ref, function (inputNode) {\n      inputRef.current = inputNode;\n    }), _extends5.id = elementIds.inputId, _extends5['aria-autocomplete'] = 'list', _extends5['aria-controls'] = elementIds.menuId, _extends5), latestState.isOpen && latestState.highlightedIndex > -1 && {\n      'aria-activedescendant': elementIds.getItemId(latestState.highlightedIndex)\n    }, {\n      'aria-labelledby': elementIds.labelId,\n      // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n      // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n      autoComplete: 'off',\n      value: latestState.inputValue\n    }, eventHandlers, rest);\n  }, [dispatch, inputKeyDownHandlers, latest, mouseAndTouchTrackersRef, setGetterPropCallInfo, elementIds]);\n  var getComboboxProps = useCallback(function (_temp7, _temp8) {\n    var _extends6;\n\n    var _ref8 = _temp7 === void 0 ? {} : _temp7,\n        _ref8$refKey = _ref8.refKey,\n        refKey = _ref8$refKey === void 0 ? 'ref' : _ref8$refKey,\n        ref = _ref8.ref,\n        rest = _objectWithoutPropertiesLoose(_ref8, _excluded5);\n\n    var _ref9 = _temp8 === void 0 ? {} : _temp8,\n        _ref9$suppressRefErro = _ref9.suppressRefError,\n        suppressRefError = _ref9$suppressRefErro === void 0 ? false : _ref9$suppressRefErro;\n\n    setGetterPropCallInfo('getComboboxProps', suppressRefError, refKey, comboboxRef);\n    return _extends((_extends6 = {}, _extends6[refKey] = handleRefs(ref, function (comboboxNode) {\n      comboboxRef.current = comboboxNode;\n    }), _extends6.role = 'combobox', _extends6['aria-haspopup'] = 'listbox', _extends6['aria-owns'] = elementIds.menuId, _extends6['aria-expanded'] = latest.current.state.isOpen, _extends6), rest);\n  }, [latest, setGetterPropCallInfo, elementIds]); // returns\n\n  var toggleMenu = useCallback(function () {\n    dispatch({\n      type: FunctionToggleMenu\n    });\n  }, [dispatch]);\n  var closeMenu = useCallback(function () {\n    dispatch({\n      type: FunctionCloseMenu\n    });\n  }, [dispatch]);\n  var openMenu = useCallback(function () {\n    dispatch({\n      type: FunctionOpenMenu\n    });\n  }, [dispatch]);\n  var setHighlightedIndex = useCallback(function (newHighlightedIndex) {\n    dispatch({\n      type: FunctionSetHighlightedIndex,\n      highlightedIndex: newHighlightedIndex\n    });\n  }, [dispatch]);\n  var selectItem = useCallback(function (newSelectedItem) {\n    dispatch({\n      type: FunctionSelectItem,\n      selectedItem: newSelectedItem\n    });\n  }, [dispatch]);\n  var setInputValue = useCallback(function (newInputValue) {\n    dispatch({\n      type: FunctionSetInputValue,\n      inputValue: newInputValue\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset$1\n    });\n  }, [dispatch]);\n  return {\n    // prop getters.\n    getItemProps: getItemProps,\n    getLabelProps: getLabelProps,\n    getMenuProps: getMenuProps,\n    getInputProps: getInputProps,\n    getComboboxProps: getComboboxProps,\n    getToggleButtonProps: getToggleButtonProps,\n    // actions.\n    toggleMenu: toggleMenu,\n    openMenu: openMenu,\n    closeMenu: closeMenu,\n    setHighlightedIndex: setHighlightedIndex,\n    setInputValue: setInputValue,\n    selectItem: selectItem,\n    reset: reset,\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nvar defaultStateValues = {\n  activeIndex: -1,\n  selectedItems: []\n};\n/**\n * Returns the initial value for a state key in the following order:\n * 1. controlled prop, 2. initial prop, 3. default prop, 4. default\n * value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\nfunction getInitialValue(props, propKey) {\n  return getInitialValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Returns the default value for a state key in the following order:\n * 1. controlled prop, 2. default prop, 3. default value from Downshift.\n *\n * @param {Object} props Props passed to the hook.\n * @param {string} propKey Props key to generate the value for.\n * @returns {any} The initial value for that prop.\n */\n\n\nfunction getDefaultValue(props, propKey) {\n  return getDefaultValue$1(props, propKey, defaultStateValues);\n}\n/**\n * Gets the initial state based on the provided props. It uses initial, default\n * and controlled props related to state in order to compute the initial value.\n *\n * @param {Object} props Props passed to the hook.\n * @returns {Object} The initial state.\n */\n\n\nfunction getInitialState(props) {\n  var activeIndex = getInitialValue(props, 'activeIndex');\n  var selectedItems = getInitialValue(props, 'selectedItems');\n  return {\n    activeIndex: activeIndex,\n    selectedItems: selectedItems\n  };\n}\n/**\n * Returns true if dropdown keydown operation is permitted. Should not be\n * allowed on keydown with modifier keys (ctrl, alt, shift, meta), on\n * input element with text content that is either highlighted or selection\n * cursor is not at the starting position.\n *\n * @param {KeyboardEvent} event The event from keydown.\n * @returns {boolean} Whether the operation is allowed.\n */\n\n\nfunction isKeyDownOperationPermitted(event) {\n  if (event.shiftKey || event.metaKey || event.ctrlKey || event.altKey) {\n    return false;\n  }\n\n  var element = event.target;\n\n  if (element instanceof HTMLInputElement && // if element is a text input\n  element.value !== '' && (element.selectionStart !== 0 || element.selectionEnd !== 0)) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Returns a message to be added to aria-live region when item is removed.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11yRemovalMessage(selectionParameters) {\n  var removedSelectedItem = selectionParameters.removedSelectedItem,\n      itemToStringLocal = selectionParameters.itemToString;\n  return itemToStringLocal(removedSelectedItem) + \" has been removed.\";\n}\n\nvar propTypes = {\n  selectedItems: PropTypes.array,\n  initialSelectedItems: PropTypes.array,\n  defaultSelectedItems: PropTypes.array,\n  itemToString: PropTypes.func,\n  getA11yRemovalMessage: PropTypes.func,\n  stateReducer: PropTypes.func,\n  activeIndex: PropTypes.number,\n  initialActiveIndex: PropTypes.number,\n  defaultActiveIndex: PropTypes.number,\n  onActiveIndexChange: PropTypes.func,\n  onSelectedItemsChange: PropTypes.func,\n  keyNavigationNext: PropTypes.string,\n  keyNavigationPrevious: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\nvar defaultProps = {\n  itemToString: defaultProps$3.itemToString,\n  stateReducer: defaultProps$3.stateReducer,\n  environment: defaultProps$3.environment,\n  getA11yRemovalMessage: getA11yRemovalMessage,\n  keyNavigationNext: 'ArrowRight',\n  keyNavigationPrevious: 'ArrowLeft'\n}; // eslint-disable-next-line import/no-mutable-exports\n\nvar validatePropTypes = noop;\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== 'production') {\n  validatePropTypes = function validatePropTypes(options, caller) {\n    PropTypes.checkPropTypes(propTypes, options, 'prop', caller.name);\n  };\n}\n\nvar SelectedItemClick = process.env.NODE_ENV !== \"production\" ? '__selected_item_click__' : 0;\nvar SelectedItemKeyDownDelete = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_delete__' : 1;\nvar SelectedItemKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_backspace__' : 2;\nvar SelectedItemKeyDownNavigationNext = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_next__' : 3;\nvar SelectedItemKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__selected_item_keydown_navigation_previous__' : 4;\nvar DropdownKeyDownNavigationPrevious = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_navigation_previous__' : 5;\nvar DropdownKeyDownBackspace = process.env.NODE_ENV !== \"production\" ? '__dropdown_keydown_backspace__' : 6;\nvar DropdownClick = process.env.NODE_ENV !== \"production\" ? '__dropdown_click__' : 7;\nvar FunctionAddSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_add_selected_item__' : 8;\nvar FunctionRemoveSelectedItem = process.env.NODE_ENV !== \"production\" ? '__function_remove_selected_item__' : 9;\nvar FunctionSetSelectedItems = process.env.NODE_ENV !== \"production\" ? '__function_set_selected_items__' : 10;\nvar FunctionSetActiveIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_active_index__' : 11;\nvar FunctionReset = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 12;\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  SelectedItemClick: SelectedItemClick,\n  SelectedItemKeyDownDelete: SelectedItemKeyDownDelete,\n  SelectedItemKeyDownBackspace: SelectedItemKeyDownBackspace,\n  SelectedItemKeyDownNavigationNext: SelectedItemKeyDownNavigationNext,\n  SelectedItemKeyDownNavigationPrevious: SelectedItemKeyDownNavigationPrevious,\n  DropdownKeyDownNavigationPrevious: DropdownKeyDownNavigationPrevious,\n  DropdownKeyDownBackspace: DropdownKeyDownBackspace,\n  DropdownClick: DropdownClick,\n  FunctionAddSelectedItem: FunctionAddSelectedItem,\n  FunctionRemoveSelectedItem: FunctionRemoveSelectedItem,\n  FunctionSetSelectedItems: FunctionSetSelectedItems,\n  FunctionSetActiveIndex: FunctionSetActiveIndex,\n  FunctionReset: FunctionReset\n});\n/* eslint-disable complexity */\n\nfunction downshiftMultipleSelectionReducer(state, action) {\n  var type = action.type,\n      index = action.index,\n      props = action.props,\n      selectedItem = action.selectedItem;\n  var activeIndex = state.activeIndex,\n      selectedItems = state.selectedItems;\n  var changes;\n\n  switch (type) {\n    case SelectedItemClick:\n      changes = {\n        activeIndex: index\n      };\n      break;\n\n    case SelectedItemKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: activeIndex - 1 < 0 ? 0 : activeIndex - 1\n      };\n      break;\n\n    case SelectedItemKeyDownNavigationNext:\n      changes = {\n        activeIndex: activeIndex + 1 >= selectedItems.length ? -1 : activeIndex + 1\n      };\n      break;\n\n    case SelectedItemKeyDownBackspace:\n    case SelectedItemKeyDownDelete:\n      {\n        var newActiveIndex = activeIndex;\n\n        if (selectedItems.length === 1) {\n          newActiveIndex = -1;\n        } else if (activeIndex === selectedItems.length - 1) {\n          newActiveIndex = selectedItems.length - 2;\n        }\n\n        changes = _extends({\n          selectedItems: [].concat(selectedItems.slice(0, activeIndex), selectedItems.slice(activeIndex + 1))\n        }, {\n          activeIndex: newActiveIndex\n        });\n        break;\n      }\n\n    case DropdownKeyDownNavigationPrevious:\n      changes = {\n        activeIndex: selectedItems.length - 1\n      };\n      break;\n\n    case DropdownKeyDownBackspace:\n      changes = {\n        selectedItems: selectedItems.slice(0, selectedItems.length - 1)\n      };\n      break;\n\n    case FunctionAddSelectedItem:\n      changes = {\n        selectedItems: [].concat(selectedItems, [selectedItem])\n      };\n      break;\n\n    case DropdownClick:\n      changes = {\n        activeIndex: -1\n      };\n      break;\n\n    case FunctionRemoveSelectedItem:\n      {\n        var _newActiveIndex = activeIndex;\n        var selectedItemIndex = selectedItems.indexOf(selectedItem);\n\n        if (selectedItems.length === 1) {\n          _newActiveIndex = -1;\n        } else if (selectedItemIndex === selectedItems.length - 1) {\n          _newActiveIndex = selectedItems.length - 2;\n        }\n\n        changes = _extends({\n          selectedItems: [].concat(selectedItems.slice(0, selectedItemIndex), selectedItems.slice(selectedItemIndex + 1))\n        }, {\n          activeIndex: _newActiveIndex\n        });\n        break;\n      }\n\n    case FunctionSetSelectedItems:\n      {\n        var newSelectedItems = action.selectedItems;\n        changes = {\n          selectedItems: newSelectedItems\n        };\n        break;\n      }\n\n    case FunctionSetActiveIndex:\n      {\n        var _newActiveIndex2 = action.activeIndex;\n        changes = {\n          activeIndex: _newActiveIndex2\n        };\n        break;\n      }\n\n    case FunctionReset:\n      changes = {\n        activeIndex: getDefaultValue(props, 'activeIndex'),\n        selectedItems: getDefaultValue(props, 'selectedItems')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _extends({}, state, changes);\n}\n\nvar _excluded = [\"refKey\", \"ref\", \"onClick\", \"onKeyDown\", \"selectedItem\", \"index\"],\n    _excluded2 = [\"refKey\", \"ref\", \"onKeyDown\", \"onClick\", \"preventKeyAction\"];\nuseMultipleSelection.stateChangeTypes = stateChangeTypes;\n\nfunction useMultipleSelection(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  validatePropTypes(userProps, useMultipleSelection); // Props defaults and destructuring.\n\n  var props = _extends({}, defaultProps, userProps);\n\n  var getA11yRemovalMessage = props.getA11yRemovalMessage,\n      itemToString = props.itemToString,\n      environment = props.environment,\n      keyNavigationNext = props.keyNavigationNext,\n      keyNavigationPrevious = props.keyNavigationPrevious; // Reducer init.\n\n  var _useControlledReducer = useControlledReducer$1(downshiftMultipleSelectionReducer, getInitialState(props), props),\n      state = _useControlledReducer[0],\n      dispatch = _useControlledReducer[1];\n\n  var activeIndex = state.activeIndex,\n      selectedItems = state.selectedItems; // Refs.\n\n  var isInitialMountRef = useRef(true);\n  var dropdownRef = useRef(null);\n  var previousSelectedItemsRef = useRef(selectedItems);\n  var selectedItemRefs = useRef();\n  selectedItemRefs.current = [];\n  var latest = useLatestRef({\n    state: state,\n    props: props\n  }); // Effects.\n\n  /* Sets a11y status message on changes in selectedItem. */\n\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    if (selectedItems.length < previousSelectedItemsRef.current.length) {\n      var removedSelectedItem = previousSelectedItemsRef.current.find(function (item) {\n        return selectedItems.indexOf(item) < 0;\n      });\n      setStatus(getA11yRemovalMessage({\n        itemToString: itemToString,\n        resultCount: selectedItems.length,\n        removedSelectedItem: removedSelectedItem,\n        activeIndex: activeIndex,\n        activeSelectedItem: selectedItems[activeIndex]\n      }), environment.document);\n    }\n\n    previousSelectedItemsRef.current = selectedItems; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItems.length]); // Sets focus on active item.\n\n  useEffect(function () {\n    if (isInitialMountRef.current) {\n      return;\n    }\n\n    if (activeIndex === -1 && dropdownRef.current) {\n      dropdownRef.current.focus();\n    } else if (selectedItemRefs.current[activeIndex]) {\n      selectedItemRefs.current[activeIndex].focus();\n    }\n  }, [activeIndex]);\n  useControlPropsValidator({\n    isInitialMount: isInitialMountRef.current,\n    props: props,\n    state: state\n  });\n  var setGetterPropCallInfo = useGetterPropsCalledChecker('getDropdownProps'); // Make initial ref false.\n\n  useEffect(function () {\n    isInitialMountRef.current = false;\n  }, []); // Event handler functions.\n\n  var selectedItemKeyDownHandlers = useMemo(function () {\n    var _ref;\n\n    return _ref = {}, _ref[keyNavigationPrevious] = function () {\n      dispatch({\n        type: SelectedItemKeyDownNavigationPrevious\n      });\n    }, _ref[keyNavigationNext] = function () {\n      dispatch({\n        type: SelectedItemKeyDownNavigationNext\n      });\n    }, _ref.Delete = function Delete() {\n      dispatch({\n        type: SelectedItemKeyDownDelete\n      });\n    }, _ref.Backspace = function Backspace() {\n      dispatch({\n        type: SelectedItemKeyDownBackspace\n      });\n    }, _ref;\n  }, [dispatch, keyNavigationNext, keyNavigationPrevious]);\n  var dropdownKeyDownHandlers = useMemo(function () {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[keyNavigationPrevious] = function (event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownNavigationPrevious\n        });\n      }\n    }, _ref2.Backspace = function Backspace(event) {\n      if (isKeyDownOperationPermitted(event)) {\n        dispatch({\n          type: DropdownKeyDownBackspace\n        });\n      }\n    }, _ref2;\n  }, [dispatch, keyNavigationPrevious]); // Getter props.\n\n  var getSelectedItemProps = useCallback(function (_temp) {\n    var _extends2;\n\n    var _ref3 = _temp === void 0 ? {} : _temp,\n        _ref3$refKey = _ref3.refKey,\n        refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n        ref = _ref3.ref,\n        onClick = _ref3.onClick,\n        onKeyDown = _ref3.onKeyDown,\n        selectedItem = _ref3.selectedItem,\n        index = _ref3.index,\n        rest = _objectWithoutPropertiesLoose(_ref3, _excluded);\n\n    var latestState = latest.current.state;\n    var itemIndex = getItemIndex(index, selectedItem, latestState.selectedItems);\n\n    if (itemIndex < 0) {\n      throw new Error('Pass either selectedItem or index in getSelectedItemProps!');\n    }\n\n    var selectedItemHandleClick = function selectedItemHandleClick() {\n      dispatch({\n        type: SelectedItemClick,\n        index: index\n      });\n    };\n\n    var selectedItemHandleKeyDown = function selectedItemHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && selectedItemKeyDownHandlers[key]) {\n        selectedItemKeyDownHandlers[key](event);\n      }\n    };\n\n    return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (selectedItemNode) {\n      if (selectedItemNode) {\n        selectedItemRefs.current.push(selectedItemNode);\n      }\n    }), _extends2.tabIndex = index === latestState.activeIndex ? 0 : -1, _extends2.onClick = callAllEventHandlers(onClick, selectedItemHandleClick), _extends2.onKeyDown = callAllEventHandlers(onKeyDown, selectedItemHandleKeyDown), _extends2), rest);\n  }, [dispatch, latest, selectedItemKeyDownHandlers]);\n  var getDropdownProps = useCallback(function (_temp2, _temp3) {\n    var _extends3;\n\n    var _ref4 = _temp2 === void 0 ? {} : _temp2,\n        _ref4$refKey = _ref4.refKey,\n        refKey = _ref4$refKey === void 0 ? 'ref' : _ref4$refKey,\n        ref = _ref4.ref,\n        onKeyDown = _ref4.onKeyDown,\n        onClick = _ref4.onClick,\n        _ref4$preventKeyActio = _ref4.preventKeyAction,\n        preventKeyAction = _ref4$preventKeyActio === void 0 ? false : _ref4$preventKeyActio,\n        rest = _objectWithoutPropertiesLoose(_ref4, _excluded2);\n\n    var _ref5 = _temp3 === void 0 ? {} : _temp3,\n        _ref5$suppressRefErro = _ref5.suppressRefError,\n        suppressRefError = _ref5$suppressRefErro === void 0 ? false : _ref5$suppressRefErro;\n\n    setGetterPropCallInfo('getDropdownProps', suppressRefError, refKey, dropdownRef);\n\n    var dropdownHandleKeyDown = function dropdownHandleKeyDown(event) {\n      var key = normalizeArrowKey(event);\n\n      if (key && dropdownKeyDownHandlers[key]) {\n        dropdownKeyDownHandlers[key](event);\n      }\n    };\n\n    var dropdownHandleClick = function dropdownHandleClick() {\n      dispatch({\n        type: DropdownClick\n      });\n    };\n\n    return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (dropdownNode) {\n      if (dropdownNode) {\n        dropdownRef.current = dropdownNode;\n      }\n    }), _extends3), !preventKeyAction && {\n      onKeyDown: callAllEventHandlers(onKeyDown, dropdownHandleKeyDown),\n      onClick: callAllEventHandlers(onClick, dropdownHandleClick)\n    }, rest);\n  }, [dispatch, dropdownKeyDownHandlers, setGetterPropCallInfo]); // returns\n\n  var addSelectedItem = useCallback(function (selectedItem) {\n    dispatch({\n      type: FunctionAddSelectedItem,\n      selectedItem: selectedItem\n    });\n  }, [dispatch]);\n  var removeSelectedItem = useCallback(function (selectedItem) {\n    dispatch({\n      type: FunctionRemoveSelectedItem,\n      selectedItem: selectedItem\n    });\n  }, [dispatch]);\n  var setSelectedItems = useCallback(function (newSelectedItems) {\n    dispatch({\n      type: FunctionSetSelectedItems,\n      selectedItems: newSelectedItems\n    });\n  }, [dispatch]);\n  var setActiveIndex = useCallback(function (newActiveIndex) {\n    dispatch({\n      type: FunctionSetActiveIndex,\n      activeIndex: newActiveIndex\n    });\n  }, [dispatch]);\n  var reset = useCallback(function () {\n    dispatch({\n      type: FunctionReset\n    });\n  }, [dispatch]);\n  return {\n    getSelectedItemProps: getSelectedItemProps,\n    getDropdownProps: getDropdownProps,\n    addSelectedItem: addSelectedItem,\n    removeSelectedItem: removeSelectedItem,\n    setSelectedItems: setSelectedItems,\n    setActiveIndex: setActiveIndex,\n    reset: reset,\n    selectedItems: selectedItems,\n    activeIndex: activeIndex\n  };\n}\n\nexport { Downshift$1 as default, resetIdCounter, useCombobox, useMultipleSelection, useSelect };","import React, { FC } from \"react\";\nimport { Search, Close } from \"@fremtind/jkl-icons-react\";\n\ninterface Props {\n    clearSelection: () => void;\n    hasSelectedItem: boolean;\n    onClick: () => void;\n    /** @deprecated */\n    inverted?: boolean;\n}\n\nconst ControllerButton: FC<Props> = ({ hasSelectedItem, clearSelection, onClick, inverted = false, ...rest }) => (\n    <button\n        {...rest}\n        className={`jkl-autosuggest__controller-button ${\n            inverted ? \"jkl-autosuggest__controller-button--inverted\" : \"\"\n        }`}\n        aria-label={hasSelectedItem ? \"Fjern valg\" : \"Vis valg\"}\n        onClick={hasSelectedItem ? clearSelection : onClick}\n        type=\"button\"\n    >\n        {!hasSelectedItem && <Search variant=\"small\" />}\n        {hasSelectedItem && <Close variant=\"small\" />}\n    </button>\n);\n\nexport default ControllerButton;\n","import React, { ReactNode } from \"react\";\nimport { PropGetters } from \"downshift\";\nimport classnames from \"classnames\";\n\ninterface MenuProps<T> {\n    downshiftProps: Pick<PropGetters<T>, \"getMenuProps\" | \"getItemProps\">;\n    highlightedIndex: number | null;\n    items: T[];\n    itemToString: (item: T | null) => string;\n    noHitsMessage?: ReactNode;\n    maxNumberOfHits?: number;\n    /** @deprecated */\n    inverted?: boolean;\n}\n\nfunction Menu<T>({\n    downshiftProps: { getMenuProps, getItemProps },\n    highlightedIndex,\n    items,\n    itemToString,\n    noHitsMessage,\n    maxNumberOfHits = Infinity,\n    inverted = false,\n}: MenuProps<T>) {\n    const visibleItems = items.length > maxNumberOfHits ? items.slice(0, maxNumberOfHits) : items;\n\n    if (visibleItems.length === 0 && !noHitsMessage) {\n        return null;\n    }\n\n    return (\n        <div data-testid=\"autosuggest__menu\" style={{ position: \"relative\" }}>\n            <ul\n                {...getMenuProps({\n                    className: classnames(\"jkl-autosuggest__menu\", { \"jkl-autosuggest__menu--inverted\": inverted }),\n                })}\n            >\n                {visibleItems.length === 0 && <div className=\"jkl-autosuggest__no-hits-message\">{noHitsMessage}</div>}\n                {visibleItems.map((item, index) => (\n                    <li\n                        {...getItemProps({\n                            item,\n                            className: classnames(\"jkl-autosuggest__item\", {\n                                \"jkl-autosuggest__item--active\": index === highlightedIndex,\n                            }),\n                        })}\n                        data-testid=\"autosuggest__item\"\n                        key={itemToString(item)}\n                    >\n                        {itemToString(item)}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport { SupportLabel } from \"@fremtind/jkl-core\";\nimport Downshift, { DownshiftProps } from \"downshift\";\n\nimport { CommonProps } from \"./Autosuggest\";\nimport ControllerButton from \"./ControllerButton\";\nimport Menu from \"./Menu\";\n\nconst KEY_ENTER = 13;\n\ntype BaseAutosuggestProps<T> = CommonProps & {\n    /** @deprecated */\n    inverted?: boolean;\n    itemToString: (item: T | null) => string;\n    items: T[];\n    downshiftProps: DownshiftProps<T>;\n    showDropdownControllerButton?: boolean;\n    onConfirm?: () => void;\n};\n\nfunction BaseAutosuggest<T>({\n    inverted = false,\n    className = \"\",\n    label,\n    inputId,\n    labelId,\n    leadText,\n    errorLabel,\n    helpLabel,\n    variant = \"small\",\n    noHitsMessage,\n    maxNumberOfHits,\n    placeholder,\n    itemToString,\n    items,\n    downshiftProps,\n    showDropdownControllerButton = false,\n    onConfirm = () => {\n        /* noop */\n    },\n}: BaseAutosuggestProps<T>) {\n    const customLabelProps =\n        inputId && labelId\n            ? {\n                  inputId,\n                  labelId,\n              }\n            : {};\n\n    return (\n        <Downshift {...downshiftProps} {...customLabelProps} itemToString={itemToString}>\n            {({\n                getInputProps,\n                getToggleButtonProps,\n                getItemProps,\n                getLabelProps,\n                getMenuProps,\n                selectedItem,\n                isOpen,\n                highlightedIndex,\n                clearSelection,\n            }) => {\n                return (\n                    <div className={`jkl-autosuggest ${className}`}>\n                        {label && (\n                            <label\n                                {...getLabelProps({\n                                    className: `jkl-label jkl-label--${variant}`,\n                                })}\n                            >\n                                {label}\n                            </label>\n                        )}\n                        {leadText && <p className=\"jkl-body jkl-spacing--bottom-1\">{leadText}</p>}\n                        <div className={`jkl-autosuggest__input_group ${inverted ? \"jkl-text-input--inverted\" : \"\"}`}>\n                            <input\n                                {...getInputProps({\n                                    placeholder,\n                                    className: \"jkl-text-input__input\",\n                                    \"aria-invalid\": !!errorLabel,\n                                    onKeyDown: (e) => {\n                                        if (e.keyCode === KEY_ENTER && !isOpen) {\n                                            onConfirm();\n                                        }\n                                    },\n                                })}\n                                data-testid=\"autosuggest__input\"\n                            />\n                            {showDropdownControllerButton && (\n                                <ControllerButton\n                                    {...getToggleButtonProps()}\n                                    hasSelectedItem={!!selectedItem}\n                                    clearSelection={clearSelection}\n                                    inverted={inverted}\n                                />\n                            )}\n                        </div>\n                        {isOpen && (\n                            <Menu\n                                downshiftProps={{\n                                    getMenuProps,\n                                    getItemProps,\n                                }}\n                                highlightedIndex={highlightedIndex}\n                                items={items}\n                                itemToString={itemToString}\n                                noHitsMessage={noHitsMessage}\n                                maxNumberOfHits={maxNumberOfHits}\n                                inverted={inverted}\n                            />\n                        )}\n                        <SupportLabel inverted={inverted} errorLabel={errorLabel} helpLabel={helpLabel} />\n                    </div>\n                );\n            }}\n        </Downshift>\n    );\n}\n\nexport default BaseAutosuggest;\n","import { StateChangeOptions } from \"downshift\";\nimport React, { ReactNode, useEffect, useState } from \"react\";\n\nimport BaseAutosuggest from \"./BaseAutosuggest\";\nimport { filter } from \"./utils\";\n\nexport type CommonProps = (\n    | {\n          label: string;\n          inputId?: null;\n          labelId?: null;\n      }\n    | {\n          label?: null;\n          inputId: string;\n          labelId: string;\n      }\n) & {\n    className?: string;\n    isOpen?: boolean;\n    leadText?: string;\n    errorLabel?: string;\n    helpLabel?: string;\n    variant?: \"large\" | \"medium\" | \"small\";\n    placeholder?: string;\n    noHitsMessage?: ReactNode;\n    maxNumberOfHits?: number;\n    showDropdownControllerButton?: boolean;\n    onInputValueChange?: (inputValue: string) => void;\n    /** @deprecated */\n    inverted?: boolean;\n};\n\nexport interface AutosuggestStringItemProps {\n    allItems: string[];\n    value: string;\n    onChange?: (item: string) => void;\n    onStateChange?: (changes: StateChangeOptions<string>) => void;\n    onConfirm?: () => void;\n}\n\ntype Props = CommonProps & AutosuggestStringItemProps;\n\nexport function Autosuggest({\n    allItems,\n    onChange = () => {\n        /* default noop */\n    },\n    onConfirm = () => {\n        /* noop */\n    },\n    onInputValueChange,\n    onStateChange,\n    value,\n    isOpen,\n    ...rest\n}: Props) {\n    const [hits, setHits] = useState(allItems);\n\n    useEffect(() => setHits(allItems), [allItems]);\n\n    const handleStateChange = (changes: StateChangeOptions<string>) => {\n        if (onStateChange) {\n            onStateChange(changes);\n        }\n\n        if (changes.selectedItem !== undefined) {\n            onChange(changes.selectedItem || \"\");\n        } else if (changes.inputValue) {\n            setHits(filter(allItems, changes.inputValue));\n        }\n    };\n\n    const itemToString = (item: string | null) => (item ? item : \"\");\n\n    return (\n        <BaseAutosuggest\n            {...rest}\n            items={hits}\n            itemToString={itemToString}\n            onConfirm={onConfirm}\n            downshiftProps={{\n                selectedItem: value,\n                onInputValueChange,\n                onStateChange: handleStateChange,\n                isOpen,\n            }}\n        />\n    );\n}\n","import { matchSorter } from \"match-sorter\";\n\nexport function filter<T>(allItems: T[], inputValue: string | null, keys?: string[]) {\n    const options = keys ? { keys } : {};\n    if (!inputValue) {\n        return allItems;\n    }\n    return matchSorter(allItems, inputValue, options);\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}"],"names":["b","c","d","e","f","g","h","k","l","m","n","p","q","r","u","v","w","Symbol","for","x","y","a","t","$$typeof","type","TextArea","forwardRef","ref","id","variant","inverted","label","className","helpLabel","errorLabel","rows","placeholder","autoExpand","forceCompact","restProps","componentClassName","classNames","uid","useState","nanoid","supportId","describedBy","undefined","textAreaFocused","setTextAreaFocused","baseScrollHeight","setBaseScrollHeight","currentRows","setCurrentRows","internalRef","useRef","textAreaRef","useEffect","textAreaElement","current","savedValue","value","savedPlaceholder","savedRows","scrollHeight","minimumRows","calculatedRows","lineHeightWithPx","window","getComputedStyle","lineHeight","parseInt","replace","Math","ceil","calculateRows","max","standAlone","htmlFor","onFocus","onBlur","style","height","overflowX","displayName","getWidthAsStyle","width","maxLength","min","BaseInputField","invalid","rest","TextInput","inline","action","testAutoId","inputProps","srOnly","iconType","icon","buttonTitle","onClick","nodeType","clientHeight","clientWidth","scrollWidth","overflowY","ownerDocument","defaultView","frameElement","i","o","idCounter","cbToCb","cb","noop","scrollIntoView","node","menuNode","scrollMode","block","boundary","skipOverflowHiddenElements","TypeError","document","scrollingElement","documentElement","s","parentElement","push","body","visualViewport","innerWidth","innerHeight","scrollX","pageXOffset","scrollY","pageYOffset","W","getBoundingClientRect","H","top","E","right","M","bottom","V","left","I","C","T","length","B","D","O","R","X","Y","L","S","j","borderLeftWidth","borderTopWidth","z","borderRightWidth","A","borderBottomWidth","F","G","J","offsetWidth","K","offsetHeight","N","scrollLeft","P","scrollTop","el","forEach","_ref","isOrContainsNode","parent","child","environment","Node","contains","debounce","fn","time","timeoutId","cancel","clearTimeout","wrapper","_len","arguments","args","Array","_key","setTimeout","apply","callAllEventHandlers","_len2","fns","_key2","event","_len3","_key3","some","concat","preventDownshiftDefault","hasOwnProperty","nativeEvent","handleRefs","_len4","refs","_key4","generateId","String","getA11yStatusMessage$1","_ref2","isOpen","resultCount","previousResultCount","unwrapArray","arg","defaultValue","isArray","isDOMElement","element","getElementProps","props","stateKeys","pickState","state","result","getState","Object","keys","reduce","prevState","key","isControlledProp","normalizeArrowKey","keyCode","indexOf","getNextWrappingIndex","moveAmount","baseIndex","itemCount","getItemNodeFromIndex","circular","itemsLastIndex","newIndex","nonDisabledNewIndex","getNextNonDisabledIndex","currentElementNode","hasAttribute","index","_index","targetWithinDownshift","target","downshiftElements","checkActiveElement","contextNode","activeElement","cleanupStatus","documentProp","getStatusDiv","textContent","setStatus","status","div","statusDiv","getElementById","createElement","setAttribute","assign","border","clip","margin","overflow","padding","position","appendChild","stateChangeTypes$3","freeze","__proto__","unknown","mouseUp","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","keyDownHome","keyDownEnd","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","controlledPropUpdatedSelectedItem","touchEnd","_excluded$4","_excluded2$3","_excluded3$2","_excluded4$1","_excluded5$1","Downshift$1","Downshift","_Component","_props","_this","call","this","menuId","labelId","inputId","getItemId","input","items","timeoutIds","internalSetTimeout","filter","setItemCount","count","unsetItemCount","setHighlightedIndex","highlightedIndex","otherStateToSet","defaultHighlightedIndex","internalSetState","clearSelection","selectedItem","inputValue","defaultIsOpen","selectItem","item","itemToString","selectItemAtIndex","itemIndex","selectHighlightedItem","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","newStateToSet","stateReducer","nextState","nextFullState","onStateChange","onSelect","onChange","onUserAction","rootRef","_rootNode","getRootProps","_temp","_temp2","_extends2","_ref$refKey","refKey","_ref2$suppressRefErro","suppressRefError","called","role","keyDownHandlers","ArrowDown","_this2","preventDefault","amount","shiftKey","moveHighlightedIndex","getItemCount","nextHighlightedIndex","ArrowUp","_this3","Enter","which","_this$getState2","itemNode","Escape","reset","buttonKeyDownHandlers","toggleMenu","inputKeyDownHandlers","Home","_this4","newHighlightedIndex","End","_this5","getToggleButtonProps","_temp3","_ref3","onPress","onKeyDown","onKeyUp","enabledEventHandlers","buttonHandleClick","buttonHandleKeyDown","buttonHandleKeyUp","buttonHandleBlur","eventHandlers","disabled","focus","blurTarget","isMouseDown","getLabelProps","getInputProps","_temp4","_ref4","onInput","onChangeText","_eventHandlers","_this$getState6","inputHandleChange","inputHandleKeyDown","inputHandleBlur","autoComplete","downshiftButtonIsActive","dataset","toggle","menuRef","_menuNode","getMenuProps","_temp5","_temp6","_extends3","_ref5","_ref5$refKey","_ref6$suppressRefErro","getItemProps","_temp7","_enabledEventHandlers","_ref7","onMouseMove","onMouseDown","_ref7$item","customClickHandler","avoidScrolling","clearItems","_ref8","_ref9","_this$getState7","openMenu","closeMenu","updateStatus","getA11yStatusMessage","highlightedItem","_this$props","_this$props$initialHi","initialHighlightedIndex","_highlightedIndex","_this$props$initialIs","initialIsOpen","_isOpen","_this$props$initialIn","initialInputValue","_inputValue","_this$props$initialSe","initialSelectedItem","_selectedItem","_state","_proto","prototype","internalClearTimeouts","stateToMerge","scrollHighlightedItemIntoView","_this6","_this$getState9","componentDidMount","_this7","onMouseUp","onOuterClick","onTouchStart","isTouchMove","onTouchMove","onTouchEnd","contextWithinDownshift","addEventListener","cleanup","removeEventListener","shouldScroll","prevProps","currentHighlightedIndex","prevHighlightedIndex","componentDidUpdate","selectedItemChanged","componentWillUnmount","render","children","cloneElement","Component","defaultProps","prevItem","stateChangeTypes","getA11yMessage","useLayoutEffect","defaultProps$3","changes","getA11ySelectionMessage","selectionParameters","itemToStringLocal","circularNavigation","_a","hasSelectedItem","downshiftProps","noHitsMessage","maxNumberOfHits","Infinity","visibleItems","slice","classnames","map","leadText","showDropdownControllerButton","onConfirm","customLabelProps","Autosuggest","allItems","hits","setHits","options","matchSorter","_assertThisInitialized","self","ReferenceError"],"sourceRoot":""}