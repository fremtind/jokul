{"version":3,"file":"component---packages-select-react-documentation-select-mdx-9f1e95e5137dbe8da2ef.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/select-react/src/useListNavigation.ts","webpack://@fremtind/portal/../packages/select-react/src/ExpandArrow.tsx","webpack://@fremtind/portal/../packages/select-react/src/Select.tsx","webpack://@fremtind/portal/../packages/select-react/src/NativeSelect.tsx","webpack://@fremtind/portal/../packages/select-react/documentation/Example.tsx","webpack://@fremtind/portal/../packages/select-react/documentation/Select.mdx"],"sourcesContent":["import { useRef, useEffect, RefObject } from \"react\";\n\ntype Timer = number | undefined;\ntype KeyBuffer = { keys: string } | undefined;\ntype Direction = \"prev\" | \"next\" | \"first\" | \"last\";\ninterface MoveDetails {\n    event: KeyboardEvent;\n    list: HTMLUListElement;\n    currentFocus: HTMLButtonElement;\n}\ninterface ListDetails {\n    list: HTMLUListElement;\n    search: KeyBuffer;\n    searchResetTimer: Timer;\n}\ninterface SearchDetails extends ListDetails {\n    key: string;\n}\ninterface EventDetails extends ListDetails {\n    event: KeyboardEvent;\n}\n\nexport function useListNavigation(typeAheadIsEnabled = true): RefObject<HTMLUListElement> {\n    const listRef = useRef<HTMLUListElement>(null);\n    let search: KeyBuffer;\n    let searchResetTimer: Timer;\n    if (typeAheadIsEnabled) {\n        search = { keys: \"\" }; // keypress buffer is object to preserve state\n    }\n    useEffect(() => {\n        const list = listRef.current;\n        if (list) {\n            list.addEventListener(\"keydown\", (event) => handleListKeyNav({ list, event, search, searchResetTimer }));\n        }\n        return () => {\n            if (list) {\n                list.removeEventListener(\"keydown\", (event) =>\n                    handleListKeyNav({ list, event, search, searchResetTimer }),\n                );\n            }\n        };\n    }, [search, searchResetTimer]);\n\n    return listRef;\n}\n\nfunction handleMoveTo(direction: Direction, { event, list, currentFocus }: MoveDetails) {\n    event.preventDefault();\n    moveFocusTo(direction, list, currentFocus);\n}\n\nfunction handleListKeyNav({ list, event, search, searchResetTimer }: EventDetails, moveFunction = handleMoveTo) {\n    const { key, target } = event;\n    const currentFocus = target as HTMLButtonElement;\n\n    const moveDetails = {\n        event,\n        list,\n        currentFocus,\n    };\n\n    switch (key) {\n        case \"ArrowUp\" || \"PageUp\":\n            moveFunction(\"prev\", moveDetails);\n            break;\n        case \"ArrowDown\" || \"PageDown\":\n            moveFunction(\"next\", moveDetails);\n            break;\n        case \"Home\":\n            moveFunction(\"first\", moveDetails);\n            break;\n        case \"End\":\n            moveFunction(\"last\", moveDetails);\n            break;\n        case \"Tab\":\n            // in a standard select, tab does nothing in-menu\n            event.preventDefault();\n            break;\n        case \"Enter\" || \" \":\n            break;\n\n        default:\n            if (search !== undefined) {\n                const searchResult = findItem({ list, key, search, searchResetTimer });\n                if (searchResult) {\n                    searchResult.focus();\n                }\n            }\n            break;\n    }\n}\n\nfunction moveFocusTo(direction: Direction, list: HTMLUListElement, current: HTMLButtonElement) {\n    const thisLI = current.parentElement;\n    switch (direction) {\n        case \"prev\":\n            const prevLI = thisLI && thisLI.previousElementSibling;\n            if (prevLI) {\n                const prevItem = prevLI.querySelector<HTMLButtonElement>(`[role=\"option\"]`);\n                if (prevItem) {\n                    prevItem.focus();\n                }\n            }\n            break;\n        case \"next\":\n            const nextLI = thisLI && thisLI.nextElementSibling;\n            if (nextLI) {\n                const nextItem = nextLI.querySelector<HTMLButtonElement>(`[role=\"option\"]`);\n                if (nextItem) {\n                    nextItem.focus();\n                }\n            }\n            break;\n        case \"first\":\n            const firstItem = list.querySelector<HTMLButtonElement>(`[role=\"option\"]`);\n            if (firstItem) {\n                firstItem.focus();\n            }\n            break;\n        case \"last\":\n            const listItems = list.querySelectorAll<HTMLButtonElement>(`[role=\"option\"]`);\n            if (listItems.length) {\n                listItems[listItems.length - 1].focus();\n            }\n            break;\n    }\n}\n\nfunction findItem({ list, key, search, searchResetTimer }: SearchDetails): HTMLButtonElement | null {\n    const listItems = list.querySelectorAll(`[role=\"option\"]`);\n    if (!listItems.length) return null;\n\n    if (search) {\n        search.keys = search.keys.concat(key);\n        resetWhenIdle(search, searchResetTimer);\n\n        for (let n = 0; n < listItems.length; n++) {\n            const label = (listItems[n] as HTMLButtonElement).innerText;\n            if (label && label.toLowerCase().indexOf(search.keys) === 0) {\n                return listItems[n] as HTMLButtonElement;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction resetWhenIdle(search: KeyBuffer, timer: Timer) {\n    if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n    }\n    timer = setTimeout(\n        () => {\n            search ? (search.keys = \"\") : (search = { keys: \"\" });\n            timer = undefined;\n        },\n        500,\n        search,\n        timer,\n    );\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    className?: string;\n    expanded?: boolean;\n}\n\nexport function ExpandArrow({ expanded = false, className }: Props) {\n    const componentClassName = classNames(\n        {\n            \"jkl-expand-arrow\": true,\n            \"jkl-expand-arrow--expanded\": expanded,\n        },\n        className,\n    );\n    return (\n        <span className={componentClassName}>\n            <svg className=\"jkl-expand-arrow__down\" viewBox=\"0 0 13 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M6.90762 13.8828L11.9272 8.86326L12.7093 9.64537L6.35463 16L-1.68645e-06 9.64536L0.782101 8.86326L5.80156 13.8827L5.80156 1.01438e-06L6.90762 1.20777e-06L6.90762 13.8828Z\"\n                    fill=\"currentColor\"\n                />\n            </svg>\n            <svg className=\"jkl-expand-arrow__up\" viewBox=\"0 0 13 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M5.80163 2.1172L0.78209 7.13674L-1.29938e-05 6.35464L6.35462 5.14415e-08L12.7093 6.35464L11.9272 7.13674L6.90769 2.11728L6.9077 16L5.80163 16L5.80163 2.1172Z\"\n                    fill=\"currentColor\"\n                />\n            </svg>\n        </span>\n    );\n}\n","// @ts-ignore: wait for core-components to expose types\nimport CoreToggle from \"@nrk/core-toggle/jsx\";\nimport React, { FocusEvent, forwardRef, useEffect, useRef, useState, KeyboardEvent } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Label, LabelVariant, SupportLabel, ValuePair, getValuePair, DataTestAutoId } from \"@fremtind/jkl-core\";\nimport { useAnimatedHeight } from \"@fremtind/jkl-react-hooks\";\nimport { useListNavigation } from \"./useListNavigation\";\nimport classNames from \"classnames\";\n\nimport { ExpandArrow } from \"./ExpandArrow\";\n\ntype SelectEventHandler = (value?: string) => void;\n\ninterface Props extends DataTestAutoId {\n    id?: string;\n    name?: string;\n    label: string;\n    items: Array<string | ValuePair>;\n    inline?: boolean;\n    defaultPrompt?: string;\n    className?: string;\n    value?: string;\n    helpLabel?: string;\n    errorLabel?: string;\n    variant?: LabelVariant;\n    searchable?: boolean;\n    forceCompact?: boolean;\n    /** @deprecated */\n    inverted?: boolean;\n    width?: string;\n    onChange?: SelectEventHandler;\n    onBlur?: SelectEventHandler;\n    onFocus?: SelectEventHandler;\n}\n\ninterface CoreToggleSelectEvent {\n    detail: { textContent: string; value: string };\n    target: { hidden: boolean; button: HTMLButtonElement; value: { textContent: string } };\n}\n\nfunction toLower(str = \"\") {\n    return str.toLowerCase().replace(/[\\W_]+/g, \"\"); // strip all non-alphanumeric chars\n}\n\nfunction focusSelected(listEl: HTMLElement, listId: string, selected: string | undefined) {\n    let focusedItem: HTMLElement | null;\n    if (selected !== undefined) {\n        // move focus to selected option\n        focusedItem = listEl.querySelector(`#${listId}__${toLower(selected)}`);\n    } else {\n        // move focus to first option\n        focusedItem = listEl.querySelector('[role=\"option\"]');\n    }\n    focusedItem && focusedItem.focus();\n}\n\nexport const Select = forwardRef<HTMLSelectElement, Props>(\n    (\n        {\n            id,\n            name,\n            items,\n            value,\n            label,\n            onChange,\n            onBlur,\n            onFocus,\n            className,\n            helpLabel,\n            errorLabel,\n            searchable = false,\n            inline = false,\n            defaultPrompt = \"Velg\",\n            variant,\n            forceCompact,\n            inverted,\n            width,\n            ...selectProps\n        },\n        ref,\n    ) => {\n        const [searchValue, setSearchValue] = useState(\"\");\n        const hasSelectedValue = typeof value !== \"undefined\" && value !== \"\";\n\n        const visibleItems = items.map(getValuePair).map((item) => {\n            const visible =\n                !searchable || searchValue === \"\" || item.label.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n            return { ...item, visible };\n        });\n        const selectedValueLabel = visibleItems.find((item) => item.value === value)?.label || defaultPrompt;\n\n        const focusInsideRef = useRef(false);\n        const [dropdownIsShown, setShown] = useState(false);\n        const [listId] = useState(id || `jkl-select-${nanoid(8)}`);\n        const searchInputId = `${listId}_search-input`;\n        const showSearchInputField = searchable && dropdownIsShown;\n\n        // Element references:\n        const componentRootElementRef = useRef<HTMLDivElement>(null);\n        const internalSelectRef = useRef<HTMLSelectElement>(null);\n        const selectRef = ref && typeof ref !== \"function\" ? ref : internalSelectRef;\n        const buttonRef = useRef<HTMLButtonElement>(null);\n        const searchFieldRef = useRef<HTMLInputElement>(null);\n        const [dropdownRef] = useAnimatedHeight(dropdownIsShown);\n        const listRef = useListNavigation();\n\n        const componentClassName = classNames(\"jkl-select\", className, {\n            \"jkl-select--inline\": inline,\n            \"jkl-select--compact\": forceCompact,\n            \"jkl-select--inverted\": inverted,\n            \"jkl-select--open\": dropdownIsShown,\n            \"jkl-select--no-value\": !hasSelectedValue,\n            \"jkl-select--invalid\": !!errorLabel,\n        });\n\n        function onToggle() {\n            const opening = !dropdownIsShown;\n            setShown(!dropdownIsShown);\n            if (opening && !searchable) {\n                const listElement = listRef.current;\n                listElement && focusSelected(listElement, listId, value);\n            } else if (opening) {\n                if (searchFieldRef.current) {\n                    searchFieldRef.current.focus();\n                }\n            }\n        }\n\n        function onToggleSelect(e: CoreToggleSelectEvent) {\n            e.target.value = e.detail;\n            const nextValue = e.detail.value;\n            setSearchValue(\"\");\n            onChange && onChange(nextValue);\n            selectRef.current && selectRef.current.dispatchEvent(new Event(\"change\", { bubbles: true }));\n            e.target.hidden = true;\n            e.target.button.focus();\n        }\n\n        function handleBlur(e: FocusEvent<HTMLButtonElement | HTMLInputElement>) {\n            const componentRootElement = componentRootElementRef.current;\n            // There are known issues in Firefox when using \"relatedTarget\" in onBlur events:\n            // https://github.com/facebook/react/issues/2011\n            // This might be fixed in react 17. Se issue above.\n            const nextFocusIsInsideComponent =\n                componentRootElement && componentRootElement.contains(e.relatedTarget as Node);\n            if (!nextFocusIsInsideComponent && onBlur) {\n                onBlur(value);\n                selectRef.current && selectRef.current.dispatchEvent(new Event(\"focusout\", { bubbles: true }));\n                focusInsideRef.current = false;\n            }\n        }\n\n        function handleFocus() {\n            if (onFocus && !focusInsideRef.current) {\n                onFocus(value);\n                focusInsideRef.current = true;\n            }\n        }\n\n        // add support for opening dropdown with arrowkey down as expected from native select\n        function handleArrowDown(e: KeyboardEvent<HTMLButtonElement>) {\n            if (e.key === \"ArrowDown\" && !dropdownIsShown) {\n                buttonRef.current?.click();\n            }\n        }\n\n        // Handle focus and blur of hidden select element\n        useEffect(() => {\n            const select = selectRef.current;\n            const searchField = searchFieldRef.current;\n            const button = buttonRef.current;\n            const componentRootElement = componentRootElementRef.current;\n\n            select && typeof ref === \"function\" && ref(select);\n            select?.addEventListener(\"focus\", () => {\n                showSearchInputField ? searchField?.focus() : button?.focus();\n            });\n            select?.addEventListener(\"blur\", function (this, ev) {\n                componentRootElement && componentRootElement.contains(ev.relatedTarget as Node) && ev.preventDefault();\n            });\n\n            return () => {\n                select?.removeEventListener(\"focus\", () => {\n                    showSearchInputField ? searchField?.focus() : button?.focus();\n                });\n                select?.removeEventListener(\"blur\", function (this, ev) {\n                    componentRootElement &&\n                        componentRootElement.contains(ev.relatedTarget as Node) &&\n                        ev.preventDefault();\n                });\n            };\n        }, [ref, selectRef, showSearchInputField]);\n\n        return (\n            <div data-testid=\"jkl-select\" className={componentClassName} ref={componentRootElementRef} {...selectProps}>\n                <Label\n                    standAlone={searchable} // Use <label> as the element when searchAble=true for accessibility\n                    htmlFor={searchable ? searchInputId : undefined}\n                    variant={variant}\n                    forceCompact={forceCompact}\n                    srOnly={inline}\n                >\n                    {label}\n                </Label>\n                <select\n                    name={name}\n                    tabIndex={-1}\n                    className=\"jkl-sr-only\"\n                    aria-hidden\n                    ref={selectRef}\n                    defaultValue={value}\n                >\n                    <option value={value}>{value}</option>\n                </select>\n                <div className=\"jkl-select__outer-wrapper\" style={{ width }}>\n                    {searchable && (\n                        <input\n                            id={searchInputId}\n                            hidden={!showSearchInputField}\n                            ref={searchFieldRef}\n                            placeholder=\"Søk\"\n                            value={searchValue}\n                            onChange={(e) => setSearchValue(e.target.value)}\n                            className=\"jkl-select__search-input\"\n                            onBlur={handleBlur}\n                            onFocus={handleFocus}\n                        />\n                    )}\n                    <button\n                        ref={buttonRef}\n                        hidden={showSearchInputField}\n                        type=\"button\"\n                        className=\"jkl-select__button\"\n                        data-testid=\"jkl-select__button\"\n                        aria-haspopup=\"listbox\"\n                        onBlur={handleBlur}\n                        onFocus={handleFocus}\n                        onKeyUp={handleArrowDown}\n                    >\n                        {selectedValueLabel}\n                    </button>\n                    <CoreToggle\n                        id={listId}\n                        ref={dropdownRef}\n                        role=\"listbox\"\n                        className=\"jkl-select__options-menu\"\n                        popup={label}\n                        hidden={!dropdownIsShown}\n                        onToggle={onToggle}\n                        onToggleSelect={onToggleSelect}\n                        aria-activedescendant={hasSelectedValue && `${listId}__${toLower(value)}`}\n                    >\n                        <ul\n                            className=\"jkl-select__option-wrapper\"\n                            data-testid=\"jkl-select__option-wrapper\"\n                            tabIndex={-1}\n                            ref={listRef}\n                        >\n                            {visibleItems.map((item, i) => (\n                                <li key={item.value} hidden={!item.visible}>\n                                    <button\n                                        type=\"button\"\n                                        id={`${listId}__${toLower(item.value)}`}\n                                        className=\"jkl-select__option\"\n                                        data-testid=\"jkl-select__option\"\n                                        aria-selected={item.value === value}\n                                        role=\"option\"\n                                        value={item.value}\n                                        data-testautoid={`jkl-select__option-${i}`}\n                                        onBlur={handleBlur}\n                                        onFocus={handleFocus}\n                                    >\n                                        <span className=\"jkl-select__option-label\">{item.label}</span>\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                    </CoreToggle>\n                    <ExpandArrow className=\"jkl-select__arrow\" expanded={dropdownIsShown} />\n                </div>\n                <SupportLabel\n                    inverted={inverted}\n                    helpLabel={helpLabel}\n                    errorLabel={errorLabel}\n                    forceCompact={forceCompact}\n                />\n            </div>\n        );\n    },\n);\n","/* eslint \"jsx-a11y/no-onchange\": 0 */\n\nimport React, { FocusEventHandler, ChangeEventHandler, useState, forwardRef } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Label, LabelVariant, SupportLabel, ValuePair, getValuePair } from \"@fremtind/jkl-core\";\nimport classNames from \"classnames\";\n\nimport { ExpandArrow } from \"./ExpandArrow\";\n\ninterface Props {\n    id?: string;\n    name?: string;\n    label: string;\n    items: Array<string | ValuePair>;\n    className?: string;\n    inline?: boolean;\n    helpLabel?: string;\n    errorLabel?: string;\n    variant?: LabelVariant;\n    placeholder?: string;\n    value?: string;\n    forceCompact?: boolean;\n    /** @deprecated */\n    inverted?: boolean;\n    width?: string;\n    onChange?: ChangeEventHandler<HTMLSelectElement>;\n    onFocus?: FocusEventHandler<HTMLSelectElement>;\n    onBlur?: FocusEventHandler<HTMLSelectElement>;\n}\n\nexport const NativeSelect = forwardRef<HTMLSelectElement, Props>(\n    (\n        {\n            id,\n            name,\n            label,\n            items,\n            className = \"\",\n            inline = false,\n            helpLabel,\n            errorLabel,\n            variant,\n            placeholder,\n            value,\n            forceCompact,\n            inverted,\n            width,\n            onChange,\n            onBlur,\n            onFocus,\n        },\n        ref,\n    ) => {\n        // If no value is given, set it to first item, or to empty string if there is a placeholder\n        if (!value) {\n            if (!placeholder && items.length) {\n                value = getValuePair(items[0]).value;\n            }\n        }\n\n        const componentClassName = classNames(\"jkl-select\", className, {\n            \"jkl-select--inline\": inline,\n            \"jkl-select--compact\": forceCompact,\n            \"jkl-select--inverted\": inverted,\n            \"jkl-select--invalid\": !!errorLabel,\n        });\n\n        const defaultValue = value ? undefined : \"\";\n\n        const [uid] = useState(id || `jkl-select-${nanoid(8)}`);\n\n        return (\n            <div data-testid=\"jkl-select\" className={componentClassName}>\n                <Label standAlone htmlFor={uid} variant={variant} forceCompact={forceCompact}>\n                    {label}\n                </Label>\n                <div className=\"jkl-select__outer-wrapper\" style={{ width }}>\n                    <select\n                        ref={ref}\n                        id={uid}\n                        name={name}\n                        value={value}\n                        defaultValue={defaultValue}\n                        className=\"jkl-select__button\"\n                        onChange={onChange}\n                        onBlur={onBlur || onChange}\n                        onFocus={onFocus}\n                    >\n                        {placeholder && !value && (\n                            <option disabled value=\"\">\n                                {placeholder}\n                            </option>\n                        )}\n                        {items.map(getValuePair).map((item) => (\n                            <option\n                                data-testid=\"jkl-select__option\"\n                                className=\"jkl-select__option\"\n                                key={item.value}\n                                value={item.value}\n                            >\n                                {item.label}\n                            </option>\n                        ))}\n                    </select>\n                    <ExpandArrow className=\"jkl-select__arrow\" />\n                </div>\n                <SupportLabel helpLabel={helpLabel} errorLabel={errorLabel} forceCompact={forceCompact} />\n            </div>\n        );\n    },\n);\n","import React, { useState, ChangeEvent, FocusEvent, useRef, useEffect } from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { Select, NativeSelect } from \"../src\";\nimport { LabelVariant } from \"@fremtind/jkl-core\";\n\nexport const Example = ({ boolValues, choiceValues }: ExampleComponentProps) => {\n    const C = boolValues && boolValues[\"Native\"] ? NativeSelect : Select;\n\n    const values = [\n        { value: \"apple\", label: \"Apple\" },\n        { value: \"samsung\", label: \"Samsung\" },\n        { value: \"huawei\", label: \"Huawei\" },\n        { value: \"LG\", label: \"LG\" },\n    ];\n    const [value, setValue] = useState<string>();\n    const universalSetValue = (input: string | ChangeEvent<HTMLSelectElement> | undefined) => {\n        let eventValue;\n        if (typeof input === \"string\") {\n            eventValue = input;\n        } else if (input) {\n            eventValue = input.target.value;\n        }\n        setValue(eventValue);\n        console.log(\"Change: \", eventValue);\n    };\n\n    const errorLabel = boolValues && boolValues[\"Med feil\"] ? \"Beskrivende feilmelding\" : undefined;\n    const helpLabel = boolValues && boolValues[\"Med hjelpetekst\"] ? \"Hjelpsom beskjed\" : undefined;\n    const variant = choiceValues && (choiceValues[\"Etikettvariant\"] as LabelVariant);\n    const searchAble = boolValues && boolValues[\"Med søk\"];\n\n    const selectRef = useRef<HTMLSelectElement>(null);\n    useEffect(() => {\n        const select = selectRef.current;\n        select?.addEventListener(\"change\", (e: unknown) =>\n            console.log(\"Verdi fra selectRef:\", (e as ChangeEvent<HTMLSelectElement>).target.value),\n        );\n        return () => {\n            select?.removeEventListener(\"change\", (e: unknown) =>\n                console.log(\"Verdi fra selectRef:\", (e as ChangeEvent<HTMLSelectElement>).target.value),\n            );\n        };\n    }, [selectRef]);\n    const onFocus = (input: string | FocusEvent<HTMLSelectElement> | undefined) => {\n        console.log(\"Focus: \", input);\n    };\n    const onBlur = (input: string | FocusEvent<HTMLSelectElement> | undefined) => {\n        console.log(\"Blur: \", input);\n    };\n\n    return (\n        <C\n            ref={selectRef}\n            name=\"produsent\"\n            forceCompact={boolValues && boolValues[\"Kompakt\"]}\n            inverted={boolValues && boolValues[\"Invertert\"]}\n            variant={variant}\n            label=\"Hvilket merke er telefonen?\"\n            items={values}\n            value={value}\n            helpLabel={helpLabel}\n            errorLabel={errorLabel}\n            onChange={universalSetValue}\n            searchable={searchAble}\n            onFocus={onFocus}\n            onBlur={onBlur}\n        />\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { Example } from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Vi bruker nedtrekkslister til å gi brukeren en liste med alternativ. Nedtrekkslister passer i de tilfellene det er\n    for mange valg til å bruke radioknapper. Nedtrekkslisten må ha en overskrift, som forteller hva det er brukerne kan\n    velge mellom i listen.\n    </Ingress>\n    <ComponentExample component={Example} knobs={{\n      boolProps: [\"Native\", \"Kompakt\", \"Invertert\", \"Med hjelpetekst\", \"Med feil\", \"Med søk\"],\n      choiceProps: [{\n        name: \"Etikettvariant\",\n        values: [\"small\", \"medium\", \"large\"],\n        defaultValue: 0\n      }]\n    }} mdxType=\"ComponentExample\" />\n    <p>{`Hvis du trenger en nedtrekksliste med mange valg, kan du også legge inn en søke- eller filtreringsfunksjon.`}</p>\n    <h2>{`Tekst og validering`}</h2>\n    <p>{`Bruk prinsippene for skjemadesign til å velge størrelse på overskriften til listen. Lag en kort og tydelig tekst, som forteller hva det er brukeren skal gjøre i nedtrekkslisten. Eksempel: `}<em parentName=\"p\">{`Velg land`}</em>{`. Hvis det trengs, kan du legge en hjelpetekst under listen for å forklare mer.`}</p>\n    <p>{`Hvis nedtrekkslisten ikke validerer, viser systemet en feilmelding som forklarer hva som er galt. Feilmeldingen erstatter en eventuell hjelpetekst, så den må eventuelt gjenta informasjonen fra hjelpeteksten.`}</p>\n    <p>{`Eksempel:\n`}<strong parentName=\"p\">{`Hjelpetekst`}</strong>{`: `}<em parentName=\"p\">{`Velg landet du var på ferie i da du ble syk`}</em>{`. `}<strong parentName=\"p\">{`Feilmelding`}</strong>{`: `}<em parentName=\"p\">{`Du må velge hvor du var på ferie`}</em>{`.`}</p>\n    <h2>{`Bruk`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Velg årsak eller skadetype (gjerne mange valg)`}</li>\n      <li parentName=\"ul\">{`Velg diagnose (for dyre- eller helseforsikring, gjerne med søkemulighet)`}</li>\n      <li parentName=\"ul\">{`Velg stilling (gjerne med søkemulighet)`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["handleMoveTo","direction","event","list","currentFocus","preventDefault","current","thisLI","parentElement","prevLI","previousElementSibling","prevItem","querySelector","focus","nextLI","nextElementSibling","nextItem","firstItem","listItems","querySelectorAll","length","moveFocusTo","handleListKeyNav","moveFunction","search","searchResetTimer","key","moveDetails","target","undefined","searchResult","keys","concat","timer","clearTimeout","setTimeout","resetWhenIdle","n","label","innerText","toLowerCase","indexOf","findItem","ExpandArrow","expanded","className","componentClassName","classNames","viewBox","fill","xmlns","d","toLower","str","replace","Select","forwardRef","ref","id","name","items","value","onChange","onBlur","onFocus","helpLabel","errorLabel","searchable","inline","defaultPrompt","variant","forceCompact","inverted","width","selectProps","useState","searchValue","setSearchValue","hasSelectedValue","visibleItems","map","getValuePair","item","visible","selectedValueLabel","find","focusInsideRef","useRef","dropdownIsShown","setShown","listId","nanoid","searchInputId","showSearchInputField","componentRootElementRef","internalSelectRef","selectRef","buttonRef","searchFieldRef","dropdownRef","useAnimatedHeight","listRef","typeAheadIsEnabled","useEffect","addEventListener","removeEventListener","useListNavigation","handleBlur","e","componentRootElement","contains","relatedTarget","dispatchEvent","Event","bubbles","handleFocus","select","searchField","button","ev","standAlone","htmlFor","srOnly","tabIndex","defaultValue","style","hidden","placeholder","type","onKeyUp","click","role","popup","onToggle","opening","listElement","listEl","selected","focusedItem","focusSelected","onToggleSelect","detail","nextValue","i","NativeSelect","uid","disabled","Example","boolValues","choiceValues","C","setValue","searchAble","console","log","input","eventValue","_frontmatter","makeShortcode","props","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","knobs","boolProps","choiceProps","values","parentName","isMDXComponent"],"sourceRoot":""}