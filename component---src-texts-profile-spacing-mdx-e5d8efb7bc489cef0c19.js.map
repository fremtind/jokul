{"version":3,"file":"component---src-texts-profile-spacing-mdx-e5d8efb7bc489cef0c19.js","mappings":"mPAQA,ICGsBA,EDHhBC,EAAuC,CACzC,yBACA,wBACA,2BACA,4BACA,2BACA,wBACA,yBACA,4BAGEC,EAAoC,CACtC,qBACA,wBACA,yBACA,wBACA,qBACA,uBAKEC,EAAkD,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QAIvD,GAA8BC,EAAAA,EAAAA,UAAiB,OAAxCC,EAAP,KAAgBC,EAAhB,KAKMC,EAAuB,QAAZF,EAAoBG,SAASH,GADzB,GACmDA,EACxE,OACI,sBAAII,UAAU,iCACV,sBAAI,cAAY,QAAQA,UAAU,kCAC7BN,GAEL,sBAAI,cAAY,OAAOM,UAAU,kCAC5BF,GAEL,sBAAI,cAAY,MAAME,UAAU,kCAC3BJ,GAEL,sBAAI,cAAY,YAAYI,UAAU,kCAClC,uBAAKA,UAAS,OAASN,EAAT,OAAwBO,MAAO,CAAEC,QAAS,QAAUC,IAjBlE,SAACC,GACTP,EALwB,SAACO,EAA0BC,GAAwB,QAC3E,OAAQD,IAAI,UAAIE,cAAJ,iBAAI,EAAQC,iBAAiBH,UAA7B,aAAI,EAAgCI,iBAAiBH,KAAiB,MAIvEI,CAAoBL,EAAM,kBAiB7B,uBACIH,MAAO,CAAES,gBAAiB,eAAgBC,MAAUb,EAAL,MAAoBc,OAAWd,EAAL,OACzEe,MAAOjB,OAOrBkB,EAAgD,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAClD,yBAAOf,UAAU,4BACb,6BACI,0BACI,sBAAIA,UAAU,oCAAd,QACA,sBAAIA,UAAU,oCAAd,OACA,sBAAIA,UAAU,oCAAd,MACA,sBAAIA,UAAU,oCAAd,cAGR,6BACKe,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACR,gBAACzB,EAAD,CAAiB0B,IAAKD,EAAKxB,QAASuB,UAMvCG,EAA6B,kBAAM,gBAACN,EAAD,CAAcC,OAAQxB,KACzD8B,EAA0B,kBAAM,gBAACP,EAAD,CAAcC,OAAQvB,K,iBCxEtD8B,EAAe,GAOtBC,GALgBjC,EAKQ,UALA,SAA6BkC,GAEzD,OADAC,QAAQC,KAAK,aAAepC,EAAO,4EAC5B,eAASkC,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAI5E,+BACA,SAACT,EAAD,CAASS,QAAQ,WAAjB,yMAIA,oCACA,sMACA,8HAA+G,uBAAYC,WAAW,KAAvB,SAA/G,QAAwK,uBAAYA,WAAW,KAAvB,cAAxK,6IACA,sCACA,SAACb,EAAD,CAAuBY,QAAQ,2BAC/B,mCACA,SAACX,EAAD,CAAoBW,QAAQ,wBAC5B,gCACA,wNACA,qDACA,yIAKJF,EAAWI,gBAAiB","sources":["webpack://@fremtind/portal/./src/components/Documentation/Spacing/SpacingTable.tsx","webpack://@fremtind/portal/./src/texts/profile/spacing.mdx"],"sourcesContent":["import React, { VFC, useState } from \"react\";\n\nimport \"./SpacingTable.scss\";\n\nfunction stringLiteralArray<T extends string>(a: T[]) {\n    return a;\n}\n\nconst componentSpacings = stringLiteralArray([\n    \"component-spacing--xxs\",\n    \"component-spacing--xs\",\n    \"component-spacing--small\",\n    \"component-spacing--medium\",\n    \"component-spacing--large\",\n    \"component-spacing--xl\",\n    \"component-spacing--xxl\",\n    \"component-spacing--giant\",\n]);\n\nconst layoutSpacings = stringLiteralArray([\n    \"layout-spacing--xs\",\n    \"layout-spacing--small\",\n    \"layout-spacing--medium\",\n    \"layout-spacing--large\",\n    \"layout-spacing--xl\",\n    \"layout-spacing--xxl\",\n]);\n\ntype spacingClass = typeof componentSpacings[number] | typeof layoutSpacings[number];\n\nconst SpacingTableRow: VFC<{ spacing: spacingClass }> = ({ spacing }) => {\n    const getComputedProperty = (node: HTMLElement | null, cssProperty: string) => {\n        return (node && window?.getComputedStyle(node)?.getPropertyValue(cssProperty)) || \"N/A\";\n    };\n    const [pxValue, setPxValue] = useState<string>(\"N/A\");\n    const ref = (node: HTMLDivElement | null) => {\n        setPxValue(getComputedProperty(node, \"margin-top\"));\n    };\n    const baseFontSize = 16; // 1rem = 16px\n    const remValue = pxValue !== \"N/A\" ? parseInt(pxValue) / baseFontSize : pxValue;\n    return (\n        <tr className=\"jkl-portal-spacing-table__row\">\n            <td data-header=\"Navn:\" className=\"jkl-portal-spacing-table__data\">\n                {spacing}\n            </td>\n            <td data-header=\"rem:\" className=\"jkl-portal-spacing-table__data\">\n                {remValue}\n            </td>\n            <td data-header=\"px:\" className=\"jkl-portal-spacing-table__data\">\n                {pxValue}\n            </td>\n            <td data-header=\"Eksempel:\" className=\"jkl-portal-spacing-table__data\">\n                <div className={`jkl-${spacing}-top`} style={{ display: \"none\" }} ref={ref} />\n                <div\n                    style={{ backgroundColor: \"currentColor\", width: `${remValue}rem`, height: `${remValue}rem` }}\n                    title={pxValue}\n                />\n            </td>\n        </tr>\n    );\n};\n\nconst SpacingTable: VFC<{ values: spacingClass[] }> = ({ values }) => (\n    <table className=\"jkl-portal-spacing-table\">\n        <thead>\n            <tr>\n                <th className=\"jkl-portal-spacing-table__header\">Navn</th>\n                <th className=\"jkl-portal-spacing-table__header\">rem</th>\n                <th className=\"jkl-portal-spacing-table__header\">px</th>\n                <th className=\"jkl-portal-spacing-table__header\">Eksempel</th>\n            </tr>\n        </thead>\n        <tbody>\n            {values.map((value, idx) => (\n                <SpacingTableRow key={idx} spacing={value} />\n            ))}\n        </tbody>\n    </table>\n);\n\nexport const ComponentSpacingTable: VFC = () => <SpacingTable values={componentSpacings} />;\nexport const LayoutSpacingTable: VFC = () => <SpacingTable values={layoutSpacings} />;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { ComponentSpacingTable, LayoutSpacingTable } from \"../../components/Documentation/Spacing/SpacingTable\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Spacing`}</h1>\n    <Ingress mdxType=\"Ingress\">\n    Spacing er viktig for å skape system, hierarki og god rytme på tvers av løsninger. Ved å etablere gode standarder\n    for avstand blir det enklere og raskere for designere og utviklere å ta gode valg.\n    </Ingress>\n    <h2>{`Spacingskala`}</h2>\n    <p>{`Skalaen består av verdier for to ulike bruksområder; komponenter og layout. Noen av verdiene kan brukes begge steder, mens andre verdier er ment for ett spesifikt bruksområde.`}</p>\n    <p>{`Til design av komponenter har vi behov for mindre verdier, f. eks når vi skal definere avstanden mellom `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` og `}<inlineCode parentName=\"p\">{`text-input`}</inlineCode>{`. Når vi zoomer ut og ser på sidens layout og skal definere avstand mellom ulike komponenter og innhold har vi behov for større verdier.`}</p>\n    <h3>{`Komponentskala`}</h3>\n    <ComponentSpacingTable mdxType=\"ComponentSpacingTable\" />\n    <h3>{`Layoutskala`}</h3>\n    <LayoutSpacingTable mdxType=\"LayoutSpacingTable\" />\n    <h3>{`Praktisk`}</h3>\n    <p>{`For å gjøre det lettere å jobbe med skalaen i Figma kan du sette verdien av \"big nudge\" til 8px. Dette gjør du under Hamburgermeny (øverst til venstre) `}{`→`}{` Preferences `}{`→`}{` Nudge Amount.`}</p>\n    <h2>{`Hvordan bruke spacingskalaen?`}</h2>\n    <p>{`Det er ingen konkret fasit på hvilke verdier i skalaen du skal benytte. Det vil avhenge av løsningen som designes.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","componentSpacings","layoutSpacings","SpacingTableRow","spacing","useState","pxValue","setPxValue","remValue","parseInt","className","style","display","ref","node","cssProperty","window","getComputedStyle","getPropertyValue","getComputedProperty","backgroundColor","width","height","title","SpacingTable","values","map","value","idx","key","ComponentSpacingTable","LayoutSpacingTable","_frontmatter","Ingress","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}