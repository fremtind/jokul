{"version":3,"file":"component---packages-core-documentation-link-mdx-c4203b4854ce3b4ebc1d.js","mappings":"+PAKaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACvB,qBAAGC,UAAU,YACT,gBAAC,KAAD,CAAMC,KAAK,IAAIC,SAAUH,GAAcA,EAAU,QAAaI,SAAUJ,GAAcA,EAAU,WAAhG,qBCFKK,EAAiB,SAAC,GAAD,IAAGL,EAAH,EAAGA,WAAH,OAC1B,gBAAC,KAAD,CACIC,UAAU,WACVC,KAAK,IACLI,OAAQN,GAAcA,EAAU,MAChCO,SAAUP,GAAcA,EAAU,UAClCQ,KAAMR,GAAcA,EAAU,MALlC,oB,iBCISS,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAgBP,EAAc,iBAC9BQ,EAAc,CAClBT,aAAAA,GAEIU,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGV,GACF,YACD,OAAO,SAACO,EAAD,iBAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,eAI5E,SAACR,EAAD,CAASQ,QAAQ,WAAjB,+LAIA,SAACP,EAAD,CAAkBQ,UAAWzB,EAAa0B,MAAM,OAAOC,MAAO,CAC5DC,UAAW,CAAC,YAAa,YACxBJ,QAAQ,sBACX,SAACP,EAAD,CAAkBQ,UAAWnB,EAAgBoB,MAAM,UAAUC,MAAO,CAClEC,UAAW,CAAC,YAAa,QAAS,SACjCJ,QAAQ,sBACX,4BACA,oLAAuK,uBAAYK,WAAW,KAAvB,QAAvK,qHACA,SAACX,EAAD,CAAeY,MAAM,4CAA4CC,KAAK,KAAKC,YAAY,kEAAkER,QAAQ,mBACjK,SAACN,EAAD,CAAeY,MAAM,oDAAoDC,KAAK,OAAOC,YAAY,gFAAgFR,QAAQ,mBACzL,SAACN,EAAD,CAAeY,MAAM,8CAA8CC,KAAK,KAAKC,YAAY,mDAAmDR,QAAQ,mBACpJ,SAACN,EAAD,CAAeY,MAAM,+CAA+CC,KAAK,KAAKC,YAAY,8DAA8DR,QAAQ,mBAKpKF,EAAWW,gBAAiB","sources":["webpack://@fremtind/portal/../packages/core/documentation/Link/LinkExample.tsx","webpack://@fremtind/portal/../packages/core/documentation/Link/NavLinkExample.tsx","webpack://@fremtind/portal/../packages/core/documentation/Link.mdx"],"sourcesContent":["import React from \"react\";\n\nimport { ExampleComponentProps } from \"../../../../doc-utils\";\nimport { Link } from \"../../src\";\n\nexport const LinkExample = ({ boolValues }: ExampleComponentProps) => (\n    <p className=\"jkl-body\">\n        <Link href=\"/\" external={boolValues && boolValues[\"Ekstern\"]} negative={boolValues && boolValues[\"Invertert\"]}>\n            Gå til forsiden\n        </Link>\n    </p>\n);\n","import React from \"react\";\n\nimport { ExampleComponentProps } from \"../../../../doc-utils\";\nimport { NavLink } from \"../../src\";\n\nexport const NavLinkExample = ({ boolValues }: ExampleComponentProps) => (\n    <NavLink\n        className=\"jkl-body\"\n        href=\"#\"\n        active={boolValues && boolValues[\"Aktiv\"]}\n        inverted={boolValues && boolValues[\"Invertert\"]}\n        back={boolValues && boolValues[\"Back\"]}\n    >\n        Gå til forsiden\n    </NavLink>\n);\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { LinkExample } from \"./Link/LinkExample\";\nimport { NavLinkExample } from \"./Link/NavLinkExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Vi bruker lenker for å lede brukeren til andre nettsider, eller til andre steder på samme nettside. Lenker til\n    eksterne nettsider markeres med en pil opp og til høyre etter lenketeksten.\n    </Ingress>\n    <ComponentExample component={LinkExample} title=\"Link\" knobs={{\n      boolProps: [\"Invertert\", \"Ekstern\"]\n    }} mdxType=\"ComponentExample\" />\n    <ComponentExample component={NavLinkExample} title=\"NavLink\" knobs={{\n      boolProps: [\"Invertert\", \"Aktiv\", \"Back\"]\n    }} mdxType=\"ComponentExample\" />\n    <h2>{`Bruk`}</h2>\n    <p>{`Vi har to typer lenker. I løpende tekst brukes vanlige lenker, mens navigasjons`}{`­`}{`lenker brukes i menyer og der lenken står for seg selv. Bruk egenskapen `}<inlineCode parentName=\"p\">{`Back`}</inlineCode>{` hvis det skal indikere en navigasjon som går mot hovedretningen. Feks en tilbake til \"oversikt\" i en kjøpsflyt.`}</p>\n    <DoDontExample image=\"/assets/documentation/link/link-tekst.svg\" type=\"do\" description=\"Bruk vanlige lenker i løpende tekst, og marker eksterne lenker.\" mdxType=\"DoDontExample\" />\n    <DoDontExample image=\"/assets/documentation/link/navlink-tekst-feil.svg\" type=\"dont\" description=\"Ikke bruk navigasjonslenker i løpende tekst, heller ikke for eksterne lenker.\" mdxType=\"DoDontExample\" />\n    <DoDontExample image=\"/assets/documentation/link/navlink-meny.svg\" type=\"do\" description=\"Bruk navigasjonslenker når du skal lage en meny.\" mdxType=\"DoDontExample\" />\n    <DoDontExample image=\"/assets/documentation/link/navlink-alene.svg\" type=\"do\" description=\"Bruk en navigasjonslenke hvis lenken skal stå for seg selv.\" mdxType=\"DoDontExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["LinkExample","boolValues","className","href","external","negative","NavLinkExample","active","inverted","back","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","title","knobs","boolProps","parentName","image","type","description","isMDXComponent"],"sourceRoot":""}