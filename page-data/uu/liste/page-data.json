{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/uu/liste/",
    "result": {"data":{"page":{"id":"d6577b09-d526-5130-ba5a-0155bdc23399","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lister\",\n  \"tags\": [\"liste\"],\n  \"wcagRules\": [\"2.4.6\"],\n  \"links\": [[\"JÃ¸kuls listekomponenter\", \"/komponenter/list\"]]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Lister benyttes til \\xE5 ramse opp informasjon. En liste skal v\\xE6re korrekt kodet, enten det er unummerert, nummerert, definisjonliste eller lister over flere niv\\xE5 s\\xE5 bruk riktig HTML-elementer.\"), mdx(List, {\n    mdxType: \"List\"\n  }, mdx(CheckListItem, {\n    mdxType: \"CheckListItem\"\n  }, \"Korrekt koding gir fast innrykk\"), mdx(CheckListItem, {\n    mdxType: \"CheckListItem\"\n  }, \"Ingen mellomrom mellom \", mdx(InlineCode, {\n    mdxType: \"InlineCode\"\n  }, \"<li>\"), \" og tekst\")), mdx(\"h4\", null, \"Egentilpassede symboler i liste\"), mdx(\"p\", null, \"Et konkret eksempel er en liste som definerer hva en forsikring dekker eller ikke. Der er gjerne kulepunktet byttet ut med et eget symbol. Det er viktig at kulepunktet ikke er eneste m\\xE5te \\xE5 skille innholdet p\\xE5. Dette tilsvarer egentlig to lister hvor den ene har overskriften \\\"Forsikringen dekker\\\" og den andre har overskriften \\\"forsikringen dekker ikke\\\". Det er sterkt anbefalt \\xE5 bruke slike overskrifter for \\xE5 gj\\xF8re det veldig tydelig at det er en forskjell her. Hvis listen mangler slike overskrifter m\\xE5 det passes p\\xE5 at\"), mdx(List, {\n    mdxType: \"List\"\n  }, mdx(CheckListItem, {\n    mdxType: \"CheckListItem\"\n  }, \"Farge ikke er eneste virkemiddel for \\xE5 formidle funksjonalitet eller viktighet\"), mdx(CheckListItem, {\n    mdxType: \"CheckListItem\"\n  }, \"Kulepunktene er testet med skjermleser\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/komponenter/list/#lister-med-ikon\"\n  }, \"J\\xF8kuls lister med ikoner\"), \" har allerede tatt hensyn til dette slik at de kan brukes uten slike overskrifter.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Lister","react":null,"scss":null,"order":null,"author":null,"publishDate":null,"group":null}}},"pageContext":{"id":"d6577b09-d526-5130-ba5a-0155bdc23399","title":"Lister"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}