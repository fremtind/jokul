{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/uu/lenker/",
    "result": {"data":{"page":{"id":"bfa4433c-7d40-5f09-a7c8-7ee97c0c71dd","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lenker\",\n  \"tags\": [\"tekstinnhold\", \"modal\", \"skjema\"],\n  \"wcagRules\": [\"1.3.1\", \"1.4.1\", \"2.4.4\", \"2.4.7\"],\n  \"links\": [[\"Lenkekomponenter i JÃ¸kul\", \"/komponenter/link\"]]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Lenker kan brukes inline i tekst eller selvstendig. Lenker skal alltid ha en \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"href\"), \" attributt og utheves med visuelle virkemidler.\\nOm farge brukes som et visuelt virkemiddel, m\\xE5 man bruke et annet virkemiddel i tillegg: Understreking, ikon eller lignende.\"), mdx(List, {\n    mdxType: \"List\"\n  }, mdx(CheckListItem, {\n    mdxType: \"CheckListItem\"\n  }, \"En tydelig tilstandsendring skal vise at lenken har f\\xE5tt fokus\"), mdx(CheckListItem, {\n    mdxType: \"CheckListItem\"\n  }, \"Form\\xE5let med lenken skal kunne forst\\xE5s ved lenketeksten\")), mdx(\"p\", null, \"I J\\xF8kul skiller vi ogs\\xE5 mellom interne og eksterne lenker samt navigasjonslenker.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Lenker","react":null,"scss":null,"order":null,"author":null,"publishDate":null,"group":null}}},"pageContext":{"id":"bfa4433c-7d40-5f09-a7c8-7ee97c0c71dd","title":"Lenker"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}