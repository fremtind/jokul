{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/profil/skjemadesign",
    "result": {"data":{"page":{"id":"b395a1b8-803b-5ae6-9f85-23fb6fdfc445","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Skjemadesign\",\n  \"path\": \"/profil/skjemadesign\",\n  \"order\": 12\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar PortalImage = makeShortcode(\"PortalImage\");\nvar Grid = makeShortcode(\"Grid\");\nvar DoDontExample = makeShortcode(\"DoDontExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Skjemadesign\"), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Skjemaer er viktige i Fremtinds l\\xF8sninger og vi \\xF8nsker at de skal v\\xE6re konsekvente. Her finner du noen regler for skjemaoppsett og hvordan vi bruker skjemakomponentene.\"), mdx(\"h2\", null, \"Skjemaseksjoner\"), mdx(\"p\", null, \"I J\\xF8kul har vi flere skjemakomponenter. En eller flere skjemakomponenter sammen, utgj\\xF8r en skjemaseksjon, og et skjema kan best\\xE5 av en eller flere seksjoner.\"), mdx(ComponentExample, {\n    title: \"\",\n    component: FormComponentsExample,\n    knobs: {\n      boolProps: formComponentsExampleBoolProps\n    },\n    mdxType: \"ComponentExample\"\n  }), mdx(\"p\", null, \"Hver skjemakomponent har en ledetekst. Det kan v\\xE6re en overskrift med et sp\\xF8rsm\\xE5l, et ord eller en setning, som sier noe om hva vi \\xF8nsker at brukeren skal oppgi eller gj\\xF8re. Deretter er det selve komponenten som brukeren skal gj\\xF8re noe med, og eventuelt en hjelpetekst eller melding.\"), mdx(FormFieldAnatomy, {\n    mdxType: \"FormFieldAnatomy\"\n  }), mdx(\"p\", null, \"Vi avgrenser seksjoner tydelig fra hverandre. Hvis seksjonene ligger p\\xE5 en felles bakgrunn, bruker vi luft til \\xE5 vise dette skillet. Ellers kan vi ramme dem inn i egne kort. Hvis det er n\\xF8dvendig, kan vi ha en overskrift p\\xE5 hver seksjon.\"), mdx(PortalImage, {\n    className: \"jkl-spacing-xl--bottom\",\n    src: \"/assets/documentation/skjemadesign/skjemadesign_hund.png\",\n    alt: \"Skjermbilde av et skjemadesign fra kj\\xF8psflyten for hundeforsikring\",\n    mdxType: \"PortalImage\"\n  }), mdx(\"p\", null, \"De interne l\\xF8sningene vi lager, kan ha mer kompakte skjemakomponenter. Det kan v\\xE6re nyttig hvis det er viktig \\xE5 komprimere informasjonen vi gir i et skjermbilde, men hovedregelen er at vi skal f\\xF8lge prinsippene for skjemaoppsett.\"), mdx(\"h3\", null, \"Hvilken st\\xF8rrelse skal ledetekstene ha i et dynamisk skjema?\"), mdx(\"p\", null, \"I et dynamisk skjema kommer underordnede sp\\xF8rsm\\xE5l frem n\\xE5r brukeren har tatt stilling til ett eller flere steg i skjemaet. Velg st\\xF8rrelse p\\xE5 ledeteksten ut fra det brukeren ser i standardmodus. Det vil si at hvis en seksjon starter med bare ett sp\\xF8rsm\\xE5l, velger du stor ledetekst, mens sp\\xF8rsm\\xE5lene som dukker opp n\\xE5r du har svart p\\xE5 dette ene sp\\xF8rsm\\xE5let, f\\xE5r normal ledetekst. Svar p\\xE5 ett sp\\xF8rsm\\xE5l kan ogs\\xE5 starte en ny skjemaseksjon.\"), mdx(\"h2\", null, \"Skjemavalidering\"), mdx(\"p\", null, \"I et skjema validerer vi innndata i et felt etter f\\xF8lgende praksis: N\\xE5r brukeren flytter mark\\xF8ren videre til neste felt, og n\\xE5r brukernen skal g\\xE5 videre i skjemaet eller sende det inn.\"), mdx(\"p\", null, \"Hvis brukeren glemmer \\xE5 fylle ut et felt eller fyller det ut feil, f\\xE5r komponenten feilstatus. Vi viser feil ved at svaret blir understreket med r\\xF8dt, og det vises en feilmelding. Hvis brukeren f\\xE5r feil n\\xE5r hen sender inn skjemaet, fokuserer vi skjemaet p\\xE5 det f\\xF8rste feltet som har feil.\"), mdx(\"h3\", null, \"Merknad om skjemavalidering\"), mdx(\"p\", null, \"Vi har valgt at valideringsteksten skal erstatte hjelpeteksten. Derfor er det veldig viktig at feilmeldingen ogs\\xE5 tar med seg informasjonen fra hjelpeteksten, i tillegg til \\xE5 forklare hva som er feil.\"), mdx(Grid, {\n    mdxType: \"Grid\"\n  }, mdx(DoDontExample, {\n    type: \"do\",\n    description: \"Feilmeldingen inkluderer hjelpeteksten.\",\n    content: mdx(TextInput, {\n      label: \"F\\xF8dselsnummer\",\n      errorLabel: \"F\\xF8dselsnummeret er feil. Et f\\xF8dselsnummer har 11 siffer.\",\n      defaultValue: \"Input\",\n      mdxType: \"TextInput\"\n    }),\n    mdxType: \"DoDontExample\"\n  }), mdx(DoDontExample, {\n    type: \"dont\",\n    description: \"Feilmeldingen mangler hjelpeteksten.\",\n    content: mdx(TextInput, {\n      label: \"F\\xF8dselsnummer\",\n      errorLabel: \"F\\xF8dselsnummeret er feil\",\n      defaultValue: \"Input\",\n      mdxType: \"TextInput\"\n    }),\n    mdxType: \"DoDontExample\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Skjemadesign","react":null,"scss":null,"order":12,"author":null,"publishDate":null,"group":null}}},"pageContext":{"id":"b395a1b8-803b-5ae6-9f85-23fb6fdfc445","title":"Skjemadesign"}},
    "staticQueryHashes": ["109329477","1756004727","2550854682","3000541721"]}