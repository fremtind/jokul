{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/hamburger",
    "result": {"data":{"page":{"id":"4cb17e1e-cb44-542d-b7c5-e047866460b5","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hamburger\",\n  \"react\": \"hamburger-react\",\n  \"scss\": \"hamburger\",\n  \"group\": \"layout\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Hamburgeren brukes til \\xE5 vise hovedmenyer p\\xE5 sm\\xE5 flater.\"), mdx(ComponentExample, {\n    title: \"Hamburger\",\n    knobs: {\n      boolProps: [\"Med tekst\", \"Tekst før knapp\", \"Skaler tekst ved hover\"]\n    },\n    component: HamburgerExample,\n    codeExample: hamburgerExampleCode,\n    mdxType: \"ComponentExample\"\n  }), mdx(\"p\", null, \"Vi har ikke flere hamburgere p\\xE5 samme side. Om du trenger \\xE5 skjule annet innhold enn hovedmenyen kan du vurdere \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/komponenter/expandbutton\"\n  }, \"ExpandButton\"), \".\"), mdx(\"h2\", null, \"Tilgjengelighet\"), mdx(\"p\", null, \"Det er viktig \\xE5 hjelpe skjermlesere med \\xE5 forst\\xE5 at hamburgeren er en knapp som kommer til \\xE5 p\\xE5virke et annet stykke innhold. Det er to elementer som m\\xE5 spille p\\xE5 lag her:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hamburgeren\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Menyen som skjules og vises\")), mdx(\"p\", null, \"P\\xE5 hamburgeren m\\xE5 vi ha:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-controls\"), \" med en ID som peker p\\xE5 innholdet som styres av knappen (settes av deg p\\xE5 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Hamburger\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-expanded=\\\"false\\\"\"), \" n\\xE5r lukket og \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-expanded=\\\"true\\\"\"), \" n\\xE5r \\xE5pen (styres med \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"isOpen\"), \")\")), mdx(\"p\", null, \"P\\xE5 menyen som skjules og vises:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-labelledby\"), \" med en ID som peker tilbake p\\xE5 Hamburger\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"role=\\\"group\\\"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hidden\"), \" hvis innholdet er skjult\")), mdx(\"p\", null, \"Hamburgerens typedefinisjon hjelper med deler av dette, men det er opp til deg \\xE5 s\\xF8rge for at menyen har riktige attributter.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Hamburger","react":"hamburger-react","scss":"hamburger","order":null,"author":null,"publishDate":null,"group":"layout"}}},"pageContext":{"id":"4cb17e1e-cb44-542d-b7c5-e047866460b5","types":{"Hamburger":{"tags":{},"filePath":"../packages/hamburger-react/src/index.ts","description":"","displayName":"Hamburger","methods":[],"props":{"id":{"defaultValue":null,"description":"Kreves for at menyen skal kunne sette `aria-labelledby`.","name":"id","parent":{"fileName":"Hamburger.tsx","name":"HamburgerProps"},"declarations":[{"fileName":"Hamburger.tsx","name":"HamburgerProps"}],"required":true,"type":{"name":"string"}},"aria-controls":{"defaultValue":null,"description":"Hjelp skjermleseren forstå hva som blir styrt av hamburgeren.","name":"aria-controls","parent":{"fileName":"Hamburger.tsx","name":"HamburgerProps"},"declarations":[{"fileName":"Hamburger.tsx","name":"HamburgerProps"}],"required":true,"type":{"name":"string"}},"aria-label":{"defaultValue":{"value":"\"Hovedmeny\""},"description":"Gi en beskrivende tekst for skjermlesere.","name":"aria-label","parent":{"fileName":"Hamburger.tsx","name":"HamburgerProps"},"declarations":[{"fileName":"Hamburger.tsx","name":"HamburgerProps"}],"required":false,"type":{"name":"string | undefined"}},"isOpen":{"defaultValue":null,"description":"Styrer utseende, tekst, og `aria-expanded`.","name":"isOpen","parent":{"fileName":"Hamburger.tsx","name":"HamburgerProps"},"declarations":[{"fileName":"Hamburger.tsx","name":"HamburgerProps"}],"required":true,"type":{"name":"boolean"}},"onClick":{"defaultValue":null,"description":"","name":"onClick","parent":{"fileName":"Hamburger.tsx","name":"HamburgerProps"},"declarations":[{"fileName":"Hamburger.tsx","name":"HamburgerProps"}],"required":true,"type":{"name":"(() => void) | ((evt: MouseEvent<Element, MouseEvent>) => void)"}},"className":{"defaultValue":null,"description":"","name":"className","parent":{"fileName":"Hamburger.tsx","name":"HamburgerProps"},"declarations":[{"fileName":"Hamburger.tsx","name":"HamburgerProps"}],"required":false,"type":{"name":"string | undefined"}},"inverted":{"defaultValue":{"value":"false"},"description":"@deprecated use data-theme[\"dark|light\"] where possible in stead. this prop is to support IE11","name":"inverted","parent":{"fileName":"Hamburger.tsx","name":"HamburgerProps"},"declarations":[{"fileName":"Hamburger.tsx","name":"HamburgerProps"}],"required":false,"type":{"name":"boolean | undefined"}},"actionLabel":{"defaultValue":null,"description":"Vis en tekst før eller etter hamburgerikonet som varierer med åpnet og\nlukket tilstand.\n\nNB! Komponenten setter en standard `aria-label`. Skjermlesere vil kunne\nignorere teksten i `actionLabel` og fremdeles annonsere knappens\n`aria-label`. Skjermleseren annonserer knappens tilstand basert på\n`aria-expanded`.\n\nDersom du heller ønsker at knappens `actionLabel` skal leses opp må du\nsette en tom string som `aria-label`.","name":"actionLabel","parent":{"fileName":"Hamburger.tsx","name":"HamburgerProps"},"declarations":[{"fileName":"Hamburger.tsx","name":"HamburgerProps"}],"required":false,"type":{"name":"{ open: string; close: string; animated?: boolean | undefined; position?: \"before\" | \"after\" | undefined; } | undefined"}}}}},"title":"Hamburger"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}