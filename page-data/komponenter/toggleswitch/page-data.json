{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/toggleswitch",
    "result": {"data":{"page":{"id":"daf670ae-9c77-5e06-bc55-42bd78581afa","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Toggle\",\n  \"react\": \"toggle-switch-react\",\n  \"scss\": \"toggle-switch\",\n  \"group\": \"knapper\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar Grid = makeShortcode(\"Grid\");\nvar DoDontExample = makeShortcode(\"DoDontExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Veksleknapper gir brukerne mulighet til \\xE5 bytte mellom to tilstander uten \\xE5 m\\xE5tte bekrefte valget. Det finnes to varianter: En ren av/p\\xE5 knapp og en slider variant der man velger mellom to tilstander.\"), mdx(ComponentExample, {\n    component: ToggleSwitchExample,\n    knobs: {\n      boolProps: [\"Invertert\", \"Deaktivert\", \"Med hjelpetekst\"]\n    },\n    codeExample: toggleSwitchCodeExample,\n    mdxType: \"ComponentExample\"\n  }), mdx(ComponentExample, {\n    component: ToggleSliderExample,\n    knobs: {\n      boolProps: []\n    },\n    codeExample: toggleSliderCodeExample,\n    mdxType: \"ComponentExample\"\n  }), mdx(\"h2\", null, \"Bruk\"), mdx(\"p\", null, \"Bruk veksleknapper dersom du \\xF8nsker:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\xC5 skru av/p\\xE5 en funksjonalitet uten bekreftelse fra brukeren. Et godt eksempel p\\xE5 det er n\\xE5r man skrur p\\xE5 Bluetooth p\\xE5 en mobiltelefon. Det aktiveres umiddelbart, alts\\xE5 uten bekreftelse.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\xC5 endre visning av innhold. For eksempel s\\xE5 kan man bytte mellom \\xE5 vise pris per m\\xE5ned eller \\xE5r. Avhengig av situasjonen, b\\xF8r man vurdere om andre komponenter som \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/komponenter/tabs\"\n  }, \"Tabs\"), \" er et bedre valg.\"))), mdx(\"p\", null, \"Ikke bruk veksleknapper dersom brukeren skal bekrefte et valg. Et eksempel p\\xE5 det er n\\xE5r veksleknapper benyttes som en Checkbox i et skjema. \"), mdx(Grid, {\n    mdxType: \"Grid\"\n  }, mdx(DoDontExample, {\n    type: \"do\",\n    description: \"Skrur av/p\\xE5 m\\xF8rk modus umidderlbart uten bekreftelse fra brukeren\",\n    content: mdx(ToggleSwitchExample, {\n      mdxType: \"ToggleSwitchExample\"\n    }),\n    mdxType: \"DoDontExample\"\n  }), mdx(DoDontExample, {\n    type: \"dont\",\n    description: \"\\xD8nsker bekreftelse fra brukeren ved \\xE5 benytte veksleknapp som CheckBox\",\n    content: mdx(ToggleSwitchWrongExamples, {\n      mdxType: \"ToggleSwitchWrongExamples\"\n    }),\n    mdxType: \"DoDontExample\"\n  })), mdx(\"p\", null, \"Vi tilbyr andre komponenter som kan brukes dersom man \\xF8nsker at brukeren skal bekrefte valget sitt. Under ser du noen eksempler: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/komponenter/checkbox\"\n  }, \"Checkbox\"), \": I tilfeller der man \\xF8nsker \\xE5 tilby flere valg og skal velge et eller flere valg.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/komponenter/radiobutton\"\n  }, \"Radio buttons\"), \": I tilfeller der man \\xF8nsker \\xE5 tilby flere valg og skal kun velge ett valg.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/komponenter/select\"\n  }, \"Select\"), \": I tilfeller der man \\xF8nsker \\xE5 tilby mange valg og skal kun velge ett valg.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/komponenter/autosuggest\"\n  }, \"Autosuggest\"), \": I tilfeller der man \\xF8nsker \\xE5 tilby mange valg som forslag via fritekst og skal kun velge ett.\"))), mdx(\"p\", null, \"I tillegg b\\xF8r man etterstrebe \\xE5 f\\xF8lge disse prinsippene:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Bruk korte og beskrivende navn.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Mellomrom b\\xF8r unng\\xE5s hvis mulig.\"))), mdx(Grid, {\n    mdxType: \"Grid\"\n  }, mdx(DoDontExample, {\n    type: \"do\",\n    description: \"Korte og beskrivende valg uten mellomrom\",\n    content: mdx(ToggleSliderExample, {\n      mdxType: \"ToggleSliderExample\"\n    }),\n    mdxType: \"DoDontExample\"\n  }), mdx(DoDontExample, {\n    type: \"dont\",\n    description: \"Un\\xF8dvendig lange valg med mellomrom\",\n    content: mdx(ToggleSliderWrongExamples, {\n      mdxType: \"ToggleSliderWrongExamples\"\n    }),\n    mdxType: \"DoDontExample\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Toggle","react":"toggle-switch-react","scss":"toggle-switch","order":null,"author":null,"publishDate":null,"group":"knapper"}}},"pageContext":{"id":"daf670ae-9c77-5e06-bc55-42bd78581afa","types":{"ToggleSwitch":{"tags":{},"filePath":"../packages/toggle-switch-react/src/index.ts","description":"","displayName":"ToggleSwitch","methods":[],"props":{"children":{"defaultValue":null,"description":"","name":"children","parent":{"fileName":"ToggleSwitch.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSwitch.tsx","name":"Props"},{"fileName":"index.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"ReactNode"}},"pressed":{"defaultValue":null,"description":"","name":"pressed","parent":{"fileName":"ToggleSwitch.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSwitch.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"className":{"defaultValue":null,"description":"","name":"className","parent":{"fileName":"ToggleSwitch.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSwitch.tsx","name":"Props"}],"required":false,"type":{"name":"string | undefined"}},"onClick":{"defaultValue":null,"description":"","name":"onClick","parent":{"fileName":"ToggleSwitch.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSwitch.tsx","name":"Props"}],"required":false,"type":{"name":"MouseEventHandler<HTMLButtonElement> | undefined"}},"disabled":{"defaultValue":null,"description":"","name":"disabled","parent":{"fileName":"ToggleSwitch.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSwitch.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"inverted":{"defaultValue":null,"description":"@deprecated","name":"inverted","parent":{"fileName":"ToggleSwitch.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSwitch.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"helpLabel":{"defaultValue":null,"description":"","name":"helpLabel","parent":{"fileName":"ToggleSwitch.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSwitch.tsx","name":"Props"}],"required":false,"type":{"name":"string | undefined"}}}},"ToggleSlider":{"tags":{},"filePath":"../packages/toggle-switch-react/src/index.ts","description":"","displayName":"ToggleSlider","methods":[],"props":{"labels":{"defaultValue":null,"description":"","name":"labels","parent":{"fileName":"ToggleSlider.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSlider.tsx","name":"Props"}],"required":true,"type":{"name":"[string, string]"}},"onToggle":{"defaultValue":null,"description":"","name":"onToggle","parent":{"fileName":"ToggleSlider.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSlider.tsx","name":"Props"}],"required":true,"type":{"name":"(value: string) => void"}},"defaultValue":{"defaultValue":null,"description":"","name":"defaultValue","parent":{"fileName":"ToggleSlider.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSlider.tsx","name":"Props"}],"required":false,"type":{"name":"string | undefined"}},"className":{"defaultValue":{"value":""},"description":"","name":"className","parent":{"fileName":"ToggleSlider.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSlider.tsx","name":"Props"}],"required":false,"type":{"name":"string | undefined"}},"inverted":{"defaultValue":null,"description":"@deprecated","name":"inverted","parent":{"fileName":"ToggleSlider.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSlider.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"screenReaderLabel":{"defaultValue":null,"description":"","name":"screenReaderLabel","parent":{"fileName":"ToggleSlider.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSlider.tsx","name":"Props"}],"required":false,"type":{"name":"string | undefined"}},"screenReaderSelectedLabel":{"defaultValue":null,"description":"","name":"screenReaderSelectedLabel","parent":{"fileName":"ToggleSlider.tsx","name":"Props"},"declarations":[{"fileName":"ToggleSlider.tsx","name":"Props"}],"required":false,"type":{"name":"string | undefined"}},"children":{"defaultValue":null,"description":"","name":"children","declarations":[{"fileName":"index.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"ReactNode"}}}}},"title":"Toggle"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}