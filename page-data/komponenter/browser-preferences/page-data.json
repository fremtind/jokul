{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/browser-preferences",
    "result": {"data":{"page":{"id":"7c37c212-b983-5ed9-9035-0ff7c77f1839","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"useBrowserPreferences\",\n  \"react\": \"react-hooks\",\n  \"group\": \"hooks\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Med useBrowserPreferences f\\xE5r du tilgang til mediepreferanser satt i brukerens nettleser eller operativsystem, slik som preferanse for redusert bevegelse eller m\\xF8rkt fargetema. Dermed kan du enklere tilpasse l\\xF8sningen din etter brukerens behov og \\xF8nsker.\"), mdx(\"h2\", null, \"Bruk\"), mdx(\"p\", null, \"Denne hooken baserer seg p\\xE5 en eventListener, og den b\\xF8r derfor implementeres s\\xE5 h\\xF8yt opp i applikasjonen din som mulig for \\xE5 unng\\xE5 \\xE5 lage for mange listeners. Bruk gjerne en React Context heller enn \\xE5 bruke denne hooken flere steder i l\\xF8sningen din.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useBrowserPreferences\"), \" gir tilgang til CSS Media Queries, og kan utvides til \\xE5 hente \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/@media#media_features\"\n  }, \"alle verdiene som finnes der\"), \". For \\xF8yeblikket st\\xF8ttes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prefers-reduced-motion\"), \" og \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prefers-color-scheme\"), \".\"), mdx(BrowserPreferencesExample, {\n    mdxType: \"BrowserPreferencesExample\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"useBrowserPreferences","react":"react-hooks","scss":null,"order":null,"author":null,"publishDate":null,"group":"hooks"}}},"pageContext":{"id":"7c37c212-b983-5ed9-9035-0ff7c77f1839","types":{"useScrollIntoView":{"tags":{},"filePath":"../packages/react-hooks/src/index.ts","description":"","displayName":"useScrollIntoView","methods":[],"props":{"ref":{"defaultValue":null,"description":"","name":"ref","parent":{"fileName":"jokul/packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","name":"ScrollIntoViewProps"},"declarations":[{"fileName":"jokul/packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","name":"ScrollIntoViewProps"}],"required":true,"type":{"name":"RefObject<ValueOf<HTMLElementTagNameMap>>"}},"timeout":{"defaultValue":{"value":"0"},"description":"","name":"timeout","parent":{"fileName":"jokul/packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","name":"ScrollIntoViewProps"},"declarations":[{"fileName":"jokul/packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","name":"ScrollIntoViewProps"}],"required":false,"type":{"name":"number | undefined"}},"autoScroll":{"defaultValue":{"value":"true"},"description":"","name":"autoScroll","parent":{"fileName":"jokul/packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","name":"ScrollIntoViewProps"},"declarations":[{"fileName":"jokul/packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","name":"ScrollIntoViewProps"}],"required":false,"type":{"name":"boolean | undefined"}},"options":{"defaultValue":{"value":"{ behavior: \"smooth\" }"},"description":"","name":"options","parent":{"fileName":"jokul/packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","name":"ScrollIntoViewProps"},"declarations":[{"fileName":"jokul/packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","name":"ScrollIntoViewProps"}],"required":false,"type":{"name":"ScrollIntoViewOptions | undefined"}}}},"useProgressiveImg":{"tags":{},"filePath":"../packages/react-hooks/src/index.ts","description":"","displayName":"useProgressiveImg","methods":[],"props":{"lowQualitySrc":{"defaultValue":null,"description":"","name":"lowQualitySrc","parent":{"fileName":"jokul/packages/react-hooks/src/useProgressiveImg/useProgressiveImg.tsx","name":"ProgressiveImageProps"},"declarations":[{"fileName":"jokul/packages/react-hooks/src/useProgressiveImg/useProgressiveImg.tsx","name":"ProgressiveImageProps"}],"required":true,"type":{"name":"string"}},"highQualitySrc":{"defaultValue":null,"description":"","name":"highQualitySrc","parent":{"fileName":"jokul/packages/react-hooks/src/useProgressiveImg/useProgressiveImg.tsx","name":"ProgressiveImageProps"},"declarations":[{"fileName":"jokul/packages/react-hooks/src/useProgressiveImg/useProgressiveImg.tsx","name":"ProgressiveImageProps"}],"required":true,"type":{"name":"string"}}}},"usePreviousValue":{"tags":{},"filePath":"../packages/react-hooks/src/index.ts","description":"","displayName":"usePreviousValue","methods":[],"props":{}}},"title":"useBrowserPreferences"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}