{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/checkbox",
    "result": {"data":{"page":{"id":"afebad53-c6c2-588b-b949-8edf6611e265","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Checkbox\",\n  \"react\": \"checkbox-react\",\n  \"scss\": \"checkbox\",\n  \"group\": \"knapper\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"N\\xE5r en avmerkingsboks st\\xE5r alene, er det gjerne for \\xE5 bekrefte noe, for eksempel: \\\"Jeg bekrefter at opplysningene jeg har gitt er riktige\\\". Vi bruker flere avmerkingsbokser sammen n\\xE5r vi vil gi brukerne en liste med valg, der de kan velge ett eller flere alternativer.\"), mdx(ComponentExample, {\n    component: CheckboxExample,\n    knobs: {\n      boolProps: [\"Kompakt\", \"Med feil\", \"Invertert\"]\n    },\n    mdxType: \"ComponentExample\"\n  }), mdx(\"h2\", null, \"Bruk\"), mdx(\"p\", null, \"En gruppe avmerkingsbokser m\\xE5 ha en god overskrift, og ledeteksten til hver avmerkingsboks m\\xE5 beskrive alternativet. En avmerkingsboks som st\\xE5r alene trenger ikke noen overskrift, s\\xE5 lenge ledeteksten er god og beskrivende.\"), mdx(\"p\", null, \"Du kan sette boksene under eller etter hverandre, men vi anbefaler at du plasserer dem under hverandre. Standard status for avmerkingsbokser er \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ikke valgt\"), \".\"), mdx(\"h2\", null, \"Tekst og validering\"), mdx(\"p\", null, \"Velg st\\xF8rrelse p\\xE5 overskriften til en gruppe avmerkingsbokser etter prinsippene for skjemadesign. Ha en kort og tydelig overskrift, som beskriver hva brukeren skal velge. Hvis du trenger \\xE5 gi mer forklaring, kan du sette en hjelpetekst under gruppen.\"), mdx(\"p\", null, \"Hvis avmerkingsboksene ikke validerer, vises det en feilmelding som forklarer hva som er galt. Denne feilmeldingen erstatter en eventuell hjelpetekst du har der fra f\\xF8r, og b\\xF8r formuleres slik at brukeren b\\xE5de f\\xE5r hjelp og f\\xE5r vite hva som er feil.\"), mdx(\"p\", null, \"Eksempel:\\nHjelpetekst: \\\"Oppgi f\\xF8dselsnummeret ditt, 11 siffer\\\". Feilmelding: \\\"Du m\\xE5 oppgi f\\xF8dselsnummeret ditt, 11 siffer\\\".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Checkbox","react":"checkbox-react","scss":"checkbox","order":null,"author":null,"publishDate":null,"group":"knapper"}}},"pageContext":{"id":"afebad53-c6c2-588b-b949-8edf6611e265","types":{"Checkbox":{"tags":{},"filePath":"../packages/checkbox-react/src/index.ts","description":"","displayName":"Checkbox","methods":[],"props":{"children":{"defaultValue":null,"description":"","name":"children","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":true,"type":{"name":"ReactNode"}},"name":{"defaultValue":null,"description":"","name":"name","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":true,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"","name":"value","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":true,"type":{"name":"string"}},"checked":{"defaultValue":null,"description":"","name":"checked","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"inline":{"defaultValue":{"value":"false"},"description":"","name":"inline","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"className":{"defaultValue":null,"description":"","name":"className","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"string | undefined"}},"forceCompact":{"defaultValue":null,"description":"","name":"forceCompact","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"invalid":{"defaultValue":null,"description":"","name":"invalid","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"inverted":{"defaultValue":null,"description":"@deprecated","name":"inverted","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"boolean | undefined"}},"onChange":{"defaultValue":null,"description":"","name":"onChange","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"ChangeEventHandler<HTMLInputElement> | undefined"}},"onFocus":{"defaultValue":null,"description":"","name":"onFocus","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"FocusEventHandler<HTMLInputElement> | undefined"}},"onBlur":{"defaultValue":null,"description":"","name":"onBlur","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/checkbox-react/src/Checkbox.tsx","name":"Props"}],"required":false,"type":{"name":"FocusEventHandler<HTMLInputElement> | undefined"}},"data-testautoid":{"defaultValue":null,"description":"","name":"data-testautoid","parent":{"fileName":"/home/runner/work/jokul/jokul/packages/core/build/index.d.ts","name":"DataTestAutoId"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/packages/core/build/index.d.ts","name":"DataTestAutoId"}],"required":false,"type":{"name":"string | undefined"}},"ref":{"defaultValue":null,"description":"","name":"ref","parent":{"fileName":"/home/runner/work/jokul/jokul/node_modules/@types/react/index.d.ts","name":"RefAttributes"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/node_modules/@types/react/index.d.ts","name":"RefAttributes"}],"required":false,"type":{"name":"Ref<HTMLInputElement> | undefined"}},"key":{"defaultValue":null,"description":"","name":"key","parent":{"fileName":"/home/runner/work/jokul/jokul/node_modules/@types/react/index.d.ts","name":"Attributes"},"declarations":[{"fileName":"/home/runner/work/jokul/jokul/node_modules/@types/react/index.d.ts","name":"Attributes"}],"required":false,"type":{"name":"Key | null | undefined"}}}}},"title":"Checkbox"}},
    "staticQueryHashes": ["109329477","1756004727","2550854682","3000541721"]}