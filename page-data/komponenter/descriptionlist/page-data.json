{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/descriptionlist",
    "result": {"data":{"page":{"id":"4f764590-02a0-5f30-8137-72548e4b89c4","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"DescriptionList\",\n  \"scss\": \"description-list\",\n  \"react\": \"description-list-react\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar Grid = makeShortcode(\"Grid\");\nvar DoDontExample = makeShortcode(\"DoDontExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"En definisjonsliste brukes gjerne til \", mdx(\"i\", null, \"metadata\"), \" eller begrepsdefinisjoner, for eksempel detaljer om et produkt eller en avtale kunden har.\"), mdx(ComponentExample, {\n    title: \"DescriptionList\",\n    component: DescriptionListExample,\n    codeExample: descriptionListExampleCode,\n    mdxType: \"ComponentExample\"\n  }), mdx(\"p\", null, \"Selv om en definisjonsliste visuelt sett kan deles inn i to kolonner, og kan sies \\xE5 ha rader, s\\xE5 er det ikke en tabell. Om du trenger kolonneoverskrifter eller \\xF8nsker deg flere kolonner, se \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/komponenter/table\"\n  }, \"Table\"), \".\"), mdx(\"h2\", null, \"Tilgjengelighet\"), mdx(\"p\", null, \"En definisjonsliste har en betydning \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl#accessibility_concerns\"\n  }, \"som skjermlesere kan bruke\"), \" til navigasjon og opplesning. Dessverre er \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://a11ysupport.io/tech/html/dl_element\"\n  }, \"st\\xF8tten litt variabel\"), \", men de mest brukte skjermleserne VoiceOver, JAWS, og NVDA har for det meste god st\\xF8tte. De som ikke har like god st\\xF8tte vil lese opp innholdet som et vanlig avsnitt.\"), mdx(\"p\", null, \"Siden st\\xF8tten er noe variabel b\\xF8r man kunne forst\\xE5 forholdet mellom begrep og definisjon. Kanskje spesielt viktig at man forst\\xE5r at \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"neste begrep\"), \" ikke er en del av definisjonen av det forrige begrepet.\"), mdx(\"p\", null, \"Skjermlesere med full st\\xF8tte vil annonsere en definisjonsliste som enten liste (\", mdx(\"i\", {\n    lang: \"en\"\n  }, \"list\"), \"), definisjonsliste (\", mdx(\"i\", {\n    lang: \"en\"\n  }, \"definition list\"), \") eller beskrivelsesliste (\", mdx(\"i\", {\n    lang: \"en\"\n  }, \"description list\"), \"). De vil ogs\\xE5 annonsere antall listeelementer, og gjerne annonsere om det som ble lest opp er et begrep (\", mdx(\"i\", {\n    lang: \"en\"\n  }, \"term\"), \") eller en beskrivelse (\", mdx(\"i\", {\n    lang: \"en\"\n  }, \"definition/description\"), \").\"), mdx(\"p\", null, \"Fordi skjermlesere med st\\xF8tte annonserer hva som er begrep og hva som er beskrivelse bruker vi ikke skilletegn som kolon etter begrep.\"), mdx(Grid, {\n    mdxType: \"Grid\"\n  }, mdx(DoDontExample, {\n    type: \"do\",\n    description: \"La skjermleseren annonsere rollen uten ekstra st\\xF8y\",\n    content: mdx(DescriptionList, {\n      className: \"jkl-body\",\n      mdxType: \"DescriptionList\"\n    }, mdx(DescriptionTerm, {\n      mdxType: \"DescriptionTerm\"\n    }, \"Forsikring\"), mdx(DescriptionDetail, {\n      mdxType: \"DescriptionDetail\"\n    }, \"Innboforsikring\"), mdx(DescriptionTerm, {\n      mdxType: \"DescriptionTerm\"\n    }, \"Adresse\"), mdx(DescriptionDetail, {\n      mdxType: \"DescriptionDetail\"\n    }, \"Testgata 1\")),\n    mdxType: \"DoDontExample\"\n  }), mdx(DoDontExample, {\n    type: \"dont\",\n    description: \"Skilletegn blir lest opp i tillegg til elementets rolle\",\n    content: mdx(DescriptionList, {\n      className: \"jkl-body\",\n      mdxType: \"DescriptionList\"\n    }, mdx(DescriptionTerm, {\n      mdxType: \"DescriptionTerm\"\n    }, \"Forsikring:\"), mdx(DescriptionDetail, {\n      mdxType: \"DescriptionDetail\"\n    }, \"Innboforsikring\"), mdx(DescriptionTerm, {\n      mdxType: \"DescriptionTerm\"\n    }, \"Adresse:\"), mdx(DescriptionDetail, {\n      mdxType: \"DescriptionDetail\"\n    }, \"Testgata 1\")),\n    mdxType: \"DoDontExample\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"DescriptionList","react":"description-list-react","scss":"description-list","order":null,"author":null,"publishDate":null,"group":null}}},"pageContext":{"id":"4f764590-02a0-5f30-8137-72548e4b89c4","types":{"DescriptionList":{"tags":{},"filePath":"../packages/description-list-react/src/index.ts","description":"","displayName":"DescriptionList","methods":[],"props":{"className":{"defaultValue":null,"description":"","name":"className","parent":{"fileName":"jokul/packages/description-list-react/src/DescriptionList.tsx","name":"DescriptionListProps"},"declarations":[{"fileName":"jokul/packages/description-list-react/src/DescriptionList.tsx","name":"DescriptionListProps"}],"required":false,"type":{"name":"string | undefined"}},"children":{"defaultValue":null,"description":"","name":"children","declarations":[{"fileName":"jokul/node_modules/@types/react/index.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"ReactNode"}}}},"DescriptionTerm":{"tags":{},"filePath":"../packages/description-list-react/src/index.ts","description":"","displayName":"DescriptionTerm","methods":[],"props":{"className":{"defaultValue":null,"description":"","name":"className","parent":{"fileName":"jokul/packages/description-list-react/src/DescriptionList.tsx","name":"DescriptionTermProps"},"declarations":[{"fileName":"jokul/packages/description-list-react/src/DescriptionList.tsx","name":"DescriptionTermProps"}],"required":false,"type":{"name":"string | undefined"}},"children":{"defaultValue":null,"description":"","name":"children","declarations":[{"fileName":"jokul/node_modules/@types/react/index.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"ReactNode"}}}},"DescriptionDetail":{"tags":{},"filePath":"../packages/description-list-react/src/index.ts","description":"","displayName":"DescriptionDetail","methods":[],"props":{"className":{"defaultValue":null,"description":"","name":"className","parent":{"fileName":"jokul/packages/description-list-react/src/DescriptionList.tsx","name":"DescriptionDetailProps"},"declarations":[{"fileName":"jokul/packages/description-list-react/src/DescriptionList.tsx","name":"DescriptionDetailProps"}],"required":false,"type":{"name":"string | undefined"}},"children":{"defaultValue":null,"description":"","name":"children","declarations":[{"fileName":"jokul/node_modules/@types/react/index.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"ReactNode"}}}}},"title":"DescriptionList"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}