{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/loader",
    "result": {"data":{"page":{"id":"d26ac54c-d294-5e33-b180-5cbfae01f47c","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Loader\",\n  \"react\": \"loader-react\",\n  \"scss\": \"loader\",\n  \"group\": \"annet\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"En lasteindikator viser brukeren at systemet jobber. Vi bruker lasteindikatoren n\\xE5r vi har handlinger eller prosesser som tar lengre tid enn ett sekund.\"), mdx(ComponentExample, {\n    component: LoaderExample,\n    knobs: {\n      choiceProps: [{\n        name: \"Variant\",\n        values: [\"Large\", \"Medium\", \"Small\"],\n        defaultValue: 0\n      }]\n    },\n    mdxType: \"ComponentExample\"\n  }), mdx(\"p\", null, \"Plasser lasteindikatoren sammen med handlingen som utl\\xF8ser den. Den kan ha ulik posisjon og st\\xF8rrelse, avhengig av konteksten den skal fungere i. Lasteindikatoren tar farge etter teksten rundt ved hjelp av \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"currentColor\"), \".\"), mdx(\"h3\", null, \"Bruk\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"P\\xE5 en knapp som brukeren har klikket p\\xE5 (se \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/komponenter/buttons/\"\n  }, \"Buttons\"), \" for bruk).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"P\\xE5 et kort eller i felt der noe blir beregnet f\\xF8r innholdet vises.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Loader","react":"loader-react","scss":"loader","order":null,"author":null,"publishDate":null,"group":"annet"}}},"pageContext":{"id":"d26ac54c-d294-5e33-b180-5cbfae01f47c","title":"Loader"}},
    "staticQueryHashes": ["109329477","1756004727","2550854682","3000541721"]}