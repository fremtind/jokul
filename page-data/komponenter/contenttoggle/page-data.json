{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/contenttoggle",
    "result": {"data":{"page":{"id":"74936419-e735-57c7-bc88-eae98c4b5e24","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ContentToggle\",\n  \"react\": \"content-toggle-react\",\n  \"scss\": \"content-toggle\",\n  \"group\": \"layout\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Content-toggle er en komponent for som representerer en av J\\xF8kuls kjerneanimasjoner. Du ser denne bevelgesen p\\xE5 pilene i select eller accordion, men det kan brukes til mye mer. Hver gang du har behov for to states som man toggler mellom, s\\xE5 er content-toggle en m\\xE5te \\xE5 l\\xF8se det p\\xE5 en elegant m\\xE5te.\"), mdx(ComponentExample, {\n    knobs: {\n      boolProps: [\"Bytt verdi\"],\n      choiceProps: [{\n        name: \"Variant\",\n        values: [\"flip\", \"fade\"],\n        defaultValue: 0\n      }]\n    },\n    component: ContentToggleExample,\n    mdxType: \"ComponentExample\"\n  }), mdx(\"p\", null, \"Content-toggle komponenten tar inn to ReactNoder, det kan v\\xE6re strenger eller sammensatte komponenter, men b\\xF8r ikke v\\xE6re store element.\"), mdx(\"h2\", null, \"I bruk\"), mdx(\"p\", null, \"Content-toggle komponenten gj\\xF8r sitt beste gjett p\\xE5 hvor store elementene inni er, s\\xE5 den animerer riktig avstand. Det er basert p\\xE5 font-st\\xF8rrelsen fra foreldrekomponenten. S\\xE5 om du animerer \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jkl-lead\"), \", s\\xF8rg for at den klassen er satt over content-toggle komponenten. Men i noen tilfellet s\\xE5 treffer den ikke helt. For \\xE5 fortelle content-toggle at den skal bevege seg mer eller mindre, s\\xE5 kan du sette \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-size\"), \" p\\xE5 content-toggle elementet via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"className\"), \".\"), mdx(\"h2\", null, \"Tilgjengelighet\"), mdx(\"p\", null, \"Husk at du m\\xE5 skru av interaktive elementer n\\xE5r de ikke vises. S\\xE5 om du en knapp er en av togglestatene, m\\xE5 du disable den n\\xE5r den ikke syntes, ellers vil det fortsatt v\\xE6re mulig \\xE5 tabbe til den og trykke.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aria-hidden settes p\\xE5 komponenten som ikke vises\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Komponenten h\\xE5nterer redusert bevegelse p\\xE5 egenh\\xE5nd\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"ContentToggle","react":"content-toggle-react","scss":"content-toggle","order":null,"author":null,"publishDate":null,"group":"layout"}}},"pageContext":{"id":"74936419-e735-57c7-bc88-eae98c4b5e24","types":{"ContentToggle":{"tags":{},"filePath":"../packages/content-toggle-react/src/index.ts","description":"","displayName":"ContentToggle","methods":[],"props":{"showSecondary":{"defaultValue":null,"description":"","name":"showSecondary","declarations":[{"fileName":"ContentToggle.tsx","name":"TypeLiteral"}],"required":true,"type":{"name":"boolean"}},"secondary":{"defaultValue":null,"description":"","name":"secondary","declarations":[{"fileName":"ContentToggle.tsx","name":"TypeLiteral"}],"required":true,"type":{"name":"ReactNode"}},"className":{"defaultValue":{"value":""},"description":"","name":"className","declarations":[{"fileName":"ContentToggle.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"string | undefined"}},"variant":{"defaultValue":{"value":"flip"},"description":"","name":"variant","declarations":[{"fileName":"ContentToggle.tsx","name":"TypeLiteral"}],"required":false,"type":{"name":"\"flip\" | \"fade\" | undefined"}},"children":{"defaultValue":null,"description":"","name":"children","declarations":[{"fileName":"index.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"ReactNode"}}}}},"title":"ContentToggle"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}