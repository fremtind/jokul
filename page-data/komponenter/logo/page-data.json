{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/logo",
    "result": {"data":{"page":{"id":"c011a92f-8f15-5ce6-9d24-7ac08ee8bc21","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Logo\",\n  \"react\": \"logo-react\",\n  \"scss\": \"logo\",\n  \"group\": \"annet\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Logoen, logosymbolet og logostemplene v\\xE5re er merkevareelementer vi kan bruke i Fremtinds l\\xF8sninger, eller i andre l\\xF8sninger der Fremtind skal v\\xE6re synlig.\"), mdx(ComponentExample, {\n    component: LogoExample,\n    knobs: {\n      boolProps: [\"Animert\", \"Kun symbol\", \"Sentrert\", \"Invertert\"]\n    },\n    mdxType: \"ComponentExample\"\n  }), mdx(\"p\", null, \"Du kan lese mer om hvordan vi skal bruke logo og logosymbol, under \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/profil/logo\"\n  }, \"Prinsipper for bruk\"), \". Logoen og logosymbolet skal ikke st\\xE5 synlige sammen.\\nVi kan animere dem, slik at vi ser at det skifter mellom logo og logosymbol. Se eksempelet.\"), mdx(\"p\", null, \"Vi kan bruke \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"logostemplene\"), \" der det er behov, for \\xE5 vise at Fremtind er en del av budskapet. Stemplene skal ikke brukes p\\xE5 samme m\\xE5te som logoen eller logosymbolet.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Logo","react":"logo-react","scss":"logo","order":null,"author":null,"publishDate":null,"group":"annet"}}},"pageContext":{"id":"c011a92f-8f15-5ce6-9d24-7ac08ee8bc21","title":"Logo"}},
    "staticQueryHashes": ["109329477","1756004727","2550854682","3000541721"]}