{"version":3,"file":"component---packages-description-list-react-documentation-description-list-mdx-d261946c00f0634eb94d.js","mappings":"sQAOaA,EAA4C,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAClE,OAAO,sBAAIA,UAAWC,GAAAA,CAAW,uBAAwBD,IAAaD,IAO7DG,EAA4C,SAAC,GAA6B,IAA3BH,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAClE,OAAO,sBAAIA,UAAWC,GAAAA,CAAW,6BAA8BD,IAAaD,IAOnEI,EAAgD,SAAC,GAA6B,IAA3BJ,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACtE,OAAO,sBAAIA,UAAWC,GAAAA,CAAW,+BAAgCD,IAAaD,ICDlF,EAnBkC,WAC9B,OACI,uBAAKC,UAAU,4BACX,gBAACF,EAAD,CAAiBE,UAAU,YACvB,gBAACE,EAAD,qBACA,gBAACC,EAAD,oDACA,gBAACA,EAAD,oDACA,gBAACA,EAAD,oDACA,gBAACA,EAAD,oDACA,gBAACA,EAAD,oDAEA,gBAACD,EAAD,YACA,gBAACC,EAAD,cACA,gBAACA,EAAD,qB,iBCPHC,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,SAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAI5E,SAACP,EAAD,CAASO,QAAQ,WAAjB,sXAMA,SAACN,EAAD,CAAkBO,UAAWC,EAASF,QAAQ,sBAKlDF,EAAWK,gBAAiB","sources":["webpack://@fremtind/portal/../packages/description-list-react/src/DescriptionList.tsx","webpack://@fremtind/portal/../packages/description-list-react/documentation/Example.tsx","webpack://@fremtind/portal/../packages/description-list-react/documentation/DescriptionList.mdx"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FC } from \"react\";\n\nexport interface DescriptionListProps {\n    className?: string;\n}\n\nexport const DescriptionList: FC<DescriptionListProps> = ({ children, className }) => {\n    return <dl className={classnames(\"jkl-description-list\", className)}>{children}</dl>;\n};\n\nexport interface DescriptionTermProps {\n    className?: string;\n}\n\nexport const DescriptionTerm: FC<DescriptionTermProps> = ({ children, className }) => {\n    return <dt className={classnames(\"jkl-description-list__term\", className)}>{children}</dt>;\n};\n\nexport interface DescriptionDetailProps {\n    className?: string;\n}\n\nexport const DescriptionDetail: FC<DescriptionDetailProps> = ({ children, className }) => {\n    return <dd className={classnames(\"jkl-description-list__detail\", className)}>{children}</dd>;\n};\n","import React from \"react\";\nimport { DescriptionList, DescriptionDetail, DescriptionTerm } from \"../src\";\nimport \"./Example.scss\";\n\nexport const Example: React.VFC = () => {\n    return (\n        <div className=\"description-list-example\">\n            <DescriptionList className=\"jkl-body\">\n                <DescriptionTerm>Forsikringer</DescriptionTerm>\n                <DescriptionDetail>SAGA Dødsrisiko Grunndekning Hovedforsikret</DescriptionDetail>\n                <DescriptionDetail>SAGA Dødsrisiko Grunndekning Hovedforsikret</DescriptionDetail>\n                <DescriptionDetail>SAGA Dødsrisiko Grunndekning Hovedforsikret</DescriptionDetail>\n                <DescriptionDetail>SAGA Dødsrisiko Grunndekning Hovedforsikret</DescriptionDetail>\n                <DescriptionDetail>SAGA Dødsrisiko Grunndekning Hovedforsikret</DescriptionDetail>\n\n                <DescriptionTerm>Mat</DescriptionTerm>\n                <DescriptionDetail>Sushi</DescriptionDetail>\n                <DescriptionDetail>Carbonara</DescriptionDetail>\n            </DescriptionList>\n        </div>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { DescriptionList, DescriptionTerm, DescriptionDetail } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Vanlige bruksområder for dette elementet er å implementere en ordliste eller å vise metadata (en liste over\n    nøkkelverdipar). Et eksempel er et felt \"Forsikringer\" som viser ulike type forsikringer (\"Livsforsikring\",\n    \"Barneforsikring\", etc). Det oppfordres å benytte henholdsvis DescriptionTerm og DescriptionDetail som dt og dl\n    elementer når man bruker DescriptionList.\n    </Ingress>\n    <ComponentExample component={Example} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["DescriptionList","children","className","classnames","DescriptionTerm","DescriptionDetail","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","Example","isMDXComponent"],"sourceRoot":""}