{"version":3,"file":"component---packages-core-documentation-spacing-mdx-16ca55763deab92ad123.js","mappings":"oPAQA,ICGsBA,EDHhBC,EAA8B,CAChC,cACA,cACA,aACA,YACA,YACA,YACA,aACA,cACA,cACA,eAKEC,EAAuD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAI5D,GAA8BC,EAAAA,EAAAA,UAAiB,OAAxCC,EAAP,KAAgBC,EAAhB,KAKMC,EAAuB,QAAZF,EAAoBG,SAASH,GADzB,GACmDA,EACxE,OACI,sBAAII,UAAU,yCACV,sBAAI,cAAY,WAAWA,UAAU,0CACjC,uBAAKA,UAAS,OAASN,EAAT,QAAyBO,MAAO,CAAEC,QAAS,QAAUC,IARnE,SAACC,GACTP,EALwB,SAACO,EAA0BC,GAAyB,IAAD,IAC3E,OAAQD,IAAI,UAAIE,cAAJ,iBAAI,EAAQC,iBAAiBH,UAA7B,aAAI,EAAgCI,iBAAiBH,KAAiB,MAIvEI,CAAoBL,EAAM,kBAQ7B,uBACI,aAAeV,EAAf,MAA4BE,EAC5BK,MAAO,CAAES,gBAAiB,eAAgBC,MAAUb,EAAL,MAAoBc,OAAWd,EAAL,OACzEe,MAAOjB,KAGf,sBAAI,cAAY,YAAYI,UAAU,0CAClC,wBAAMA,UAAU,0BAAhB,IAA2CN,IAE/C,sBAAI,cAAY,UAAUM,UAAU,0CAChC,wBAAMA,UAAU,0BAAhB,QAAkDN,EAAlD,oCAMVoB,EAAqD,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACvD,yBAAOf,UAAU,oCACb,6BACI,0BACI,sBAAIA,UAAU,4CAAd,WACA,sBAAIA,UAAU,4CAAd,YACA,sBAAIA,UAAU,4CAAd,YAGR,6BACKe,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACR,gBAACzB,EAAD,CAAiB0B,IAAKD,EAAKxB,QAASuB,UAMvCG,EAAyB,kBAAM,gBAACN,EAAD,CAAcC,OAAQvB,K,iBC7DrD6B,EAAe,GAOtBC,GALgB/B,EAKQ,UALA,SAA6BgC,GAEzD,OADAC,QAAQC,KAAK,aAAelC,EAAO,4EAC5B,eAASgC,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAI5E,SAACT,EAAD,CAASS,QAAQ,WAAjB,2FACA,4BACA,kPACA,oDAAqC,uBAAYC,WAAW,KAAvB,2BAArC,yGACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,sGAQL,+JAAgJ,uBAAYA,WAAW,KAAvB,OAAhJ,MAAqM,uBAAYA,WAAW,KAAvB,SAArM,MAA4P,uBAAYA,WAAW,KAAvB,UAA5P,QAAsT,uBAAYA,WAAW,KAAvB,QAAtT,eAAqX,uBAAYA,WAAW,KAAvB,OAArX,uCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,kHAOL,gBAAKhC,UAAU,yBACf,6BACA,SAACoB,EAAD,CAAmBW,QAAQ,uBAK/BF,EAAWI,gBAAiB","sources":["webpack://@fremtind/portal/../packages/core/documentation/Spacing/Spacing.tsx","webpack://@fremtind/portal/../packages/core/documentation/spacing.mdx"],"sourcesContent":["import React, { useState, VFC } from \"react\";\n\nimport \"./Spacing.scss\";\n\nfunction stringLiteralArray<T extends string>(a: T[]) {\n    return a;\n}\n\nconst spacings = stringLiteralArray([\n    \"spacing-3xs\",\n    \"spacing-2xs\",\n    \"spacing-xs\",\n    \"spacing-s\",\n    \"spacing-m\",\n    \"spacing-l\",\n    \"spacing-xl\",\n    \"spacing-2xl\",\n    \"spacing-3xl\",\n    \"spacing-4xl\",\n]);\n\ntype spacingClass = typeof spacings[number];\n\nconst SpacingTableRow: React.FC<{ spacing: spacingClass }> = ({ spacing }) => {\n    const getComputedProperty = (node: HTMLElement | null, cssProperty: string) => {\n        return (node && window?.getComputedStyle(node)?.getPropertyValue(cssProperty)) || \"N/A\";\n    };\n    const [pxValue, setPxValue] = useState<string>(\"N/A\");\n    const ref = (node: HTMLDivElement | null) => {\n        setPxValue(getComputedProperty(node, \"margin-top\"));\n    };\n    const baseFontSize = 16; // 1rem = 16px\n    const remValue = pxValue !== \"N/A\" ? parseInt(pxValue) / baseFontSize : pxValue;\n    return (\n        <tr className=\"jkl-portal-spacing-example-table__row\">\n            <td data-header=\"Spacing:\" className=\"jkl-portal-spacing-example-table__data\">\n                <div className={`jkl-${spacing}--top`} style={{ display: \"none\" }} ref={ref} />\n                <div\n                    aria-label={`${spacing},  ${pxValue}`}\n                    style={{ backgroundColor: \"currentColor\", width: `${remValue}rem`, height: `${remValue}rem` }}\n                    title={pxValue}\n                />\n            </td>\n            <td data-header=\"Variabel:\" className=\"jkl-portal-spacing-example-table__data\">\n                <code className=\"jkl-portal-inline-code\">${spacing}</code>\n            </td>\n            <td data-header=\"Klasse:\" className=\"jkl-portal-spacing-example-table__data\">\n                <code className=\"jkl-portal-inline-code\">{`.jkl-${spacing}--<top|right|bottom|left|all>`}</code>\n            </td>\n        </tr>\n    );\n};\n\nconst SpacingTable: React.FC<{ values: spacingClass[] }> = ({ values }) => (\n    <table className=\"jkl-portal-spacing-example-table\">\n        <thead>\n            <tr>\n                <th className=\"jkl-portal-spacing-example-table__header\">Spacing</th>\n                <th className=\"jkl-portal-spacing-example-table__header\">Variabel</th>\n                <th className=\"jkl-portal-spacing-example-table__header\">Klasse</th>\n            </tr>\n        </thead>\n        <tbody>\n            {values.map((value, idx) => (\n                <SpacingTableRow key={idx} spacing={value} />\n            ))}\n        </tbody>\n    </table>\n);\n\nexport const SpacingScaleTable: VFC = () => <SpacingTable values={spacings} />;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { SpacingScaleTable } from \"./Spacing/Spacing\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">Vi tilbyr Sass-variabler og utility-klasser for verdiene i spacing-skalaene til Jøkul.</Ingress>\n    <h2>{`Bruk`}</h2>\n    <p>{`I Jøkul har vi en spacing-skala som er basert på t-skjorte størrelser. Du kan bruke skalaene ved hjelp av SASS-variabler som du kan sette inn i ditt eget stilark, eller bruke hjelpeklassene direkte på elementer i koden.`}</p>\n    <p>{`Variablene kan importeres fra `}<inlineCode parentName=\"p\">{`~@fremtind/jkl-core/jkl`}</inlineCode>{`. Husk å bruke riktig importsyntaks for byggverktøyet ditt når du importerer. De kan da brukes slik:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@use \"~@fremtind/jkl-core/jkl\";\n\n.jkl-your-component {\n    padding-left: jkl.$spacing-s;\n}\n`}</code></pre>\n    <p>{`Utility-klassene setter en verdi fra spacingskalaene som margin på elementet som har klassen. Det finnes varianter for å sette margin på `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`right`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`bottom`}</inlineCode>{` og `}<inlineCode parentName=\"p\">{`left`}</inlineCode>{`, samt for `}<inlineCode parentName=\"p\">{`all`}</inlineCode>{`e sider. Klassene kan brukes slik:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"jkl-spacing-xl--all\">\n    <span class=\"jkl-spacing-s--right\">Hallo</span>\n    verden\n</div>\n`}</code></pre>\n    <div className=\"jkl-spacing-xl--top\" />\n    <h3>{`Skala`}</h3>\n    <SpacingScaleTable mdxType=\"SpacingScaleTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","spacings","SpacingTableRow","spacing","useState","pxValue","setPxValue","remValue","parseInt","className","style","display","ref","node","cssProperty","window","getComputedStyle","getPropertyValue","getComputedProperty","backgroundColor","width","height","title","SpacingTable","values","map","value","idx","key","SpacingScaleTable","_frontmatter","Ingress","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}