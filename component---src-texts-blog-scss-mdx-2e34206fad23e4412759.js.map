{"version":3,"file":"component---src-texts-blog-scss-mdx-2e34206fad23e4412759.js","mappings":"6MAUsBA,E,6DAFTC,EAAe,GAOtBC,GALgBF,EAKQ,UALA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,SAACT,EAAD,CAASS,QAAQ,WAAjB,wPAGA,oQAAqP,uBAAYC,WAAW,KAAvB,QAArP,WAAgT,uBAAYA,WAAW,KAAvB,aAAhT,wBAA6X,uBAAYA,WAAW,KAAvB,aAA7X,6GAA+hB,uBAAYA,WAAW,KAAvB,QAA/hB,0CAAynB,uBAAYA,WAAW,KAAvB,WAAznB,0IAAszB,uBAAYA,WAAW,KAAvB,QAAtzB,QAA82B,uBAAYA,WAAW,KAAvB,YAA92B,wCAA08B,uBAAYA,WAAW,KAAvB,SAA18B,aAAwgC,uBAAYA,WAAW,KAAvB,SAAxgC,iFAA0oC,uBAAYA,WAAW,KAAvB,QAA1oC,YACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,mGASL,qCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,0GASL,4MACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,+IAWL,8OAA+N,uBAAYA,WAAW,KAAvB,QAA/N,eACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,wGAKL,+BACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,qHAML,6JAA8I,cAAGA,WAAW,IACxJ,KAAQ,oDADkI,oDAA9I,MAGA,qGACA,qBAAK,iBAAMA,WAAW,OAAjB,iGAEL,8PAKJH,EAAWI,gBAAiB","sources":["webpack://@fremtind/portal/./src/texts/blog/scss.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Ingress mdxType=\"Ingress\">\n    Med Jøkul prøver vi å holde oss oppdatert, både kodemessig, depdencecier, design og med andre ting og trender som beveger seg rundt oss. Nå har Sass-teamet kommet med noen oppdatering, som påvirker hvordan man skal bruke sass filene fra Jøkul.\n    </Ingress>\n    <p>{`La meg starte med en viktig poeng, dette er nytt, vi har ikke dårlig tid på oss å få fikset dette, men er greit å ta tak i det når det passer. Det er ikke alle implementasjoner av Sass som har full støtte for dette enda, men om du bruker `}<inlineCode parentName=\"p\">{`sass`}</inlineCode>{` eller `}<inlineCode parentName=\"p\">{`dart-sass`}</inlineCode>{` kan du migrere nå. `}<inlineCode parentName=\"p\">{`node-sass`}</inlineCode>{` har ikke støtte per i dag, men om du bruker den bør du vurdere å migrere til referanse implementasjonen `}<inlineCode parentName=\"p\">{`sass`}</inlineCode>{`. Det viktige endringen for oss er at `}<inlineCode parentName=\"p\">{`@import`}</inlineCode>{` syntaxen gies tilbake til CSS. Per i dag er det måten vi har hentet funksjonalitet og stiler mellom ulike filer, det erstattes nå av `}<inlineCode parentName=\"p\">{`@use`}</inlineCode>{` og `}<inlineCode parentName=\"p\">{`@forward`}</inlineCode>{`. Dette gjelder kun ved importer av `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{` filer i `}<inlineCode parentName=\"p\">{`.scss`}</inlineCode>{` filer, det påvirker ikke importen til JavaScript eller import av våre bydge `}<inlineCode parentName=\"p\">{`.css`}</inlineCode>{` filer.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@import '~@fremtind/jkl-core/_functions.scss';\n\n.my-class {\n    height: rem(300px);\n}\n\n`}</code></pre>\n    <p>{`Dette blir nå:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@use '~@fremtind/jkl-core/_functions.scss';\n\n.my-class {\n    height: functions.rem(300px);\n}\n\n`}</code></pre>\n    <p>{`Import blir byttet ut med use, men importen er nå scopet til et namespace, så for å finne funksjonen må den kalles fra namespace. Du kan også sette det namespacet selv om du ønsker.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@use '~@fremtind/jkl-core/mixins/_all.scss' as mix;\n\n.my-class {\n    @include mix.small-device {\n        display: none;\n    }\n}\n\n`}</code></pre>\n    <p>{`Med nye syntaxen har ikke lengre den importete filen tilgang til variablene satt i fila den blir importert til. Det treffer oss for å sette opp fonten vår. For å fikse det må man gi den importerende fila tilgang via `}<inlineCode parentName=\"p\">{`with`}</inlineCode>{` syntaxen.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`$webfonts-dir: \"/relative/path/to/font/files\";\n@import \"~@fremtind/jkl-webfonts/webfonts.scss\";\n`}</code></pre>\n    <p>{`blir til`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`@use '~@fremtind/jkl-webfonts/webfonts.scss' with (\n    $webfonts-dir: \"/privat/forsikring/open/fonts\"\n);\n`}</code></pre>\n    <p>{`Dette er litt kjipt å fikse, men heldigvis har sass-teamet lagd et migrasjonsverktøy som kan fikse de fleste importen (ikke webfonts). `}<a parentName=\"p\" {...{\n        \"href\": \"https://sass-lang.com/documentation/cli/migrator\"\n      }}>{`https://sass-lang.com/documentation/cli/migrator`}</a>{`.`}</p>\n    <p>{`For å ta alle scss filene i samme slengen kan du gjøre noe ala dette på linux:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ find . -type f -name '*.scss' | xargs npx sass-migrator module --verbose --migrate-deps\n`}</code></pre>\n    <p>{`Vi har ikke migrert Jøkul enda, vi vil gi beskjed før vi gjør det. Vi anbefaler klienter å gjøre denne oppgraderingen ved første tilgjengelige anledning, så trenger man ikke bry seg den dagen det kommer en breaking change på dette.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Ingress","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}