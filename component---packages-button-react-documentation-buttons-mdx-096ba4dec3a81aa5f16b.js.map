{"version":3,"file":"component---packages-button-react-documentation-buttons-mdx-096ba4dec3a81aa5f16b.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/button-react/src/BaseButton.tsx","webpack://@fremtind/portal/../packages/button-react/src/Button.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/Primary.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/Secondary.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/Tertiary.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/Anchors.tsx","webpack://@fremtind/portal/../packages/button-react/documentation/buttons.mdx","webpack://@fremtind/portal/../packages/loader-react/build/browser/index.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport { Props } from \"./types\";\n\nexport const BaseButton = forwardRef<HTMLButtonElement, Props>((props, ref) => <button {...props} ref={ref} />);\n\nBaseButton.displayName = \"BaseButton\";\n","import React, { forwardRef, TouchEvent } from \"react\";\nimport classNames from \"classnames\";\nimport { Loader } from \"@fremtind/jkl-loader-react\";\nimport { Props, ValidButtons } from \"./types\";\nimport { BaseButton } from \"./BaseButton\";\n\nconst makeButtonComponent = (buttonType: ValidButtons) => {\n    const button = forwardRef<HTMLButtonElement, Props>(\n        ({ children, className = \"\", forceCompact, inverted, onClick, onTouchStart, loader, ...rest }, ref) => {\n            const componentClassName = classNames(\"jkl-button\", \"jkl-button--\" + buttonType, className, {\n                \"jkl-button--compact\": forceCompact,\n                \"jkl-button--inverted\": inverted,\n            });\n\n            const handleTouch = (event: TouchEvent<HTMLButtonElement>) => {\n                onTouchStart && onTouchStart(event);\n\n                const target = event.target as HTMLButtonElement;\n                if (target && event.targetTouches.length) {\n                    const Xcoord = event.targetTouches[0].clientX - target.getBoundingClientRect().x;\n                    const Ycoord = event.targetTouches[0].clientY - target.getBoundingClientRect().y;\n                    target.style.setProperty(\"--jkl-touch-xcoord\", Xcoord.toPrecision(4) + \"px\");\n                    target.style.setProperty(\"--jkl-touch-ycoord\", Ycoord.toPrecision(4) + \"px\");\n                    target.classList.add(\"jkl-button--pressed\");\n                    setTimeout(() => target.classList.remove(\"jkl-button--pressed\"), 400);\n                }\n            };\n\n            return (\n                <BaseButton\n                    aria-live=\"polite\"\n                    className={componentClassName}\n                    disabled={loader?.showLoader}\n                    onClick={onClick}\n                    onTouchStart={handleTouch}\n                    {...rest}\n                    ref={ref}\n                >\n                    <div\n                        className={classNames(\"jkl-button__content\", {\n                            \"jkl-button__content--compact\": forceCompact,\n                        })}\n                    >\n                        <div\n                            className={classNames(\"jkl-button__slider\", {\n                                \"jkl-button__slider--show-loader\": !!loader?.showLoader,\n                            })}\n                        >\n                            {children}\n                            {loader && (\n                                <div className=\"jkl-button__loader\">\n                                    <Loader\n                                        textDescription={loader.textDescription}\n                                        aria-hidden={!!loader.showLoader}\n                                        variant={forceCompact ? \"small\" : \"medium\"}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </BaseButton>\n            );\n        },\n    );\n    return button;\n};\n\nexport const PrimaryButton = makeButtonComponent(\"primary\");\nexport const SecondaryButton = makeButtonComponent(\"secondary\");\nexport const TertiaryButton = makeButtonComponent(\"tertiary\");\n","import React, { useState } from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { PrimaryButton } from \"../src\";\n\nexport const Primary: React.FC<ExampleComponentProps> = ({ boolValues }) => {\n    const [showLoader, setShowLoader] = useState(false);\n    const loader = { showLoader: showLoader || !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" };\n\n    const onClick = () => {\n        console.log(\"Hello!\");\n        setShowLoader(true);\n        setTimeout(() => {\n            setShowLoader(false);\n        }, 2200);\n    };\n\n    return (\n        <PrimaryButton\n            inverted={boolValues && boolValues[\"Invertert\"]}\n            forceCompact={boolValues && boolValues[\"Kompakt\"]}\n            loader={showLoader || !!boolValues?.[\"withLoader\"] ? loader : undefined}\n            onClick={onClick}\n            className=\"jkl-spacing--right-1\"\n        >\n            Lagre og send inn\n        </PrimaryButton>\n    );\n};\n\nexport const PrimaryCode = `\n<PrimaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={showLoader || !!boolValues?.[\"withLoader\"] ? loader : undefined}\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Lagre og send inn\n</PrimaryButton>\n`;\n","import React, { useState } from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { SecondaryButton } from \"../src\";\n\nexport const Secondary: React.FC<ExampleComponentProps> = ({ boolValues }) => {\n    const [showLoader, setShowLoader] = useState(false);\n    const loader = { showLoader: showLoader || !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" };\n\n    const onClick = () => {\n        console.log(\"Hello!\");\n        setShowLoader(true);\n        setTimeout(() => {\n            setShowLoader(false);\n        }, 2200);\n    };\n\n    return (\n        <SecondaryButton\n            inverted={boolValues && boolValues[\"Invertert\"]}\n            forceCompact={boolValues && boolValues[\"Kompakt\"]}\n            loader={showLoader || !!boolValues?.[\"withLoader\"] ? loader : undefined}\n            onClick={onClick}\n            className=\"jkl-spacing--right-1\"\n        >\n            Lagre\n        </SecondaryButton>\n    );\n};\n\nexport const SecondaryCode = `\n<SecondaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={showLoader || !!boolValues?.[\"withLoader\"] ? loader : undefined}\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Lagre\n</SecondaryButton>\n`;\n","import React, { useState } from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { TertiaryButton } from \"../src\";\n\nexport const Tertiary: React.FC<ExampleComponentProps> = ({ boolValues }) => {\n    const [showLoader, setShowLoader] = useState(false);\n    const loader = { showLoader: showLoader || !!boolValues?.[\"isLoading\"], textDescription: \"Laster innhold\" };\n\n    const onClick = () => {\n        console.log(\"Hello!\");\n        setShowLoader(true);\n        setTimeout(() => {\n            setShowLoader(false);\n        }, 2200);\n    };\n\n    return (\n        <TertiaryButton\n            inverted={boolValues && boolValues[\"Invertert\"]}\n            forceCompact={boolValues && boolValues[\"Kompakt\"]}\n            loader={showLoader || !!boolValues?.[\"withLoader\"] ? loader : undefined}\n            onClick={onClick}\n            className=\"jkl-spacing--right-1\"\n        >\n            Avbryt\n        </TertiaryButton>\n    );\n};\n\nexport const TertiaryCode = `\n<TertiaryButton\n    inverted={boolValues && boolValues[\"Invertert\"]}\n    forceCompact={boolValues && boolValues[\"Kompakt\"]}\n    loader={showLoader || !!boolValues?.[\"withLoader\"] ? loader : undefined}\n    onClick={onClick}\n    className=\"jkl-spacing--right-1\"\n>\n    Avbryt\n</TertiaryButton>\n`;\n","import React from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport \"./style.scss\";\n\nexport const Anchors: React.FC<ExampleComponentProps> = () => {\n    return (\n        <div className=\"jkl-button-example\">\n            <div>\n                <a className=\"jkl-button jkl-button--primary\" href=\"/komponenter/buttons#knapper-som-er-lenker\">\n                    Send inn\n                </a>\n            </div>\n            <div>\n                <a className=\"jkl-button jkl-button--secondary\" href=\"/komponenter/buttons#knapper-som-er-lenker\">\n                    Lagre\n                </a>\n            </div>\n            <div>\n                <a className=\"jkl-button jkl-button--tertiary\" href=\"/komponenter/buttons#knapper-som-er-lenker\">\n                    Avbryt\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport const AnchorsCode = `\n<div>\n    <a\n        className=\"jkl-button jkl-button--primary\"\n        href=\"/komponenter/buttons#knapper-som-er-lenker\"\n    >\n        Send inn\n    </a>\n</div>\n<div>\n    <a\n        className=\"jkl-button jkl-button--secondary\"\n        href=\"/komponenter/buttons#knapper-som-er-lenker\"\n    >\n        Lagre\n    </a>\n</div>\n<div>\n    <a\n        className=\"jkl-button jkl-button--tertiary\"\n        href=\"/komponenter/buttons#knapper-som-er-lenker\"\n    >\n        Avbryt\n    </a>\n</div>\n`;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport { Primary, PrimaryCode } from \"./Primary\";\nimport { Secondary, SecondaryCode } from \"./Secondary\";\nimport { Tertiary, TertiaryCode } from \"./Tertiary\";\nimport { Anchors, AnchorsCode } from \"./Anchors\";\nimport { PrimaryButton, SecondaryButton, TertiaryButton } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst CodeDemo = makeShortcode(\"CodeDemo\");\nconst DoDontExample = makeShortcode(\"DoDontExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Knapper starter en handling. Teksten på knappen forteller hva som vil skje når brukeren klikker på den.\n    </Ingress>\n    <p><strong parentName=\"p\">{`Primærknapp:`}</strong>{` brukes til den viktigste handlingen på en side - hovedhandlingen. En side kan noen ganger ha mer enn en hovedhandling, men ikke mange.`}</p>\n    <ComponentExample component={Primary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"withLoader\", \"isLoading\"]\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={PrimaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <p><strong parentName=\"p\">{`Sekundærknapp:`}</strong>{` brukes til handlinger som ikke er like viktige for oss eller brukeren.`}</p>\n    <ComponentExample component={Secondary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"withLoader\", \"isLoading\"]\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={SecondaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <p><strong parentName=\"p\">{`Tertiærknapp:`}</strong>{` brukes til handlinger som er mindre viktige, eller som kan gi uønskede konsekvenser.`}</p>\n    <ComponentExample component={Tertiary} knobs={{\n      boolProps: [\"Kompakt\", \"Invertert\", \"withLoader\", \"isLoading\"]\n    }} mdxType=\"ComponentExample\">\n    <CodeDemo code={TertiaryCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n    <h2>{`Lastemodus`}</h2>\n    <p>{`Hvis du skal bruke lastemodus i knappen må du sørge for at `}<inlineCode parentName=\"p\">{`@fremtind/jkl-loader/loader.min.css`}</inlineCode>{` er lastet inn i klienten.`}</p>\n    <h2>{`Knappetyper`}</h2>\n    <p>{`Disse tre hovedknappetypene har et hierarki. Når brukeren har flere valg samtidig, skal vi kun ha én primærknapp.`}</p>\n    <DoDontExample type=\"do\" description=\"Kun én primærknapp\" image=\"/assets/do-donts/button-do-1.png\" mdxType=\"DoDontExample\" />\n    <DoDontExample type=\"dont\" description=\"Flere primærknapper\" image=\"/assets/do-donts/button-dont-1.png\" mdxType=\"DoDontExample\" />\n    <h2>{`Tekst på knapper`}</h2>\n    <p>{`Knappetekster skal være så enkle og korte som mulig og skal oppfordre til handling. Bruk helst bare to ord:`}</p>\n    <PrimaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"PrimaryButton\">Send inn</PrimaryButton>\n    <SecondaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"SecondaryButton\">Lagre</SecondaryButton>\n    <TertiaryButton className=\"jkl-layout-spacing--medium-right\" mdxType=\"TertiaryButton\">Avbryt</TertiaryButton>\n    <h2>{`Knapper som er lenker`}</h2>\n    <p>{`Avhengig av situasjonen kan det hende en knapp teknisk sett er et `}<inlineCode parentName=\"p\">{`<a />`}</inlineCode>{`-element. Jøkul støtter å ha knappeklasser på `}<inlineCode parentName=\"p\">{`<a />`}</inlineCode>{`.`}</p>\n    <ComponentExample component={Anchors} mdxType=\"ComponentExample\">\n    <CodeDemo code={AnchorsCode} mdxType=\"CodeDemo\" />\n    </ComponentExample>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React from 'react';\nimport classNames from 'classnames';\n\nvar _excluded = [\"variant\", \"textDescription\", \"className\", \"dataTestAutoId\", \"politeness\"];\nvar Loader = function Loader(_ref) {\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"large\" : _ref$variant,\n      textDescription = _ref.textDescription,\n      className = _ref.className,\n      _ref$dataTestAutoId = _ref.dataTestAutoId,\n      dataTestAutoId = _ref$dataTestAutoId === void 0 ? \"jkl-loader\" : _ref$dataTestAutoId,\n      _ref$politeness = _ref.politeness,\n      politeness = _ref$politeness === void 0 ? \"polite\" : _ref$politeness,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var componentClassName = classNames(\"jkl-loader\", className, {\n    \"jkl-loader--medium\": variant === \"medium\",\n    \"jkl-loader--small\": variant === \"small\"\n  });\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    \"aria-busy\": \"true\",\n    \"aria-label\": textDescription,\n    \"aria-live\": politeness,\n    className: componentClassName,\n    \"data-testautoid\": dataTestAutoId,\n    \"data-testid\": \"jkl-loader\",\n    role: \"alert\",\n    title: textDescription\n  }, rest), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--left\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--middle\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--right\"\n  }));\n};\n\nexport { Loader };\n"],"names":["BaseButton","forwardRef","props","ref","displayName","makeButtonComponent","buttonType","children","className","forceCompact","inverted","onClick","onTouchStart","loader","rest","componentClassName","classNames","disabled","showLoader","event","target","targetTouches","length","Xcoord","clientX","getBoundingClientRect","x","Ycoord","clientY","y","style","setProperty","toPrecision","classList","add","setTimeout","remove","textDescription","variant","PrimaryButton","SecondaryButton","TertiaryButton","Primary","boolValues","useState","setShowLoader","undefined","console","log","Secondary","Tertiary","Anchors","href","_frontmatter","makeShortcode","name","warn","Ingress","ComponentExample","CodeDemo","DoDontExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","component","knobs","boolProps","code","type","description","image","isMDXComponent","_excluded","Loader","_ref","_ref$variant","_ref$dataTestAutoId","dataTestAutoId","_ref$politeness","politeness","_objectWithoutProperties","React","_extends","role","title"],"sourceRoot":""}