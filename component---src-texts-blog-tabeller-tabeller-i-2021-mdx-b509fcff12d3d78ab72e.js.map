{"version":3,"file":"component---src-texts-blog-tabeller-tabeller-i-2021-mdx-b509fcff12d3d78ab72e.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/table-react/documentation/DataTableExample.tsx","webpack://@fremtind/portal/../packages/table-react/src/tableContext.tsx","webpack://@fremtind/portal/../packages/table-react/src/TableHeader.tsx","webpack://@fremtind/portal/../packages/table-react/src/tableSectionContext.tsx","webpack://@fremtind/portal/../packages/table-react/src/TableHead.tsx","webpack://@fremtind/portal/../packages/table-react/src/Table.tsx","webpack://@fremtind/portal/../packages/table-react/src/TableRow.tsx","webpack://@fremtind/portal/../packages/table-react/src/TableCell.tsx","webpack://@fremtind/portal/../packages/table-react/src/TableBody.tsx","webpack://@fremtind/portal/../packages/table-react/src/TableCaption.tsx","webpack://@fremtind/portal/../packages/table-react/src/DataTable.tsx","webpack://@fremtind/portal/./src/texts/blog/tabeller/tabeller-i-2021.mdx"],"sourcesContent":["import React, { VFC } from \"react\";\nimport { DataTable } from \"../src\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\n\nconst columns = [\"Dato\", \"Saksnummer\", \"Kundenummer\", \"Kundenavn\", \"Milepæl\", \"Følger saken\"];\n\nconst rows = [\n    [\"24.02.2020\", \"20-1234567\", \"010203 99887\", \"Ola Nordmann\", \"Opprettet\", \"Siri Saksbehandler\"],\n    [\"13.04.2019\", \"20-8382811\", \"010203 99887\", \"Kari Nordkvinne\", \"Opprettet\", \"Siri Saksbehandler\"],\n    [\"31.07.2017\", \"20-1111\", \"010203 99887\", \"Kari Nordkvinne\", \"Opprettet\", \"Per Persen\"],\n];\n\nconst DataTableExample: VFC<ExampleComponentProps> = ({ boolValues, choiceValues }) => {\n    const compact = boolValues && boolValues[\"Kompakt\"];\n    const type = choiceValues ? choiceValues[\"Mobilvisning\"] : \"\";\n    const props = type === \"Liste\" ? { \"data-collapse\": \"true\", collapseToList: true, compact: true } : {};\n\n    return <DataTable caption=\"Saksliste\" compact={compact} columns={columns} rows={rows} {...props} />;\n};\n\nexport default DataTableExample;\n\nexport const dataTableExampleCode = `\n    <DataTable\n        caption=\"Saksliste\"\n        compact={compact}\n        columns={columns}\n        rows={rows}\n    />\n`;\n","import React, { createContext, useContext } from \"react\";\n\ntype TableContext = {\n    compact: boolean;\n};\n\nconst tableContext = createContext<TableContext>({\n    compact: false,\n});\n\nexport const useTableContext = (): TableContext => useContext(tableContext);\n\ninterface Props {\n    state: TableContext;\n}\n\nexport const TableContextProvider: React.FC<Props> = ({ state, children }) => (\n    <tableContext.Provider value={state}>{children}</tableContext.Provider>\n);\n","import cx from \"classnames\";\nimport React, { FC } from \"react\";\nimport { useTableContext } from \"./tableContext\";\n\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableCellElement>, HTMLTableCellElement> {\n    bold?: boolean;\n    compact?: boolean;\n    /**\n     * Si om headeren gjelder for en kolonne eller en rad\n     * @default \"col\"\n     */\n    scope?: \"col\" | \"row\";\n    srOnly?: boolean;\n}\n\nexport const TableHeader: FC<Props> = ({ bold = true, compact, className, scope = \"col\", srOnly, ...rest }) => {\n    const { compact: contextCompact } = useTableContext();\n    return (\n        <th\n            className={cx(\"jkl-table-header\", className, {\n                [\"jkl-table-header--bold\"]: bold,\n                [\"jkl-table-header--compact\"]: typeof compact === \"undefined\" ? contextCompact : compact,\n                [\"jkl-table-header--sr-only\"]: srOnly,\n            })}\n            scope={scope}\n            {...rest}\n        />\n    );\n};\n","import React, { createContext, useContext } from \"react\";\n\ntype TableSectionContext = {\n    isTableHead: boolean;\n    isTableBody: boolean;\n    isTableFooter: boolean;\n};\n\nconst tableSectionContext = createContext<TableSectionContext>({\n    isTableHead: false,\n    isTableBody: false,\n    isTableFooter: false,\n});\n\nexport const useTableSectionContext = (): TableSectionContext => useContext(tableSectionContext);\n\ninterface Props {\n    state: TableSectionContext;\n}\n\nexport const TableSectionContextProvider: React.FC<Props> = ({ state, children }) => (\n    <tableSectionContext.Provider value={state}>{children}</tableSectionContext.Provider>\n);\n","import cx from \"classnames\";\nimport React, { FC } from \"react\";\nimport { TableSectionContextProvider } from \"./tableSectionContext\";\n\ninterface Props\n    extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement> {\n    srOnly?: boolean;\n}\n\nexport const TableHead: FC<Props> = ({ className, srOnly, ...rest }) => {\n    return (\n        <TableSectionContextProvider state={{ isTableHead: true, isTableBody: false, isTableFooter: false }}>\n            <thead\n                className={cx(\"jkl-table-head\", className, {\n                    [\"jkl-table-head--sr-only\"]: srOnly,\n                })}\n                {...rest}\n            />\n        </TableSectionContextProvider>\n    );\n};\n","import cx from \"classnames\";\nimport React, { FC } from \"react\";\nimport { TableContextProvider } from \"./tableContext\";\n\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableElement>, HTMLTableElement> {\n    compact?: boolean;\n    /** Bryt ned til en stablet listevisning på små skjermer. NB: husk å sette `data-th` på hver celle! */\n    collapseToList?: boolean;\n    /** Setter width: 100% */\n    fullWidth?: boolean;\n}\n\nexport const Table: FC<Props> = ({\n    className,\n    compact = false,\n    collapseToList = false,\n    fullWidth = false,\n    ...rest\n}) => {\n    return (\n        <TableContextProvider state={{ compact }}>\n            <table\n                className={cx(\"jkl-table\", className, {\n                    [\"jkl-table--full-width\"]: fullWidth,\n                    [\"jkl-table--collapse-to-list\"]: collapseToList,\n                })}\n                {...rest}\n            />\n        </TableContextProvider>\n    );\n};\n","import cx from \"classnames\";\nimport React, { FC, useState } from \"react\";\nimport { useTableContext } from \"./tableContext\";\nimport { useTableSectionContext } from \"./tableSectionContext\";\n\ninterface Clickable {\n    markClickedRows?: boolean;\n    /** Lar deg kontrollere radens tilstand untenfra */\n    isClicked?: boolean;\n    onClick: (e: React.MouseEvent<HTMLTableRowElement, MouseEvent> | React.KeyboardEvent<HTMLTableRowElement>) => void;\n}\n\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement> {\n    /**\n     * Gir raden interaktivitet og en click-handler.\n     */\n    clickable?: Clickable;\n}\n\nexport const TableRow: FC<Props> = ({ className, clickable, children, ...rest }) => {\n    const { compact } = useTableContext();\n    const { isTableBody } = useTableSectionContext();\n\n    const [clicked, setClicked] = useState(clickable?.isClicked || false);\n\n    if (isTableBody && clickable) {\n        return (\n            <tr\n                onClick={function handleOnClick(e) {\n                    setClicked(!clicked);\n                    clickable.onClick(e);\n                }}\n                onKeyPress={function handleKeyPress(e) {\n                    if (e.key === \" \" || e.key === \"Enter\") {\n                        e.preventDefault();\n                        setClicked(!clicked);\n                        clickable.onClick(e);\n                    }\n                }}\n                className={cx(\"jkl-table-row\", \"jkl-table-row--clickable\", className, {\n                    [\"jkl-table-row--compact\"]: compact,\n                    [\"jkl-table-row--clicked\"]: clickable?.markClickedRows && clicked,\n                })}\n                aria-label=\"Klikkbar rad\"\n                aria-pressed={clickable?.markClickedRows ? (clicked ? \"true\" : \"false\") : undefined}\n                tabIndex={0}\n                {...rest}\n            >\n                {children}\n            </tr>\n        );\n    }\n\n    return (\n        <tr\n            className={cx(\"jkl-table-row\", className, {\n                [\"jkl-table-row--compact\"]: compact,\n            })}\n            {...rest}\n        >\n            {children}\n        </tr>\n    );\n};\n","import cx from \"classnames\";\nimport React, { FC } from \"react\";\nimport { useTableContext } from \"./tableContext\";\n\ninterface Props extends React.DetailedHTMLProps<React.TdHTMLAttributes<HTMLTableCellElement>, HTMLTableCellElement> {\n    compact?: boolean;\n    /** Velg mellom venstrejustering og høyrejustering av innholdet. Typisk skal innholdet være venstrejustert, men for eksempel summer er høyrejustert. */\n    align?: \"left\" | \"right\";\n    /** Velg mellom vertikal sentrering av innholdet eller toppjustering. Typisk skal innholdet være sentrert, men dersom én eller flere kolonner typisk har mye mer innhold enn naboene kan toppjustering være bedre. */\n    verticalAlign?: \"center\" | \"top\";\n}\n\nexport const TableCell: FC<Props> = ({ align = \"left\", verticalAlign = \"center\", className, compact, ...rest }) => {\n    const { compact: contextCompact } = useTableContext();\n    return (\n        <td\n            className={cx(\"jkl-table-cell\", className, {\n                [\"jkl-table-cell--compact\"]: typeof compact === \"undefined\" ? contextCompact : compact,\n                [\"jkl-table-cell--align-right\"]: align === \"right\",\n                [\"jkl-table-cell--align-top\"]: verticalAlign === \"top\",\n            })}\n            {...rest}\n        />\n    );\n};\n","import React, { FC } from \"react\";\nimport { TableSectionContextProvider } from \"./tableSectionContext\";\n\ntype Props = React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\n\nexport const TableBody: FC<Props> = (props) => {\n    return (\n        <TableSectionContextProvider state={{ isTableHead: false, isTableBody: true, isTableFooter: false }}>\n            <tbody {...props} />\n        </TableSectionContextProvider>\n    );\n};\n","import cx from \"classnames\";\nimport React, { FC } from \"react\";\n\ninterface Props\n    extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableCaptionElement>, HTMLTableCaptionElement> {\n    /** Skjuler caption visuelt */\n    srOnly?: boolean;\n}\n\nexport const TableCaption: FC<Props> = ({ srOnly = true, ...rest }) => {\n    return <caption className={cx(\"jkl-table-caption\", { [\"jkl-table-caption--sr-only\"]: srOnly })} {...rest} />;\n};\n","import React, { VFC } from \"react\";\nimport { TableHeader } from \"./TableHeader\";\nimport { TableHead } from \"./TableHead\";\nimport { Table } from \"./Table\";\nimport { TableRow } from \"./TableRow\";\nimport { TableCell } from \"./TableCell\";\nimport { TableBody } from \"./TableBody\";\nimport { TableCaption } from \"./TableCaption\";\n\ninterface Props extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableElement>, HTMLTableElement> {\n    /** Beskrivelse av tabellen for skjermlesere */\n    caption?: string;\n    compact?: boolean;\n    collapseToList?: boolean;\n    rows: React.ReactNode[][];\n    columns: string[];\n    emptyTableText?: string;\n    /** Velg mellom vertikal sentrering av innholdet eller toppjustering. Typisk skal innholdet være sentrert, men dersom én eller flere kolonner typisk har mye mer innhold enn naboene kan toppjustering være bedre. */\n    verticalAlign?: \"center\" | \"top\";\n}\n\nexport const DataTable: VFC<Props> = ({ caption, columns, emptyTableText, rows, verticalAlign, ...rest }) => {\n    return (\n        <Table fullWidth={true} {...rest}>\n            {caption && <TableCaption srOnly>{caption}</TableCaption>}\n            <TableHead>\n                <TableRow>\n                    {columns.map((column, index) => (\n                        <TableHeader key={index} compact bold>\n                            {column}\n                        </TableHeader>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {rows.length === 0 && emptyTableText && (\n                    <TableRow>\n                        <TableCell colSpan={columns.length}>{emptyTableText}</TableCell>\n                    </TableRow>\n                )}\n                {rows.map((row, rowIndex) => (\n                    <TableRow key={rowIndex}>\n                        {row.map((cell, cellIndex) => (\n                            <TableCell key={cellIndex} data-th={columns[cellIndex]} verticalAlign={verticalAlign}>\n                                {cell}\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    );\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport DataTableExample from \"../../../../../packages/table-react/documentation/DataTableExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Under en avstemming på{\" \"}\n    <a className=\"jkl-link jkl-link--external\" href=\"https://github.com/fremtind/jokul/discussions?discussions_q=label%3A%22🔍+inventory%22+sort%3Atop\">\n        GitHub\n    </a>{\" \"}\n    tidligere i høst ble det tydelig at tabellene i Jøkul trengte litt kjærleik. Første versjon av de nye tabellene er\n    laget, og her er hvordan du kan bruke dem.\n    </Ingress>\n    <h2>{`Mye større fleksibilitet`}</h2>\n    <p>{`Det vi raskt oppdaget var at tabellkomponenten i Jøkul ikke lett lot seg tilpasse til de mange ulike behovene der ute. Det håper vi de nye komponentene kan rette opp i.`}</p>\n    <p>{`Nytt fra i dag er at Jøkul tilbyr enkeltkomponenter tilsvarende de du finner i HTML. Hvert tabell-element har sin egen Jøkul-motpart du kan ta i bruk:`}</p>\n    <table className=\"jkl-layout-spacing--medium-top jkl-layout-spacing--large-bottom\">\n    <thead>\n        <tr>\n            <th>HTML</th>\n            <th>Jøkul</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;table /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;Table /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;thead /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableHead /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;tbody /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableBody /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;tfoot /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableFooter /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;tr /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableRow /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;th /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableHeader /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;td /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableCell /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;caption /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableCaption /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;colgroup /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableColumnGroup /&gt;</code>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col\" className=\"jkl-link jkl-link--external\">\n                    <code>&lt;col /&gt;</code>\n                </a>\n            </td>\n            <td>\n                <code>&lt;TableColumn /&gt;</code>\n            </td>\n        </tr>\n    </tbody>\n    </table>\n    <p>{`Merk at ikke alle elementene har noen eksplisitt CSS fra Jøkul i dag, men vi anbefaler å bruke\nJøkul-komponentene framfor HTML for å være sikret å få med riktig styling om det skulle komme\nsenere. Det å unngå blanding i koden gir også bedre `}<em parentName=\"p\">{`aesthetics`}</em>{` 😉 💅`}</p>\n    <h2>{`Eksempler på bruk`}</h2>\n    <p>{`Gjennom intervjuer og demoer fikk vi se flere av behovene til Jøkul-brukere som\nvi var nødt til å støtte. Vi har samlet dokumentasjon på flere typer tabeller i\ntillegg til den vanlige datatabellen:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Rader med knapper`}</li>\n      <li parentName=\"ul\">{`Klikkbare rader`}</li>\n      <li parentName=\"ul\">{`Responsive tabeller i to varianter`}</li>\n    </ul>\n    <p>{`Les igjennom `}<a parentName=\"p\" {...{\n        \"href\": \"/komponenter/table#eksempler-p%C3%A5-bruk\"\n      }}>{`dokumentasjonen for tabellkomponentene`}</a>{` for å se hvordan du kan lage disse tabellene.`}</p>\n    <h2>{`Migrering til nye komponenter`}</h2>\n    <p>{`Om du er en av de som brukte den gamle tabellen fra Jøkul har vi fremdeles en variant som fungerer omtrent likt.`}</p>\n    <ComponentExample scrollable={true} title=\"DataTable\" component={DataTableExample} knobs={{\n      boolProps: [\"Kompakt\"]\n    }} mdxType=\"ComponentExample\" />\n    <p>{`Vi har `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/fremtind/jokul/blob/main/packages/table-react/MIGRATION.md\"\n      }}>{`fjernet muligheten for å merke rader som klikkbare`}</a>{` i denne komponenten. Om du trenger det kan du se på `}<a parentName=\"p\" {...{\n        \"href\": \"/komponenter/table#eksempler-p%C3%A5-bruk\"\n      }}>{`eksempler på bruk`}</a>{` for de nye komponentene.`}</p>\n    <h2>{`Hva trenger du?`}</h2>\n    <p>{`Er det en variant vi har glemt? Er det noe du savner fra dokumentasjonen?\nFortsett gjerne `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/fremtind/jokul/discussions/2333\"\n      }}>{`tabelldiskusjonen på GitHub`}</a>{`\nog fortell oss mer om hva du trenger.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["columns","rows","boolValues","choiceValues","compact","props","collapseToList","caption","dataTableExampleCode","tableContext","createContext","useTableContext","useContext","TableContextProvider","state","children","Provider","value","TableHeader","bold","className","scope","srOnly","rest","contextCompact","cx","tableSectionContext","isTableHead","isTableBody","isTableFooter","TableSectionContextProvider","TableHead","Table","fullWidth","TableRow","clickable","useState","isClicked","clicked","setClicked","onClick","e","onKeyPress","key","preventDefault","markClickedRows","undefined","tabIndex","TableCell","align","verticalAlign","TableBody","TableCaption","DataTable","emptyTableText","map","column","index","length","colSpan","row","rowIndex","cell","cellIndex","_frontmatter","makeShortcode","name","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","href","parentName","scrollable","title","component","DataTableExample","knobs","boolProps","isMDXComponent"],"sourceRoot":""}