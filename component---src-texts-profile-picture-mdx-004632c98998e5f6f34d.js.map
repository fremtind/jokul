{"version":3,"file":"component---src-texts-profile-picture-mdx-004632c98998e5f6f34d.js","mappings":"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","sources":["webpack://@fremtind/portal/../node_modules/framer-motion/dist/es/value/scroll/utils.js","webpack://@fremtind/portal/../node_modules/framer-motion/dist/es/value/scroll/use-viewport-scroll.js","webpack://@fremtind/portal/../node_modules/framer-motion/dist/es/utils/transform.js","webpack://@fremtind/portal/../node_modules/framer-motion/dist/es/value/use-combine-values.js","webpack://@fremtind/portal/../node_modules/framer-motion/dist/es/value/use-motion-value.js","webpack://@fremtind/portal/../node_modules/framer-motion/dist/es/value/use-on-change.js","webpack://@fremtind/portal/../node_modules/framer-motion/dist/es/value/use-transform.js","webpack://@fremtind/portal/./src/components/Documentation/Picture/MediaBox.tsx","webpack://@fremtind/portal/./src/components/Documentation/Picture/PictureBox.tsx","webpack://@fremtind/portal/./src/components/Documentation/Picture/HeroImage.tsx","webpack://@fremtind/portal/./src/components/Documentation/Picture/VideoBox.tsx","webpack://@fremtind/portal/./src/texts/profile/picture.mdx"],"sourcesContent":["import { motionValue } from '../index.js';\n\nfunction createScrollMotionValues() {\n  return {\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0)\n  };\n}\n\nfunction setProgress(offset, maxOffset, value) {\n  value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\n}\n\nfunction createScrollUpdater(values, getOffsets) {\n  var update = function update() {\n    var _a = getOffsets(),\n        xOffset = _a.xOffset,\n        yOffset = _a.yOffset,\n        xMaxOffset = _a.xMaxOffset,\n        yMaxOffset = _a.yMaxOffset; // Set absolute positions\n\n\n    values.scrollX.set(xOffset);\n    values.scrollY.set(yOffset); // Set 0-1 progress\n\n    setProgress(xOffset, xMaxOffset, values.scrollXProgress);\n    setProgress(yOffset, yMaxOffset, values.scrollYProgress);\n  };\n\n  update();\n  return update;\n}\n\nexport { createScrollMotionValues, createScrollUpdater };","import { createScrollUpdater, createScrollMotionValues } from './utils.js';\nimport { addDomEvent } from '../../events/use-dom-event.js';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.js';\nvar viewportScrollValues;\n\nfunction getViewportScrollOffsets() {\n  return {\n    xOffset: window.pageXOffset,\n    yOffset: window.pageYOffset,\n    xMaxOffset: document.body.clientWidth - window.innerWidth,\n    yMaxOffset: document.body.clientHeight - window.innerHeight\n  };\n}\n\nvar hasListeners = false;\n\nfunction addEventListeners() {\n  hasListeners = true;\n  if (typeof window === \"undefined\") return;\n  var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\n  addDomEvent(window, \"scroll\", updateScrollValues, {\n    passive: true\n  });\n  addDomEvent(window, \"resize\", updateScrollValues);\n}\n/**\n * Returns MotionValues that update when the viewport scrolls:\n *\n * - `scrollX` — Horizontal scroll distance in pixels.\n * - `scrollY` — Vertical scroll distance in pixels.\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\n *\n * **Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`\n * values as this breaks the browser's capability to accurately measure the page length.\n *\n * @library\n *\n * ```jsx\n * import * as React from \"react\"\n * import {\n *   Frame,\n *   useViewportScroll,\n *   useTransform\n * } from \"framer\"\n *\n * export function MyComponent() {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <Frame scaleX={scrollYProgress} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const { scrollYProgress } = useViewportScroll()\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\n * }\n * ```\n *\n * @public\n */\n\n\nfunction useViewportScroll() {\n  /**\n   * Lazy-initialise the viewport scroll values\n   */\n  if (!viewportScrollValues) {\n    viewportScrollValues = createScrollMotionValues();\n  }\n\n  useIsomorphicLayoutEffect(function () {\n    !hasListeners && addEventListeners();\n  }, []);\n  return viewportScrollValues;\n}\n\nexport { useViewportScroll };","import { __assign } from 'tslib';\nimport { interpolate } from 'popmotion';\n\nvar isCustomValueType = function isCustomValueType(v) {\n  return typeof v === \"object\" && v.mix;\n};\n\nvar getMixer = function getMixer(v) {\n  return isCustomValueType(v) ? v.mix : undefined;\n};\n\nfunction transform() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var useImmediate = !Array.isArray(args[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = args[0 + argOffset];\n  var inputRange = args[1 + argOffset];\n  var outputRange = args[2 + argOffset];\n  var options = args[3 + argOffset];\n  var interpolator = interpolate(inputRange, outputRange, __assign({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };","import { useMotionValue } from './use-motion-value.js';\nimport { useMultiOnChange } from './use-on-change.js';\nimport sync from 'framesync';\n\nfunction useCombineMotionValues(values, combineValues) {\n  /**\n   * Initialise the returned motion value. This remains the same between renders.\n   */\n  var value = useMotionValue(combineValues());\n  /**\n   * Create a function that will update the template motion value with the latest values.\n   * This is pre-bound so whenever a motion value updates it can schedule its\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\n   * in a single frame.\n   */\n\n  var updateValue = function updateValue() {\n    return value.set(combineValues());\n  };\n  /**\n   * Synchronously update the motion value with the latest values during the render.\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n   */\n\n\n  updateValue();\n  /**\n   * Subscribe to all motion values found within the template. Whenever any of them change,\n   * schedule an update.\n   */\n\n  useMultiOnChange(values, function () {\n    return sync.update(updateValue, false, true);\n  });\n  return value;\n}\n\nexport { useCombineMotionValues };","import { __read } from 'tslib';\nimport { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.js';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\nimport { useConstant } from '../utils/use-constant.js';\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * @library\n *\n * ```jsx\n * export function MyComponent() {\n *   const scale = useMotionValue(1)\n *\n *   return <Frame scale={scale} />\n * }\n * ```\n *\n * @motion\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\n\nfunction useMotionValue(initial) {\n  var value = useConstant(function () {\n    return motionValue(initial);\n  });\n  /**\n   * If this motion value is being used in static mode, like on\n   * the Framer canvas, force components to rerender when the motion\n   * value is updated.\n   */\n\n  var isStatic = useContext(MotionConfigContext).isStatic;\n\n  if (isStatic) {\n    var _a = __read(useState(initial), 2),\n        setLatest_1 = _a[1];\n\n    useEffect(function () {\n      return value.onChange(setLatest_1);\n    }, []);\n  }\n\n  return value;\n}\n\nexport { useMotionValue };","import { useEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.js';\n\nfunction useOnChange(value, callback) {\n  useEffect(function () {\n    if (isMotionValue(value)) return value.onChange(callback);\n  }, [callback]);\n}\n\nfunction useMultiOnChange(values, handler) {\n  useEffect(function () {\n    var subscriptions = values.map(function (value) {\n      return value.onChange(handler);\n    });\n    return function () {\n      return subscriptions.forEach(function (unsubscribe) {\n        return unsubscribe();\n      });\n    };\n  });\n}\n\nexport { useMultiOnChange, useOnChange };","import { __read } from 'tslib';\nimport { transform } from '../utils/transform.js';\nimport { useCombineMotionValues } from './use-combine-values.js';\nimport { useConstant } from '../utils/use-constant.js';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  var transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function (_a) {\n    var _b = __read(_a, 1),\n        latest = _b[0];\n\n    return transformer(latest);\n  });\n}\n\nfunction useListTransform(values, transformer) {\n  var latest = useConstant(function () {\n    return [];\n  });\n  return useCombineMotionValues(values, function () {\n    latest.length = 0;\n    var numValues = values.length;\n\n    for (var i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n\n    return transformer(latest);\n  });\n}\n\nexport { useTransform };","import React, { useState, useRef, ReactNode, useContext, useEffect } from \"react\";\nimport { motion, useViewportScroll, useTransform } from \"framer-motion\";\nimport { useIntersectionObserver } from \"@fremtind/jkl-react-hooks\";\nimport { a11yContext } from \"../../../contexts/a11yContext\";\n\nimport \"./MediaBox.scss\";\n\ninterface Props {\n    media: ReactNode;\n    rightAlign?: boolean;\n    caption?: string;\n}\n\nconst MediaBox: React.FC<Props> = ({ media, rightAlign, caption, children }) => {\n    const { prefersReducedMotion } = useContext(a11yContext);\n    const [elementTop, setElementTop] = useState(0);\n    const [isInViewport, setIsInViewport] = useState(false);\n    const ref = useRef<HTMLDivElement>(null);\n    const mediaRef = useRef<HTMLDivElement>(null);\n    const { scrollY } = useViewportScroll();\n\n    useEffect(() => {\n        const element = ref.current;\n        if (element) {\n            setElementTop(element.offsetTop);\n        }\n    }, [ref]);\n\n    useIntersectionObserver(\n        mediaRef,\n        (entires: IntersectionObserverEntry[]) => setIsInViewport(entires.some((entry) => entry.isIntersecting)),\n        () => undefined,\n        {\n            rootMargin: \"-175px 0px\",\n            threshold: [0.0, 1.0],\n        },\n    );\n\n    const y = useTransform(scrollY, [elementTop, elementTop + 1], [0, -0.3], {\n        clamp: false,\n    });\n    const isLongText = (children?.toString() || \"\").length > 90;\n\n    return (\n        <div ref={ref} className={`jkl-portal-media-box ${rightAlign ? \"jkl-portal-media-box--right\" : \"\"}`}>\n            <motion.figure\n                ref={mediaRef}\n                className={`jkl-portal-media-box__media ${isInViewport ? \"jkl-portal-media-box__media--in-view\" : \"\"}`}\n            >\n                {media}\n                {caption && <figcaption className=\"jkl-micro jkl-portal-media-box__caption\">{caption}</figcaption>}\n            </motion.figure>\n            <motion.div\n                style={{ y: prefersReducedMotion ? 0 : y }}\n                className={`jkl-portal-media-box__card ${isLongText ? \"jkl-portal-media-box__card--long-text\" : \"\"}`}\n            >\n                <p className={isLongText ? \"jkl-body\" : \"jkl-heading-2\"}>{children}</p>\n            </motion.div>\n        </div>\n    );\n};\n\nexport default MediaBox;\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport MediaBox from \"./MediaBox\";\n\ninterface Props {\n    asset: string;\n    alt: string;\n    rightAlign?: boolean;\n    caption?: string;\n}\n\nconst Picture: React.FC<Props> = ({ asset, alt, ...rest }) => {\n    const data = useStaticQuery(graphql`\n        query {\n            allImageSharp {\n                nodes {\n                    gatsbyImageData\n                }\n            }\n        }\n    `);\n\n    // @ts-ignore No available type for Sharp image data\n    const image = data.allImageSharp.nodes.find((node) =>\n        (node.gatsbyImageData.images.fallback.src as string).includes(asset),\n    );\n\n    return image ? <MediaBox media={<GatsbyImage image={image.gatsbyImageData} alt={alt} />} {...rest} /> : null;\n};\n\nexport default Picture;\n","import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nimport \"./HeroImage.scss\";\n\ninterface Props {\n    title: string;\n}\n\nconst HeroImage: React.FC<Props> = ({ title, children }) => {\n    return (\n        <div className=\"jkl-portal-fullView\">\n            <div className=\"jkl-portal-hero\">\n                <StaticImage src=\"./Assets/mountain.jpg\" placeholder=\"blurred\" className=\"\" alt=\"Fjellandskap\" />\n                <button\n                    onClick={() =>\n                        window?.scrollBy({\n                            top: window.innerHeight,\n                            behavior: \"smooth\",\n                        })\n                    }\n                    className=\"jkl-portal-hero__card\"\n                >\n                    <h1 className=\"jkl-title jkl-spacing-xl--bottom\">{title}</h1>\n                    <p className=\"jkl-body\">{children}</p>\n                    <div className=\"jkl-portal-hero__card__arrow jkl-title-small jkl-spacing-l--top\">↓</div>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport MediaBox from \"./MediaBox\";\nimport { withPrefix } from \"gatsby\";\ninterface Props {\n    src: string;\n    placeholder: string;\n    rightAlign?: boolean;\n    caption?: string;\n}\n\nconst VideoBox: React.FC<Props> = ({ src, placeholder, ...rest }) => {\n    return (\n        <MediaBox\n            media={\n                <video\n                    className=\"jkl-portal-media-box__video\"\n                    src={withPrefix(src)}\n                    poster={withPrefix(placeholder)}\n                    autoPlay\n                    muted\n                    loop\n                    tabIndex={-1}\n                />\n            }\n            {...rest}\n        />\n    );\n};\n\nexport default VideoBox;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport PictureBox from \"../../components/Documentation/Picture/PictureBox\";\nimport HeroImage from \"../../components/Documentation/Picture/HeroImage\";\nimport VideoBox from \"../../components/Documentation/Picture/VideoBox\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <HeroImage title=\"Bildebruk\" mdxType=\"HeroImage\">\n    Vi bruker bilder som virkemidler til å skape en stemning, understreke et poeng eller hjelpe brukeren med å navigere\n    i våre løsninger. Vi skal bruke bilder fremfor illustrasjoner og ikoner. Bruk bilder fra vår bildebank når du skal\n    bruke bilder i våre løsninger eller i en presentasjon.\n    </HeroImage>\n    <h2>{`Dette bør du tenke gjennom når du velger et bilde:`}</h2>\n    <p>{`Passer bildet med Fremtinds visjon? Hjelper bildet brukeren å forstå det du kommuniserer? Viser bildet produktet\neller tjenesten på en god måte? Tilfører bildet verdi til innholdet? Hva slags virkning har bildet på\nmottakeren?`}</p>\n    <div style={{\n      paddingBottom: \"15vh\"\n    }} />\n    <h2>{`Fotostil`}</h2>\n    <p>{`Fremtind har en todelt fotostil. Vi står enten på toppen av tinden, med full oversikt, eller på bakkeplan sammen med menneskene. Fotostilen er ærlig, ekte og upolert. Den er hverdagslig og jordnær, nettopp for å gi brukerne våre noe de kan kjenne seg igjen i. Fordi fargene vi bruker er nøkterne og stilrene, vil fotografier utdype identiteten med varme og følelser. Bruk gjerne bilder som henter farger fra Fremtinds støttefargepallett.`}</p>\n    <p>{`Bildene viser landskap eller situasjoner med mennesker i vante omgivelser. Vi unngår å bruke stockfoto eller oppstilte bilder, og vi bruker bilder av produkter med omhu.`}</p>\n    <p>{`I all hovedsak:`}</p>\n    <PictureBox alt=\"Fugleperspektiv av blåturkis sjø som bryter inn mot sandstrand\" asset=\"beach.jpg\" caption=\"Husk å kreditere rettighetseier\" mdxType=\"PictureBox\">\n    Bruk bilder tatt rett ovenfra eller rett forfra.\n    </PictureBox>\n    <PictureBox alt=\"Mennesker i retromoderne og industrielt kaféinteriør\" asset=\"cafe.jpg\" rightAlign mdxType=\"PictureBox\">\n    Velg upolerte og hverdagslige bilder.\n    </PictureBox>\n    <PictureBox alt=\"Sommerfoto. Smilende mørkhåret jente med rosa blomster uskarpt i bakgrunnen.\" asset=\"kid.jpg\" mdxType=\"PictureBox\">\n    Formidle varme og følelser.\n    </PictureBox>\n    <PictureBox alt=\"Fargerike golfballer og golfkølle på grønt gress\" asset=\"minigolf.jpg\" rightAlign mdxType=\"PictureBox\">\n    Bruk foto fremfor illustrasjoner og ikoner.\n    </PictureBox>\n    <PictureBox alt=\"Mor og baby mot naturbakgrunn ved soloppgang\" asset=\"mom.jpg\" mdxType=\"PictureBox\">\n    Velg landskap eller mennesker i omgivelser folk kan kjenne seg igjen i.\n    </PictureBox>\n    <div style={{\n      paddingBottom: \"15vh\"\n    }} />\n    <h2>{`Hvordan velge bilde?`}</h2>\n    <p>{`Når vi snakker om et konkret forsikringsprodukt, kan det være vanskelig å finne bilder som passer perfekt. Her er noen tips og retningslinjer for de ulike forsikringene. Felles for kategoribildene er at vi ønsker å fokusere på en situasjon som oppstår rundt eller i samspill med produktet, i stedet for selve produktet.`}</p>\n    <div style={{\n      paddingBottom: \"15vh\"\n    }} />\n    <PictureBox alt=\"Interiørfoto av gutt som ser på smarttelefon foran PC og nettbrett\" asset=\"schoolkid.jpg\" mdxType=\"PictureBox\">\n    <b>Skadeforsikring</b>\n    <br />\n    Vi viser folk og tingene deres i samspill, heller enn å ta bilde av et produkt.\n    </PictureBox>\n    <PictureBox alt=\"Bilinteriør.Kvinne som kjører bil i by. Øynene vises i bakspeilet\" asset=\"driver.jpg\" rightAlign mdxType=\"PictureBox\">\n    <b>Bilforsikring</b>\n    <br />\n    Bruk bilder av situasjoner i og rundt bilen. I trafikken, ved av- og pålessing, av folk og ting i nærheten av bilen,\n    eller når de steller bilen sin. Kan hende pakker de til ferie, henter på trening, er på handletur eller vasker\n    bilen. Situasjonen er viktigere enn bilen, bildet skal ikke oppfattes som reklame for en bestemt biltype. Vær\n    oppmerksom på at bilen skal kjøre på norske veier.\n    </PictureBox>\n    <PictureBox alt=\"Kvinne med trillekoffert foran rødt tog på jernbanestasjon\" asset=\"togpendler.jpg\" mdxType=\"PictureBox\">\n    <b>Reiseforsikring</b>\n    <br />\n    Når det gjelder reiseforsikring kan vi bruke bilder fra utlandet, men da gjerne i typiske situasjoner man havner i\n    som turist. Her kan vi appellere til ulike typer, for eksempel den eventyrlystne, storbyturisten, solslikkeren eller\n    den lokale turisten.\n    <br />\n    <br /> Merk: Fremtind er et bærekraftig selskap og vi unngår å bruke bilder av fly, cruiseskip eller aktiviteter som\n    ødelegger natur eller lokalsamfunn.\n    </PictureBox>\n    <PictureBox alt=\"Hundevalp på et pledd i en sofa\" asset=\"dogs.jpg\" rightAlign mdxType=\"PictureBox\">\n    <b>Dyreforsikring</b>\n    <br />\n    Dyr har sin egen personlighet og de kan gjerne eie bildet alene, men det er også fint å vise samspillet mellom dyr\n    og mennesker. Dyr egner seg fint til bilder tatt “rett ovenfra”.\n    </PictureBox>\n    <div style={{\n      paddingBottom: \"15vh\"\n    }} />\n    <h2>{`Lys og farger`}</h2>\n    <p>{`Vi vil at atmosfæren i bildene skal virke inviterende og virkelighetsnær. For å skape det bruker vi dagslys, eller naturlig lyssetting og fargekorrigering. Vi bruker ikke effekter eller filtre på bildene våre. Alle bildene i Fremtinds bildedatabase er redigert og fargekorrigert, slik at de oppfyller kravene til bildestilen. De skal oppleves som like`}</p>\n    <div style={{\n      paddingBottom: \"15vh\"\n    }} />\n    <VideoBox src=\"/assets/video/marius-compressed.mp4\" placeholder=\"/assets/img/marius.jpg\" mdxType=\"VideoBox\">\n    <b>Bevegelse</b>\n    <br /> For å skape ekstra liv kan man legge på enkle effekter som parallakse, uskarphet og elevasjon. Vi kan også bruke\n    animerte bilder, så lenge animasjonen tilfører noe og ikke oppleves som forstyrrende.\n    </VideoBox>\n    <div style={{\n      paddingBottom: \"15vh\"\n    }} />\n    <h2>{`Responsivitet`}</h2>\n    <p>{`Bildene vil ofte brukes på responsive nettsider. Det betyr at både format og størrelse kan bli endret, og andre elementer kan bytte plass i forhold til bildet. Hvis vi bruker godt med rom rundt hovedmotivet i bildet, blir det lettere å plassere designelementer over bildet. Da får vi også et sikkerhetsrom rundt hovedmotivet, slik at det ikke blir beskåret når vi skalerer.`}</p>\n    <h3>{`Overlappende elementer`}</h3>\n    <p>{`Vi kan legge andre elementer oppå bilder så lenge vi sørger for at kontrasten er ivaretatt. Pass på at det elementet som overlapper bildet ikke dekker over hovedmotivet.`}</p>\n    <h2>{`Bildebank`}</h2>\n    <p>{`I Fremtind har vi en bildebank, den finner du på intranettet. Ikke bruk bilder vi ikke har lisens på og husk fotokreditering der det kreves.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["setProgress","offset","maxOffset","value","set","viewportScrollValues","getViewportScrollOffsets","xOffset","window","pageXOffset","yOffset","pageYOffset","xMaxOffset","document","body","clientWidth","innerWidth","yMaxOffset","clientHeight","innerHeight","hasListeners","addEventListeners","values","getOffsets","update","updateScrollValues","_a","scrollX","scrollY","scrollXProgress","scrollYProgress","passive","useViewportScroll","getMixer","v","mix","isCustomValueType","undefined","useCombineMotionValues","combineValues","initial","useContext","MotionConfigContext","isStatic","setLatest_1","useState","useEffect","onChange","useMotionValue","updateValue","handler","subscriptions","map","forEach","unsubscribe","useMultiOnChange","useTransform","input","inputRangeOrTransformer","outputRange","options","transformer","args","_i","arguments","length","useImmediate","Array","isArray","argOffset","inputValue","inputRange","interpolator","interpolate","mixer","transform","useListTransform","latest","numValues","i","get","media","rightAlign","caption","children","prefersReducedMotion","a11yContext","elementTop","setElementTop","isInViewport","setIsInViewport","ref","useRef","mediaRef","element","current","offsetTop","useIntersectionObserver","entires","some","entry","isIntersecting","rootMargin","threshold","y","clamp","isLongText","toString","className","motion","style","asset","alt","rest","image","useStaticQuery","allImageSharp","nodes","find","node","gatsbyImageData","images","fallback","src","includes","G","title","S","placeholder","onClick","scrollBy","top","behavior","withPrefix","poster","autoPlay","muted","loop","tabIndex","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","paddingBottom","PictureBox","isMDXComponent"],"sourceRoot":""}