{"version":3,"sources":["webpack://@fremtind/portal/../packages/react-hooks/src/useReducedMotion/useReducedMotion.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/animation.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/useClickOutside.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScreen/state.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useMutationObserver/useMutationObserver.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScreen/useScreen.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/useFocusOutside.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useIntersectionObserver/useIntersectionObserver.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useKeyListener.ts","webpack://@fremtind/portal/../packages/react-hooks/documentation/reducedMotion.mdx","webpack://@fremtind/portal/../packages/react-hooks/documentation/ReducedMotionExample.tsx"],"names":["PREFERS_REDUCED_MOTION","useReducedMotion","useState","window","matchMedia","matches","prefersReducedMotion","setPrefersReducedMotion","useEffect","mediaQueryList","listener","event","addListener","removeListener","useAnimatedHeight","isOpen","options","raf1","useRef","raf2","elementRef","firstRender","handleTransitionEnd","element","getElement","target","removeAttribute","onTransitionEnd","runAnimation","useCallback","current","onTransitionStart","style","display","overflow","height","scrollHeight","requestAnimationFrame","useLayoutEffect","addEventListener","removeEventListener","r1","r2","cancelAnimationFrame","el","useClickOutside","ref","fn","handleClickOutside","contains","document","ActionTypes","hasWindowWithMutationObserver","MutationObserver","useMutationObserver","targetRef","onObservation","config","observerRef","observer","disconnect","observe","actionTypes","resized","setDeviceSize","width","isSmallDevice","breakpoints","isMediumDevice","isLargeDevice","isXlDevice","isPortrait","isLandscape","inner","initialState","init","innerWidth","innerHeight","reducer","state","type","useScreen","useReducer","device","deviceDispatch","handleScreenChange","useScrollIntoView","timeout","autoScroll","behavior","scrollIntoView","scrollFn","setTimeout","clearTimeout","useFocusOutside","handleFocusOutside","hasWindowWithIntersectionObserver","IntersectionObserver","useIntersectionObserver","onIntersect","fallback","useKeyListener","keys","handleKeyDown","includes","key","name","ScreenContext","React","ReducedMotionExample","useContext","className","Provider","value","_frontmatter","Ingress","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---packages-react-hooks-documentation-reduced-motion-mdx-e3573c64e128f2f937e9.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst PREFERS_REDUCED_MOTION = \"(prefers-reduced-motion: no-preference)\";\nconst getInitialState = () => {\n    if (typeof window !== \"undefined\" && window.matchMedia) {\n        return !window.matchMedia(PREFERS_REDUCED_MOTION).matches;\n    }\n    return false;\n};\n\nexport const useReducedMotion = (): boolean => {\n    const [prefersReducedMotion, setPrefersReducedMotion] = useState(getInitialState());\n\n    useEffect(() => {\n        let mediaQueryList: MediaQueryList;\n        let listener: (event: MediaQueryListEvent) => void;\n        if (typeof window !== \"undefined\" && window.matchMedia) {\n            mediaQueryList = window.matchMedia(PREFERS_REDUCED_MOTION);\n            listener = (event: MediaQueryListEvent) => setPrefersReducedMotion(!event.matches);\n            mediaQueryList?.addListener(listener);\n        }\n\n        return () => {\n            mediaQueryList?.removeListener(listener);\n        };\n    }, []);\n\n    return prefersReducedMotion;\n};\n","import { MutableRefObject, useEffect, useRef, RefObject, useCallback, useLayoutEffect } from \"react\";\nimport { useReducedMotion } from \"./useReducedMotion/useReducedMotion\";\n\ninterface HTMLElementOrCoreToggleElement<T extends HTMLElementOrCoreToggleElement<T>> extends HTMLElement {\n    el?: T; // Hack and workaround until https://github.com/nrkno/custom-element-to-react/pull/17 has landed\n}\n\ninterface Options {\n    onTransitionStart?: (isOpening: boolean) => void;\n    onTransitionEnd?: (isOpen: boolean) => void;\n}\n\nexport function useAnimatedHeight<T extends HTMLElement>(\n    isOpen: boolean,\n    options?: Options,\n): [RefObject<T>, () => void] {\n    const raf1 = useRef<number>();\n    const raf2 = useRef<number>();\n    const elementRef = useRef<T>(null);\n    const firstRender = useRef<boolean>(true);\n    const prefersReducedMotion = useReducedMotion();\n\n    function handleTransitionEnd(event: TransitionEvent) {\n        const element = getElement(elementRef);\n\n        // Ignore bubbling transitions from within container\n        if (element && event.target === element) {\n            element.removeAttribute(\"style\");\n            options?.onTransitionEnd?.(isOpen);\n        }\n    }\n\n    const runAnimation = useCallback(() => {\n        if (firstRender.current) {\n            return; // Do not play animation on first render\n        }\n\n        options?.onTransitionStart?.(isOpen);\n\n        if (prefersReducedMotion) {\n            options?.onTransitionEnd?.(isOpen); // make sure to call callback when animation is off\n            return;\n        }\n\n        const element = getElement(elementRef);\n        if (element) {\n            element.style.display = \"block\";\n            element.style.overflow = \"hidden\";\n            if (isOpen) {\n                element.style.height = \"0\";\n                element.style.height = `${element.scrollHeight}px`;\n            } else {\n                // If the scrollHeight is 0 it means that we are transitioning from height 0 -> 0.\n                // This causes the \"transitionend\"-event to never fire and the element gets stuck with\n                // style: height: 0; display: block; overflow:hidden\n                if (element.scrollHeight === 0) {\n                    element.removeAttribute(\"style\");\n                    return;\n                }\n\n                element.style.height = `${element.scrollHeight}px`;\n\n                raf1.current = requestAnimationFrame(() => {\n                    raf2.current = requestAnimationFrame(() => {\n                        element.style.height = `${0}px`;\n                    });\n                });\n            }\n        }\n    }, [isOpen]);\n\n    useLayoutEffect(() => {\n        runAnimation();\n    }, [isOpen, runAnimation]);\n\n    useEffect(() => {\n        const element = getElement(elementRef);\n        if (element) {\n            element.addEventListener(\"transitionend\", handleTransitionEnd);\n        }\n\n        return () => {\n            if (element) {\n                element.removeEventListener(\"transitionend\", handleTransitionEnd);\n            }\n        };\n    }, [isOpen]);\n\n    useEffect(() => {\n        const r1 = raf1.current;\n        const r2 = raf2.current;\n        firstRender.current = false;\n        return () => {\n            r1 && cancelAnimationFrame(r1);\n            r2 && cancelAnimationFrame(r2);\n        };\n    }, [raf1, raf2]);\n\n    return [elementRef, runAnimation];\n}\n\nfunction getElement(elementRef: MutableRefObject<HTMLElementOrCoreToggleElement<HTMLElement> | null>) {\n    // Workaround to handle custom elements from NRK Core components until this lands:\n    // https://github.com/nrkno/custom-element-to-react/pull/17\n    return elementRef.current && (elementRef.current.el || elementRef.current);\n}\n","import { RefObject, useEffect } from \"react\";\n\nexport function useClickOutside(ref: RefObject<HTMLElement> | null, fn: () => void) {\n    function handleClickOutside(event: MouseEvent) {\n        if (ref?.current && !ref.current.contains(event.target as Node)) {\n            fn();\n        }\n    }\n\n    useEffect(() => {\n        if (ref) {\n            document && document.addEventListener(\"click\", handleClickOutside);\n        }\n        return () => {\n            if (ref) {\n                document && document.removeEventListener(\"click\", handleClickOutside);\n            }\n        };\n    });\n}\n","import { breakpoints } from \"@fremtind/jkl-core\";\n\nexport interface State {\n    isSmallDevice: boolean;\n    isMediumDevice: boolean;\n    isLargeDevice: boolean;\n    isXlDevice: boolean;\n    isLandscape: boolean;\n    isPortrait: boolean;\n    inner: {\n        height: number;\n        width: number;\n    };\n}\n\nenum ActionTypes {\n    resized = \"WINDOW_RESIZED\",\n}\n\ninterface Action {\n    type: ActionTypes;\n    width: number;\n    height: number;\n}\n\nexport const actionTypes = {\n    resized: ActionTypes.resized,\n};\n\nconst setDeviceSize = (width: number, height: number) => ({\n    isSmallDevice: width <= breakpoints.small,\n    isMediumDevice: width > breakpoints.small && width < breakpoints.medium,\n    isLargeDevice: width > breakpoints.medium && width < breakpoints.large,\n    isXlDevice: width > breakpoints.large,\n    isPortrait: height >= width,\n    isLandscape: height < width,\n    inner: {\n        height,\n        width,\n    },\n});\n\nexport const initialState = {\n    isSmallDevice: false,\n    isMediumDevice: false,\n    isLargeDevice: false,\n    isXlDevice: false,\n    isLandscape: false,\n    isPortrait: false,\n    inner: {\n        height: 0,\n        width: 0,\n    },\n};\n\nexport const init = () => {\n    const width = typeof window !== \"undefined\" ? window.innerWidth : 0;\n    const height = typeof window !== \"undefined\" ? window.innerHeight : 0;\n    return setDeviceSize(width, height);\n};\n\nexport const reducer = (state: State, { type, width, height }: Action) => {\n    switch (type) {\n        case actionTypes.resized:\n            return {\n                ...state,\n                ...setDeviceSize(width, height),\n            };\n    }\n};\n","import { useEffect, useRef, RefObject } from \"react\";\n\nconst hasWindowWithMutationObserver = () => typeof window !== \"undefined\" && typeof MutationObserver !== \"undefined\";\n\nexport const useMutationObserver = (\n    targetRef: RefObject<HTMLElement>,\n    onObservation: MutationCallback,\n    config?: Partial<MutationObserverInit>,\n) => {\n    const observerRef = useRef<MutationObserver>(null);\n\n    useEffect(() => {\n        let observer = observerRef.current;\n\n        if (hasWindowWithMutationObserver()) {\n            const target = targetRef.current;\n\n            if (observer) {\n                observer.disconnect();\n            }\n\n            observer = new MutationObserver(onObservation);\n\n            if (target) {\n                observer.observe(target, config);\n            }\n        }\n        return () => {\n            if (hasWindowWithMutationObserver() && observer) {\n                observer.disconnect();\n            }\n        };\n    }, [targetRef, onObservation, config]);\n};\n","import { useEffect, useReducer } from \"react\";\nimport { reducer, initialState, init, actionTypes } from \"./state\";\n\nexport const useScreen = () => {\n    const [device, deviceDispatch] = useReducer(reducer, initialState, init);\n\n    const handleScreenChange = () =>\n        requestAnimationFrame(() =>\n            deviceDispatch({ type: actionTypes.resized, width: window.innerWidth, height: window.innerHeight }),\n        );\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"resize\", handleScreenChange);\n        }\n        return () => {\n            if (typeof window !== \"undefined\") {\n                window.removeEventListener(\"resize\", handleScreenChange);\n            }\n        };\n    }, []);\n\n    return { ...device };\n};\n","import { useEffect, RefObject } from \"react\";\n\ntype ValueOf<T> = T[keyof T];\n\ninterface Props {\n    ref: RefObject<ValueOf<HTMLElementTagNameMap>>;\n    timeout?: number;\n    autoScroll?: boolean;\n    options?: ScrollIntoViewOptions;\n}\n\nexport const useScrollIntoView = ({ ref, timeout = 0, autoScroll = true, options = { behavior: \"smooth\" } }: Props) => {\n    const scrollIntoView = () => {\n        if (ref?.current) {\n            ref.current.scrollIntoView(options);\n        }\n    };\n    useEffect(() => {\n        if (!autoScroll) {\n            return;\n        }\n        const scrollFn = setTimeout(scrollIntoView, timeout);\n        return () => clearTimeout(scrollFn);\n    }, [ref, timeout, autoScroll]);\n\n    return [scrollIntoView];\n};\n","import { RefObject, useEffect } from \"react\";\n\nexport function useFocusOutside(ref: RefObject<HTMLElement> | null, fn: () => void) {\n    function handleFocusOutside(event: FocusEvent) {\n        if (ref?.current && !ref.current.contains(event.target as Node)) {\n            fn();\n        }\n    }\n\n    useEffect(() => {\n        if (ref) {\n            document && document.addEventListener(\"focusin\", handleFocusOutside);\n        }\n        return () => {\n            if (ref) {\n                document && document.removeEventListener(\"focusin\", handleFocusOutside);\n            }\n        };\n    });\n}\n","import { useEffect, useRef, RefObject } from \"react\";\n\nconst hasWindowWithIntersectionObserver = () =>\n    typeof window !== \"undefined\" && typeof IntersectionObserver !== \"undefined\";\n\nexport const useIntersectionObserver = (\n    targetRef: RefObject<HTMLElement | SVGElement>,\n    onIntersect: IntersectionObserverCallback,\n    fallback: VoidFunction,\n    options?: Partial<IntersectionObserverInit>,\n) => {\n    const observerRef = useRef<IntersectionObserver>(null);\n\n    useEffect(() => {\n        let observer = observerRef.current;\n        if (hasWindowWithIntersectionObserver()) {\n            const target = targetRef.current;\n\n            if (observer) {\n                observer.disconnect();\n            }\n\n            observer = new IntersectionObserver(onIntersect, options);\n\n            if (target) {\n                observer.observe(target);\n            }\n        } else {\n            fallback();\n        }\n        return () => {\n            if (hasWindowWithIntersectionObserver() && observer) {\n                observer.disconnect();\n            }\n        };\n    }, [targetRef, onIntersect, fallback, options]);\n};\n","import { RefObject, useEffect } from \"react\";\n\nexport function useKeyListener(\n    ref: RefObject<HTMLElement> | null,\n    keys: string[] | string | null,\n    fn: (event: KeyboardEvent) => void,\n) {\n    if (typeof keys === \"string\") {\n        keys = [keys];\n    }\n    function handleKeyDown(event: KeyboardEvent) {\n        if (keys && !keys.includes(event.key)) {\n            return;\n        }\n        fn(event);\n    }\n\n    useEffect(() => {\n        const element = ref && ref.current;\n        if (element) {\n            element.addEventListener(\"keydown\", handleKeyDown);\n        }\n        return () => {\n            if (element) {\n                element.removeEventListener(\"keydown\", handleKeyDown);\n            }\n        };\n    });\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport ReducedMotionExample from \"./ReducedMotionExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    useReducedMotion gjør at man kan sjekke om brukeren har satt preferedReducedMotion, dermed kan vi unngå å gjøre\n    js-animasjoner, ikke bare css-animasjoner.\n    </Ingress>\n    <h2>{`Bruk`}</h2>\n    <p>{`Denne baserer seg på en event listener, så som andre hooks med eventlyttere bør denne implementeres så høyt opp i applikasjonen din som nødvendig for å unngå å lage for mange listeners. Bruk gjerne en React Context i stedet for å strø flere av denne komponenten rundt der man gjør JS-animasjoner. `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\"\n      }}>{`Les om reduced motion på mdn`}</a>{`.`}</p>\n    <p>{`Husk at reduced motion ikke betyr at `}<em parentName=\"p\">{`all`}</em>{` bevegelse må bort, men det skal være enkle, forklarende bevelgelser. Unngå store og kompliserte bevelgelser. Unngå også bevelgelser som ikke er initiert av brukeren. Parallax-effekter skal også skrus av. Ta en titt på `}<a parentName=\"p\" {...{\n        \"href\": \"/\"\n      }}>{`forsiden`}</a>{` og `}<a parentName=\"p\" {...{\n        \"href\": \"/profil/bildebruk\"\n      }}>{`bildesiden`}</a></p>\n    <ReducedMotionExample mdxType=\"ReducedMotionExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React, { useContext } from \"react\";\nimport { useReducedMotion } from \"../src\";\n\ninterface State {\n    prefersReducedMotion: boolean;\n}\n\nconst ScreenContext = React.createContext<State>({\n    prefersReducedMotion: false,\n});\n\nconst ReducedMotionExample = () => {\n    const { prefersReducedMotion } = useContext(ScreenContext);\n\n    return (\n        <section className=\"hooks-example key-listener-example jkl-spacing--bottom-3\">\n            <h2 className=\"jkl-h2 jkl-spacing--bottom-2\">{`Din dings har en redusert bevegelse ${\n                prefersReducedMotion ? \"på\" : \"av\"\n            }`}</h2>\n        </section>\n    );\n};\n\nconst Provider = () => {\n    const prefersReducedMotion = useReducedMotion();\n\n    return (\n        <ScreenContext.Provider value={{ prefersReducedMotion }}>\n            <ReducedMotionExample />\n        </ScreenContext.Provider>\n    );\n};\n\nexport default Provider;\n"],"sourceRoot":""}