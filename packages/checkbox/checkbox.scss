@charset "UTF-8";
@use "sass:string";
@use "@fremtind/jkl-core/jkl";
@use "@fremtind/jkl-core/jkl/colors";

@include jkl.light-mode-variables {
    --jkl-checkbox-color: #{jkl.$color-granitt};
    --jkl-checkbox-background-color: #{jkl.$color-snohvit};
    --jkl-checkbox-focus-color: #{jkl.$color-granitt};
    --jkl-checkbox-focus-background-color: #{jkl.$color-hvit};
    --jkl-checkbox-error-background-color: #{jkl.$color-feil};
    --jkl-checkbox-error-check-color: #{jkl.$color-granitt};
    --jkl-checkbox-disabled-color: #{jkl.$color-stein};
    --jkl-checkbox-box-default-color: #{jkl.$color-stein};
}

@include jkl.dark-mode-variables {
    --jkl-checkbox-color: #{jkl.$color-snohvit};
    --jkl-checkbox-background-color: transparent;
    --jkl-checkbox-focus-color: #{jkl.$color-snohvit};
    --jkl-checkbox-focus-background-color: #{jkl.$color-skifer};
    --jkl-checkbox-error-background-color: #{jkl.$color-feil};
    --jkl-checkbox-error-check-color: #{jkl.$color-granitt};
    --jkl-checkbox-disabled-color: #{jkl.$color-stein};
    --jkl-checkbox-box-default-color: #{jkl.$color-svaberg};
}

@include jkl.comfortable-density-variables {
    @include jkl.declare-font-variables("jkl-checkbox", "body");

    $_checkbox-height: jkl.rem(48px);
    $_checkbox-box-size: jkl.rem(24px);
    $_checkbox-line-height: jkl.rem(32px);

    --jkl-checkbox-height: #{$_checkbox-height};
    --jkl-checkbox-box-size: #{$_checkbox-box-size};
    --jkl-checkbox-line-height: #{$_checkbox-line-height};
    --jkl-checkbox-mark-margin: #{jkl.rem(8px)} #{jkl.$spacing-xs} #{jkl.rem(8px)} 0;
    --jkl-checkbox-text-translate: translate3d(0, #{jkl.rem(1px)}, 0);
    --jkl-checkbox-text-margin: #{(($_checkbox-height - $_checkbox-line-height) * 0.5)} 0;

    @include jkl.small-device {
        $_checkbox-height--mobile: jkl.rem(40px);
        $_checkbox-box-size--mobile: jkl.rem(24px);
        $_checkbox-line-height--mobile: jkl.rem(28px);

        --jkl-checkbox-height: #{$_checkbox-height--mobile};
        --jkl-checkbox-box-size: #{$_checkbox-box-size--mobile};
        --jkl-checkbox-line-height: #{$_checkbox-line-height--mobile};
        --jkl-checkbox-text-translate: translate3d(0, 0, 0);
        --jkl-checkbox-text-margin: #{(($_checkbox-height--mobile - $_checkbox-line-height--mobile) * 0.5)} 0;
    }
}

@include jkl.compact-density-variables {
    @include jkl.declare-font-variables("jkl-checkbox", "small");

    $_checkbox-height--compact: jkl.rem(28px);
    $_checkbox-box-size--compact: jkl.rem(18px);
    $_checkbox-line-height--compact: jkl.rem(24px);

    --jkl-checkbox-height: #{$_checkbox-height--compact};
    --jkl-checkbox-box-size: #{$_checkbox-box-size--compact};
    --jkl-checkbox-line-height: #{$_checkbox-line-height--compact};
    --jkl-checkbox-mark-margin: #{jkl.rem(4px)} #{jkl.$spacing-xs} #{jkl.rem(4px)} 0;
    --jkl-checkbox-text-translate: translate3d(0, 0, 0);
    --jkl-checkbox-text-margin: #{(($_checkbox-height--compact - $_checkbox-line-height--compact) * 0.5)} 0;
}

$_checkbox-checked-animation-name: jkl-checkbox-checked-#{string.unique-id()};
$_checkbox-indeterminate-animation-name: jkl-checkbox-indeterminate-#{string.unique-id()};

@keyframes #{$_checkbox-checked-animation-name} {
    0% {
        width: 0;
        height: 0;
    }

    40% {
        width: 18%;
        height: 0;
    }

    100% {
        width: 18%;
        height: 58%;
    }
}

@keyframes #{$_checkbox-indeterminate-animation-name} {
    0% {
        width: 0;
    }

    100% {
        width: 66%;
    }
}

.jkl-checkbox {
    @include jkl.use-font-variables("jkl-checkbox");

    display: flex;
    flex-wrap: wrap;
    min-height: var(--jkl-checkbox-height);
    color: var(--jkl-checkbox-color);
    position: relative;

    &__input {
        // Hide native checkbox
        opacity: 0;
        position: absolute;
        // Position the hidden input so that Cypress can hit it without it being obscured by the visual checkbox
        top: -6px;

        // Checked state:
        &:checked {
            + .jkl-checkbox__label .jkl-checkbox__check-mark::after {
                animation: $_checkbox-checked-animation-name jkl.timing("productive") ease-in-out forwards;
                opacity: 1;
            }
        }

        // Indeterminate state:
        &:indeterminate:not(:checked) {
            + .jkl-checkbox__label .jkl-checkbox__indeterminate-mark::after {
                animation: $_checkbox-indeterminate-animation-name jkl.timing("productive") ease-in-out forwards;
                opacity: 1;
            }
        }

        // Focused state:
        html:not([data-mousenavigation]) &:focus + .jkl-checkbox__label {
            color: var(--jkl-checkbox-focus-color);

            & > .jkl-checkbox__mark::before {
                box-shadow: 0 0 0 jkl.rem(2px) var(--jkl-checkbox-focus-color);

                @include jkl.forced-colors-mode {
                    border: 4px double ButtonText;
                }
            }

            & > .jkl-checkbox__mark {
                background-color: var(--jkl-checkbox-focus-background-color);
            }
        }

        // Disabled state:
        &:disabled + .jkl-checkbox__label {
            color: var(--jkl-checkbox-disabled-color);

            &:hover .jkl-checkbox__mark {
                box-shadow: inset 0 0 0 jkl.rem(1px) currentColor, 0 0 0 jkl.rem(1px) transparent;
            }
        }
    }

    &__label {
        display: flex;
        min-width: 0;
        max-width: 100%;
        cursor: pointer;
        flex-shrink: 0;

        &:hover {
            color: var(--jkl-checkbox-focus-color);

            .jkl-checkbox__mark {
                box-shadow: inset 0 0 0 jkl.rem(1px) currentColor, 0 0 0 jkl.rem(1px) currentColor;

                @include jkl.forced-colors-mode {
                    &::before {
                        border: 2px solid ButtonText;
                        position: absolute;
                        inset: jkl.rem(-1px) jkl.rem(-1px) jkl.rem(-1px) jkl.rem(-1px);
                    }
                }
            }
        }

        &:active {
            color: var(--jkl-checkbox-color);

            .jkl-checkbox__mark {
                box-shadow: inset 0 0 0 jkl.rem(1px) currentColor, 0 0 0 jkl.rem(1px) transparent;
                background-color: var(--jkl-checkbox-focus-background-color);
            }
        }
    }

    &__text {
        margin: var(--jkl-checkbox-text-margin);
        transform: var(--jkl-checkbox-text-translate);

        @include jkl.motion;
        transition-property: color;
    }

    &__mark {
        box-sizing: border-box;
        position: relative;
        height: var(--jkl-checkbox-box-size);
        width: var(--jkl-checkbox-box-size);

        margin: var(--jkl-checkbox-mark-margin);
        align-self: center;
        flex-shrink: 0; // Don't allow the mark to shrink in case of really long text

        outline: none;
        border-radius: 0; // fixes rounded corners in iOS Safari
        box-shadow: inset 0 0 0 jkl.rem(1px) currentColor, 0 0 0 jkl.rem(1px) transparent;

        @include jkl.motion;
        transition-property: background-color, box-shadow;

        // This is the basis of the focus ring
        &::before {
            content: "";
            position: absolute;
            inset: jkl.rem(-2px) jkl.rem(-2px) jkl.rem(-2px) jkl.rem(-2px);
        }

        @include jkl.forced-colors-mode {
            outline: revert;
            border: 1px solid ButtonText;
        }
    }

    // This is the check marker
    &__check-mark {
        &::after {
            content: "";
            position: absolute;
            transform-origin: bottom left;
            bottom: 42%;
            left: 18%;

            display: block;
            width: 18%;
            height: 58%;
            transform: rotate(45deg);

            border: solid jkl.rem(2px) currentColor;
            border-left-width: 0;
            border-top-width: 0;

            opacity: 0;
            @include jkl.motion;
            transition-property: opacity, border-color;

            @include jkl.forced-colors-mode {
                border-color: ButtonText;
            }
        }
    }

    // This is the indeterminate marker
    &__indeterminate-mark {
        &::after {
            --width: 66%;
            --thickness: #{jkl.rem(2px)};

            content: "";
            position: absolute;
            bottom: calc(50% - (var(--thickness) / 2));
            left: calc((100% - var(--width)) / 2);

            display: block;
            width: var(--width);

            border-bottom: solid var(--thickness) currentColor;

            opacity: 0;
            @include jkl.motion;
            transition-property: opacity, border-color;

            @include jkl.forced-colors-mode {
                border-color: ButtonText;
            }
        }
    }

    &--inline {
        display: inline-flex;

        &:not(:last-of-type) {
            margin-right: jkl.$spacing-l;
        }
    }

    &--error {
        .jkl-checkbox__mark,
        & > .jkl-checkbox__label:active > .jkl-checkbox__mark,
        html:not([data-mousenavigation]) & > .jkl-checkbox__input:focus + .jkl-checkbox__label > .jkl-checkbox__mark {
            background-color: var(--jkl-checkbox-error-background-color);
        }

        .jkl-checkbox__indeterminate-mark::after,
        .jkl-checkbox__check-mark::after {
            border-color: var(--jkl-checkbox-error-check-color);
        }
    }
}
