@use "~@fremtind/jkl-core/jkl";
@use "~@fremtind/jkl-core/variables/colors";

@import "~@fremtind/jkl-core/mixins/_all.scss";
@import "~@fremtind/jkl-core/_functions.scss";

$checkbox-height: rem(48px);
$checkbox-box-size: rem(24px);
$checkbox-line-height: rem(32px);

$checkbox-height--compact: rem(40px);
$checkbox-box-size--compact: rem(18px);
$checkbox-line-height--compact: rem(28px);

$checkbox-color: jkl.$color-granitt;
$checkbox-background-color: jkl.$color-snohvit;
$checkbox-focus-color: jkl.$color-granitt;
$checkbox-focus-background-color: jkl.$color-hvit;
$checkbox-error-background-color: colors.varslingsfarge("feil");
$checkbox-error-check-color: jkl.$color-granitt;
$checkbox-disabled-color: jkl.$color-stein;
$checkbox-box-default-color: jkl.$color-stein;

$checkbox-color--inverted: jkl.$color-snohvit;
$checkbox-background-color--inverted: transparent;
$checkbox-focus-color--inverted: jkl.$color-snohvit;
$checkbox-focus-background-color--inverted: jkl.$color-svart;
$checkbox-disabled-color--inverted: jkl.$color-stein;
$checkbox-box-default-color--inverted: jkl.$color-svaberg;

@include jkl.helper-light-mode-variables {
    --checkbox-color: #{$checkbox-color};
    --checkbox-background-color: #{$checkbox-background-color};
    --checkbox-focus-color: #{$checkbox-focus-color};
    --checkbox-focus-background-color: #{$checkbox-focus-background-color};
    --checkbox-error-background-color: #{$checkbox-error-background-color};
    --checkbox-error-check-color: #{$checkbox-error-check-color};
    --checkbox-disabled-color: #{$checkbox-disabled-color};
    --checkbox-box-default-color: #{$checkbox-box-default-color};
}

@include jkl.helper-dark-mode-variables {
    --checkbox-color: #{$checkbox-color--inverted};
    --checkbox-background-color: #{$checkbox-background-color--inverted};
    --checkbox-focus-color: #{$checkbox-focus-color--inverted};
    --checkbox-focus-background-color: #{$checkbox-focus-background-color--inverted};
    --checkbox-error-background-color: #{$checkbox-error-background-color};
    --checkbox-error-check-color: #{$checkbox-error-check-color};
    --checkbox-disabled-color: #{$checkbox-disabled-color--inverted};
    --checkbox-box-default-color: #{$checkbox-box-default-color--inverted};
}

@keyframes jkl-checkbox-checked-animation {
    0% {
        width: 0;
        height: 0;
    }

    40% {
        width: 18%;
        height: 0;
    }

    100% {
        width: 18%;
        height: 58%;
    }
}

@mixin compact-design {
    min-height: $checkbox-height--compact;

    .jkl-checkbox__check-mark {
        height: $checkbox-box-size--compact;
        width: $checkbox-box-size--compact;
        margin: (($checkbox-height--compact - $checkbox-box-size--compact) * 0.5) 0;
        margin-right: jkl.$spacing-xs;
    }
    .jkl-checkbox__check-text {
        margin: (($checkbox-height--compact - $checkbox-line-height--compact) * 0.5) 0;
        transform: translate3d(0, 0, 0);
    }
}

.jkl-checkbox {
    @include jkl.text-style("body");
    display: flex;
    flex-wrap: wrap;
    min-height: $checkbox-height;
    color: $checkbox-color;
    color: var(--checkbox-color);

    &__input {
        // Hide native checkbox
        opacity: 0;
        position: absolute;

        // Checked state:
        &:checked {
            + .jkl-checkbox__label > .jkl-checkbox__check-mark::after {
                animation: jkl-checkbox-checked-animation 150ms ease-in-out forwards;
                opacity: 1;
            }
        }

        // Focused state:
        html:not([data-mousenavigation]) &:focus + .jkl-checkbox__label {
            color: $checkbox-focus-color;
            color: var(--checkbox-focus-color);

            & > .jkl-checkbox__check-mark::before {
                box-shadow: 0 0px 0 rem(2px) $checkbox-focus-color;
                box-shadow: 0 0px 0 rem(2px) var(--checkbox-focus-color);
            }
            & > .jkl-checkbox__check-mark {
                background-color: $checkbox-focus-background-color;
                background-color: var(--checkbox-focus-background-color);
            }
        }

        // Disabled state:
        &:disabled + .jkl-checkbox__label {
            color: $checkbox-disabled-color;
            color: var(--checkbox-disabled-color);

            &:hover .jkl-checkbox__check-mark {
                box-shadow: inset 0 0 0 rem(1px) currentColor, 0 0 0 rem(1px) transparent;
            }
        }
    }

    &__label {
        display: flex;
        min-width: 0;
        max-width: 100%;
        cursor: pointer;
        flex-shrink: 0;

        &:hover {
            color: $checkbox-focus-color;
            color: var(--checkbox-focus-color);

            .jkl-checkbox__check-mark {
                box-shadow: inset 0 0 0 rem(1px) currentColor, 0 0 0 rem(1px) currentColor;
            }
        }

        &:active {
            color: $checkbox-color;
            color: var(--checkbox-color);

            .jkl-checkbox__check-mark {
                box-shadow: inset 0 0 0 rem(1px) currentColor, 0 0 0 rem(1px) transparent;
                background-color: $checkbox-focus-background-color;
                background-color: var(--checkbox-focus-background-color);
            }
        }
    }

    &__check-text {
        margin: (($checkbox-height - $checkbox-line-height) * 0.5) 0;
        transform: translate3d(0, rem(1px), 0);

        @include motion("standard");
        transition-property: color;
    }

    &__check-mark {
        box-sizing: border-box;
        position: relative;
        height: $checkbox-box-size;
        width: $checkbox-box-size;

        margin: (($checkbox-height - $checkbox-box-size) * 0.5) 0;
        margin-right: jkl.$spacing-xs;
        vertical-align: middle;
        flex-shrink: 0; // Don't allow the check-mark to shrink in case of really long text

        outline: none;
        border-radius: 0; // fixes rounded corners in iOS Safari
        box-shadow: inset 0 0 0 rem(1px) currentColor, 0 0 0 rem(1px) transparent;

        @include motion("standard");
        transition-property: background-color, box-shadow;

        // This is the check mark itself:
        &::after {
            content: "";
            position: absolute;
            transform-origin: bottom left;
            bottom: 42%;
            left: 18%;

            display: block;
            width: 18%;
            height: 58%;
            transform: rotate(45deg);

            border: solid rem(2px);
            border-color: currentColor;
            border-left-width: 0;
            border-top-width: 0;

            opacity: 0;
            @include motion("standard");
            transition-property: opacity, border-color;
        }

        // This is the basis of the focus ring
        &::before {
            content: "";
            position: absolute;
            top: rem(-2px);
            right: rem(-2px);
            bottom: rem(-2px);
            left: rem(-2px);
        }
    }

    &--inline {
        display: inline-flex;

        &:not(:last-of-type) {
            margin-right: jkl.$spacing-l;
        }
    }

    &--error {
        .jkl-checkbox__check-mark,
        & > .jkl-checkbox__label:active > .jkl-checkbox__check-mark,
        html:not([data-mousenavigation])
            &
            > .jkl-checkbox__input:focus
            + .jkl-checkbox__label
            > .jkl-checkbox__check-mark {
            background-color: $checkbox-error-background-color;
            background-color: var(--checkbox-error-background-color);
        }

        .jkl-checkbox__check-mark::after {
            border-color: var(--checkbox-error-check-color);
        }
    }

    // <<<< Legacy support for IE11 via "inverted" prop
    &--inverted {
        color: $checkbox-color--inverted;

        .jkl-checkbox__input {
            // Focused state:
            html:not([data-mousenavigation]) &:focus + .jkl-checkbox__label {
                color: $checkbox-focus-color--inverted;

                & > .jkl-checkbox__check-mark:before {
                    box-shadow: 0 0px 0 rem(2px) $checkbox-focus-color--inverted;
                }
            }
            // Disabled state
            &:disabled + .jkl-checkbox__label {
                color: $checkbox-disabled-color--inverted;
            }
        }
        .jkl-checkbox__label {
            &:hover {
                color: $checkbox-focus-color--inverted;
            }
            &:active {
                color: $checkbox-color--inverted;
            }
        }
        .jkl-checkbox__check-mark {
            box-shadow: inset 0 0 0 rem(1px) $checkbox-box-default-color--inverted, 0 0 0 rem(1px) transparent;
            background-color: $checkbox-background-color--inverted;
        }
        &.jkl-checkbox--error {
            .jkl-radio-button__check-mark {
                background-color: $checkbox-error-background-color;
                background-color: var(--checkbox-error-background-color);
            }
        }
    }
    // end of legacy support >>>>

    @include compact-mode {
        @include jkl.text-style("body/small-screen");
        @include compact-design();
    }

    @include small-device {
        @include compact-design();
    }
}
