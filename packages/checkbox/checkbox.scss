@charset "UTF-8";
@use "sass:string";
@use "@fremtind/jkl-core/jkl";
@use "@fremtind/jkl-core/jkl/colors";

@include jkl.comfortable-density-variables {
    @include jkl.declare-font-variables("jkl-checkbox", "body");

    --jkl-checkbox-height: #{jkl.rem(48px)};
    --jkl-checkbox-box-size: #{jkl.rem(24px)};
    --jkl-checkbox-line-height: #{jkl.rem(32px)};

    @include jkl.small-device {
        --jkl-checkbox-height: #{jkl.rem(40px)};
        --jkl-checkbox-box-size: #{jkl.rem(24px)};
        --jkl-checkbox-line-height: #{jkl.rem(28px)};
    }
}

@include jkl.compact-density-variables {
    @include jkl.declare-font-variables("jkl-checkbox", "small");

    --jkl-checkbox-height: #{jkl.rem(28px)};
    --jkl-checkbox-box-size: #{jkl.rem(18px)};
    --jkl-checkbox-line-height: #{jkl.rem(24px)};
}

$_checkbox-checked-animation-name: jkl-checkbox-checked-#{string.unique-id()};
$_checkbox-indeterminate-animation-name: jkl-checkbox-indeterminate-#{string.unique-id()};

@keyframes #{$_checkbox-checked-animation-name} {
    0% {
        width: 0;
        height: 0;
    }

    40% {
        width: 18%;
        height: 0;
    }

    100% {
        width: 18%;
        height: 58%;
    }
}

@keyframes #{$_checkbox-indeterminate-animation-name} {
    0% {
        width: 0;
    }

    100% {
        width: 66%;
    }
}

.jkl-checkbox {
    --box-color: var(--jkl-color-border-action);
    --check-color: var(--jkl-color-border-action);
    --text-color: var(--jkl-color-text-default);
    --background-color: transparent;

    @include jkl.use-font-variables("jkl-checkbox");

    display: flex;
    flex-wrap: wrap;
    min-height: var(--jkl-checkbox-height);
    color: var(--text-color);
    position: relative;

    &__input {
        // Hide native checkbox
        opacity: 0;
        position: absolute;
        // Position the hidden input so that Cypress can hit it without it being obscured by the visual checkbox
        top: -6px;

        // Checked state:
        &:checked {
            + .jkl-checkbox__label .jkl-checkbox__check-mark::after {
                animation: $_checkbox-checked-animation-name jkl.timing("productive") ease-in-out forwards;
                opacity: 1;
            }
        }

        // Indeterminate state:
        &:indeterminate:not(:checked) {
            + .jkl-checkbox__label .jkl-checkbox__indeterminate-mark::after {
                animation: $_checkbox-indeterminate-animation-name jkl.timing("productive") ease-in-out forwards;
                opacity: 1;
            }
        }

        // Focused state:
        &:focus-visible + .jkl-checkbox__label {
            color: var(--jkl-checkbox-focus-color);

            & > .jkl-checkbox__mark {
                --background-color: var(--jkl-color-background-input-focus);
                @include jkl.focus-outline;
            }
        }

        // Disabled state:
        &:disabled + .jkl-checkbox__label {
            color: var(--jkl-checkbox-disabled-color);
        }
    }

    &__label {
        display: flex;
        min-width: 0;
        max-width: 100%;
        cursor: pointer;
        flex-shrink: 0;

        &:hover,
        &:active {
            .jkl-checkbox__mark {
                outline: 1px solid var(--box-color);
            }
        }

        &:active {
            --background-color: var(--jkl-color-background-input-focus);
        }
    }

    &__text {
        margin: calc((var(--jkl-checkbox-height) - var(--jkl-checkbox-line-height)) * 0.5) 0;
        translate: 0 jkl.rem(1px);

        @include jkl.motion;
        transition-property: color;
    }

    &__mark {
        box-sizing: border-box;
        position: relative;
        height: var(--jkl-checkbox-box-size);
        width: var(--jkl-checkbox-box-size);

        margin-block: calc((var(--jkl-checkbox-height) - var(--jkl-checkbox-box-size)) * 0.5);
        margin-inline-end: var(--jkl-spacing-8);
        align-self: flex-start;
        flex-shrink: 0; // Don't allow the mark to shrink in case of really long text

        outline: none;
        border-radius: 0; // fixes rounded corners in iOS Safari
        border: 1px solid;
        border-color: var(--box-color);
        background-color: var(--background-color);
        @include jkl.motion;
        transition-property: background-color;

        @include jkl.forced-colors-mode {
            outline: revert;
            border: 1px solid ButtonText;
        }
    }

    // This is the check marker
    &__check-mark {
        &::after {
            content: "";
            position: absolute;
            transform-origin: bottom left;
            bottom: 42%;
            left: 18%;

            display: block;
            width: 18%;
            height: 58%;
            transform: rotate(45deg);

            border: solid jkl.rem(2px) var(--check-color);
            border-left-width: 0;
            border-top-width: 0;

            opacity: 0;
            @include jkl.motion;
            transition-property: opacity, border-color;

            @include jkl.forced-colors-mode {
                border-color: ButtonText;
            }
        }
    }

    // This is the indeterminate marker
    &__indeterminate-mark {
        &::after {
            --width: 66%;
            --thickness: #{jkl.rem(2px)};

            content: "";
            position: absolute;
            bottom: calc(50% - (var(--thickness) / 2));
            left: calc((100% - var(--width)) / 2);

            display: block;
            width: var(--width);

            border-bottom: solid var(--thickness) var(--check-color);

            opacity: 0;
            @include jkl.motion;
            transition-property: opacity, border-color;

            @include jkl.forced-colors-mode {
                border-color: ButtonText;
            }
        }
    }

    &--inline {
        display: inline-flex;

        &:not(:last-of-type) {
            margin-right: jkl.$spacing-24;
        }
    }

    &--error {
        --background-color: var(--jkl-color-background-alert-error);
        --check-color: var(--jkl-color-text-on-alert);
    }
}
