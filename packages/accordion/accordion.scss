@use "~@fremtind/jkl-core/jkl";

@include jkl.light-mode-variables {
    --jkl-accordion-border: #{jkl.$color-varde};
    --jkl-accordion-focus: #{jkl.$color-focus-color};
    --jkl-accordion-expanded-background: #{jkl.$color-hvit};
}

@include jkl.dark-mode-variables {
    --jkl-accordion-border: #{jkl.$color-stein};
    --jkl-accordion-focus: #{jkl.$color-focus-color--darkbg};
    --jkl-accordion-expanded-background: #{jkl.$color-svart};
}

.jkl-accordion {
    width: 100%;
}

.jkl-accordion-item {
    @include jkl.reset-outline;

    &:nth-child(n) {
        border-top: jkl.rem(1px) solid var(--jkl-accordion-border);

        &:hover {
            border-top: jkl.rem(1px) solid var(--jkl-accordion-focus);

            + .jkl-accordion-item {
                border-top: jkl.rem(1px) solid var(--jkl-accordion-focus);
            }
        }
    }

    &:last-child {
        border-bottom: jkl.rem(1px) solid var(--jkl-accordion-border);

        &:hover {
            border-bottom: jkl.rem(1px) solid var(--jkl-accordion-focus);
        }
    }

    &--expanded {
        background-color: var(--jkl-accordion-expanded-background);

        .jkl-accordion-item__title {
            &-text {
                @include jkl.no-grow-bold;
            }
        }
    }

    &__title {
        @include jkl.reset-outline;

        color: inherit;
        background-color: transparent;
        position: relative;
        padding: jkl.$spacing-m;
        text-align: left;
        width: 100%;

        @include jkl.motion;
        transition-property: transform, color;

        &:hover {
            cursor: pointer;

            .jkl-accordion-item__arrow {
                transform: translateY(calc(-50% + #{jkl.rem(-3px)}));
            }
        }

        html:not([data-mousenavigation]) &:focus {
            box-shadow: inset 0 0 0 2px var(--jkl-accordion-focus);
        }
    }

    &__arrow {
        position: absolute;
        left: jkl.$spacing-s;
        top: 50%;
        transform: translateY(-50%);
        color: inherit;

        $_arrow-height: jkl.rem(16px);
        $_arrow-width: jkl.rem(13px);

        height: $_arrow-height;
        width: $_arrow-width;
        clip: rect(auto, auto, auto, auto);
        clip-path: inset(0 0 0 0);

        pointer-events: none;

        @include jkl.motion("exit", "productive");

        transition-property: transform;

        &-up,
        &-down {
            margin: 0;
            padding: 0;
            display: inline-block;
            position: absolute;
            left: 0;
            height: $_arrow-height;
            width: $_arrow-width;
            @include jkl.motion;

            transition-property: transform;
        }

        &-up {
            top: 100%;
        }

        &-down {
            top: 0;
        }

        &--expanded {
            .jkl-accordion-item__arrow-up,
            .jkl-accordion-item__arrow-down {
                @include jkl.motion("exit", "productive");
                transform: translate(0, -100%);
            }
        }

        @include jkl.forced-colors-svg-fallback($stroke: ButtonText, $fill: ButtonText);
    }

    &__title-text {
        @include jkl.text-style("body");

        display: block;
        margin-left: jkl.rem(34px);
    }

    &__content-wrapper {
        @include jkl.motion;
        transition-property: height;
    }

    &__content {
        @include jkl.text-style("body");
        color: inherit;
        height: auto;
        padding: jkl.$spacing-m;
    }

    @include jkl.compact-mode {
        .jkl-accordion-item__title {
            padding: jkl.$spacing-xs jkl.$spacing-s;
        }

        .jkl-accordion-item__title-text {
            @include jkl.text-style("small");
            margin-left: jkl.$spacing-l;
        }

        &.jkl-accordion-item--expanded .jkl-accordion-item__title-text {
            @include jkl.no-grow-bold;
        }

        .jkl-accordion-item__content {
            @include jkl.text-style("small");
            padding: jkl.$spacing-xs jkl.$spacing-s;
        }
    }

    @include jkl.forced-colors-mode {
        &:nth-child(n) {
            border-top: jkl.rem(2px) solid ButtonText;

            &:hover {
                border-top: jkl.rem(2px) solid ButtonText;

                + .jkl-accordion-item {
                    border-top: jkl.rem(2px) solid ButtonText;
                }
            }
        }

        &:last-child {
            border-bottom: jkl.rem(2px) solid ButtonText;

            &:hover {
                border-bottom: jkl.rem(2px) solid ButtonText;
            }
        }

        &__title {
            background-color: ButtonFace;
            outline: revert;
        }
    }
}
