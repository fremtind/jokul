@use "sass:map";
@use "jkl";

@import "./mixins/all";
@import "./functions";

$label-color: jkl.$color-granitt;
$label-support-color: jkl.$color-stein;
$label-error-color: jkl.$color-granitt;

$label-color--inverted: jkl.$color-snohvit;
$label-support-color--inverted: jkl.$color-svaberg;
$label-error-color--inverted: jkl.$color-snohvit;

@include jkl.helper-light-mode-variables {
    --label-color: #{$label-color};
    --label-support-color: #{$label-support-color};
    --label-error-color: #{$label-error-color};
}

@include jkl.helper-dark-mode-variables {
    --label-color: #{$label-color--inverted};
    --label-support-color: #{$label-support-color--inverted};
    --label-error-color: #{$label-error-color--inverted};
}

.jkl-dormant-form-support-label {
    display: none;
    opacity: 0;
    pointer-events: none;
}

.jkl-form-support-label {
    @include jkl.text-style("small");
    @include motion("standard", "lazy");

    display: block;
    margin-top: jkl.$spacing-xs;
    color: $label-support-color;
    color: var(--label-support-color);
    transition-property: color;
    transition-delay: 150ms;

    &__icon {
        opacity: 0;
        $icon-width: jkl.rem(24px);
        height: $icon-width;
        margin-bottom: -#{jkl.rem(6px)};
        margin-right: -#{$icon-width};
    }

    &--compact {
        .jkl-form-support-label__icon {
            $icon-width: jkl.rem(22px);
            height: $icon-width;
            margin-bottom: -#{jkl.rem(5px)};
            margin-right: -#{$icon-width};
        }
    }

    &--error {
        color: $label-error-color;
        color: var(--label-error-color);
        .jkl-form-support-label__icon {
            animation: map.get($jkl--timings, "lazy") cubic-bezier(0, 0, 0.3, 1) map.get($jkl--timings, "expressive")
                jkl-support-label-icon-entrance forwards;
        }
    }

    &--sr-only {
        @include screenreader-only;
    }

    &--inverted {
        color: var(--label-support-color);

        &.jkl-form-support-label--error {
            color: $label-error-color--inverted;
        }
    }
}

$label-spacing-large: jkl.$spacing-m;
$label-spacing-medium: jkl.$spacing-xs;
$label-spacing-small: jkl.$spacing-2xs;
$label-spacing-large--compact: jkl.$spacing-s;
$label-spacing-medium--compact: jkl.$spacing-xs;
$label-spacing-small--compact: jkl.$spacing-2xs;

.jkl-label {
    display: block;
    margin-left: initial;
    color: $label-color;
    color: var(--label-color);

    &--large {
        @include jkl.text-style("heading-2");
        margin-bottom: $label-spacing-large;
        margin-left: jkl.rem(-1px); // adjust visual alignment
    }

    &--medium {
        @include jkl.text-style("body");
        margin-bottom: $label-spacing-medium;
    }

    &--small {
        @include jkl.text-style("small");
        margin-bottom: $label-spacing-small;
    }

    &--sr-only {
        @include screenreader-only;
    }

    @include compact-mode {
        &.jkl-label--small {
            @include jkl.text-style("small/small-screen");
            margin-bottom: $label-spacing-small--compact;
        }
        &.jkl-label--medium {
            @include jkl.text-style("body/small-screen");
            margin-bottom: $label-spacing-medium--compact;
        }
        &.jkl-label--large {
            @include jkl.text-style("heading-2/small-screen");
            margin-bottom: $label-spacing-large--compact;
        }
    }
}

@keyframes jkl-support-label-icon-entrance {
    0% {
        margin-right: 0;
        opacity: 0;
        transform: scale(1);
    }
    30% {
        margin-right: jkl.$spacing-xs;
    }
    50% {
        opacity: 1;
    }
    70% {
        transform: scale(1.1);
    }
    85% {
        transform: scale(0.9);
    }
    100% {
        transform: scale(1);
        opacity: 1;
        margin-right: jkl.$spacing-xs;
    }
}
