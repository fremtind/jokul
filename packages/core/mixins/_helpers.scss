@use "sass:string";
@use "../variables/typography";

///
/// Brukes til å sette CSS-variabler for bruk i lyst tema, typisk tekst- og
/// bakgrunnsfarge. Se også dark-mode-variables.
///
/// @content Settes på :root hvis brukeren har lyst tema, og på [data-theme="light"]
///
@mixin light-mode-variables {
    @media screen and (prefers-color-scheme: light) {
        :root {
            @content;
        }
    }

    [data-theme="light"] {
        @content;
    }
}

///
/// Brukes til å sette CSS-variabler for bruk i mørkt tema, typisk tekst- og
/// bakgrunnsfarge. Se også light-mode-variables.
///
/// @content Settes på :root hvis brukeren har mørkt tema, og på [data-theme="dark"]
///
@mixin dark-mode-variables {
    @media screen and (prefers-color-scheme: dark) {
        :root {
            @content;
        }
    }

    [data-theme="dark"] {
        @content;
    }
}

///
/// Gjør flexbox litt mindre verbos. Setter display: flex; med gitt align-items og justify-content.
///
/// @param {String} $align-items [center] – settes på align-items
/// @param {String} $justify-content [center] – settes på justify-content
///
@mixin flex($align-items: center, $justify-content: center) {
    display: flex;
    align-items: $align-items;
    justify-content: $justify-content;
}

///
/// Samle alt som har med posisjonering å gjøre i én mixin. Alle parameternavn matcher CSS-attributtet.
///
/// @param {String} $position
/// @param {String} $top [initial]
/// @param {String} $left [initial]
/// @param {String} $right [initial]
/// @param {String} $bottom [initial]
///
@mixin position($position, $top: initial, $left: initial, $right: initial, $bottom: initial) {
    position: $position;
    top: $top;
    left: $left;
    right: $right;
    bottom: $bottom;
}

///
/// Makes text bold without changing the space it takes up on screen.
/// Not perfect for all lengths of text, but close enough!
///
@mixin no-grow-bold {
    font-weight: typography.$weight-bold;
    letter-spacing: -0.014em;
}

///
/// Brukes til CSS som skal gjelde i kompakt modus, enten via en `--compact` modifier eller med [data-compactlayout]
///
/// @content Innholdet plasseres i en `&--compact` selector og `*[data-compactlayout] &`-selector
///
@mixin compact-mode {
    &--compact,
    *[data-compactlayout] & {
        @content;
    }
}

///
/// En omfattende reset for alt av outlines og borders på interaktive elementer
///
@mixin reset-outline {
    outline: 0;
    border-style: none;
    outline-style: none;

    &::-moz-focus-inner {
        border-style: none;
        outline: 0;
    }

    &:active,
    &:hover,
    &:focus,
    &:link,
    &:visited {
        outline: 0 !important;
        outline-style: none;
    }

    /* Remove the inner border and padding in Firefox */
    button::-moz-focus-inner,
    [type="button"]::-moz-focus-inner,
    [type="reset"]::-moz-focus-inner,
    [type="submit"]::-moz-focus-inner {
        border-style: none;
    }

    /* Remove dotted lines around object, especially for firefox */
    a:hover,
    a:active,
    a:focus,
    a:link,
    a:visited {
        outline: 0 !important;
        outline-style: none;
    }

    button,
    object,
    embed {
        outline: 0;
    }

    /* All Input elements */
    input::-moz-focus-inner {
        outline: 0;
    }

    /* Or more specifically */
    input[type="submit"]::-moz-focus-inner,
    input[type="button"]::-moz-focus-inner {
        outline: 0;
    }
}

///
/// Removes increment and decrement buttons
/// for number input fields.
///
@mixin remove-inner-outer-button {
    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
    }

    input[type="number"] {
        -moz-appearance: textfield;
    }
}
