@use "sass:string";
@use "sass:color";
@use "sass:list";
@use "../variables/typography";

@mixin light-mode-variables {
    @media screen and (prefers-color-scheme: light) {
        :root {
            @content;
        }
    }

    [data-theme="light"] {
        @content;
    }
}

@mixin dark-mode-variables {
    @media screen and (prefers-color-scheme: dark) {
        :root {
            @content;
        }
    }

    [data-theme="dark"] {
        @content;
    }
}

///
/// Brukes til å overstyre stiler for bruk i Forced Colors-modus.
/// Her vil du typisk legge til fallbacks for manglende box-shadow,
/// som for eksempel `outline: revert;` og `border: revert;`,
/// og eventuelle andre problemer som oppstår for brukere av høykontrasttemaer.
/// Se https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors
/// og https://www.smashingmagazine.com/2022/03/windows-high-contrast-colors-mode-css-custom-properties/
///
/// @content Innholdet plasseres i et media query som matcher hvis høykontrasttema er i bruk
///
@mixin forced-colors-mode {
    @media screen and (forced-colors: active) {
        @content;
    }
}

$_valid-forced-colors-text-values: ("LinkText", "ButtonText", "ButtonFace", "CanvasText", "GrayText");
///
/// Hjelper for å sette riktig farge på SVGer i Chrome for brukere med Forced Color-modus.
/// Se https://melanie-richards.com/blog/currentcolor-svg-hcm/ for detaljer
///
/// @param {"LinkText" | "ButtonText" | "ButtonFace" | "CanvasText" | "GrayText"} $color - Definer hvilken systemfarge som skal brukes. Fargene har en forventet betydning for brukeren. Følg den semantiske betydningen til fargen, ikke velg fargen du selv synes "ser best ut".
/// @param {"LinkText" | "ButtonText" | "ButtonFace" | "CanvasText" | "GrayText"} $fill [$color - Hvis du trenger ulik fill og stroke. Bruker default $color.
/// @param {"LinkText" | "ButtonText" | "ButtonFace" | "CanvasText" | "GrayText"} $stroke [$color] - Hvis du trenger ulik fill og stroke. Bruker default $color.
///
@mixin forced-colors-svg-fallback($color, $fill: $color, $stroke: $color) {
    @if not list.index($_valid-forced-colors-text-values, $color) {
        @error "#{$color} will not be used in Forced Color mode. Valid options are: #{$_valid-forced-colors-text-values}. Use the correct color for your given context.";
    }

    @if not list.index($_valid-forced-colors-text-values, $stroke) {
        @error "#{$stroke} will not be used in Forced Color mode. Valid options are: #{$_valid-forced-colors-text-values}. Use the correct color for your given context.";
    }

    @if not list.index($_valid-forced-colors-text-values, $fill) {
        @error "#{$fill} will not be used in Forced Color mode. Valid options are: #{$_valid-forced-colors-text-values}. Use the correct color for your given context.";
    }

    @media screen and (forced-colors: active) {
        stroke: $stroke;
        fill: $fill;

        & svg,
        & path {
            stroke: $stroke;
            fill: $fill;
        }
    }
}

@function urlencodecolor($color) {
    @if type-of($color) == "color" and str-index(#{$color}, "#") == 1 {
        $hex: string.slice(color.ie-hex-str($color), 4);
        $converted-color: string.unquote("#{$hex}");

        @return "%23" + $converted-color;
    }

    @return $color;
}

@mixin flex($align-items: center, $justify-content: center) {
    display: flex;
    align-items: $align-items;
    justify-content: $justify-content;
}

@mixin position($position, $top: initial, $left: initial, $right: initial, $bottom: initial) {
    position: $position;
    top: $top;
    left: $left;
    right: $right;
    bottom: $bottom;
}

///
/// Makes text bold without changing the space it takes up on screen.
/// Not perfect for all lengths of text, but close enough!
///
@mixin no-grow-bold {
    font-weight: typography.$weight-bold;
    letter-spacing: -0.014em;
}

@mixin compact-mode {
    &--compact,
    *[data-compactlayout] & {
        @content;
    }
}

@mixin reset-outline {
    outline: 0;
    border-style: none;
    outline-style: none;

    &::-moz-focus-inner {
        border-style: none;
        outline: 0;
    }

    &:active,
    &:hover,
    &:focus,
    &:link,
    &:visited {
        outline: 0 !important;
        outline-style: none;
    }

    /* Remove the inner border and padding in Firefox */
    button::-moz-focus-inner,
    [type="button"]::-moz-focus-inner,
    [type="reset"]::-moz-focus-inner,
    [type="submit"]::-moz-focus-inner {
        border-style: none;
    }

    /* Remove dotted lines around object, especially for firefox */
    a:hover,
    a:active,
    a:focus,
    a:link,
    a:visited {
        outline: 0 !important;
        outline-style: none;
    }

    button,
    object,
    embed {
        outline: 0;
    }

    /* All Input elements */
    input::-moz-focus-inner {
        outline: 0;
    }

    /* Or more specifically */
    input[type="submit"]::-moz-focus-inner,
    input[type="button"]::-moz-focus-inner {
        outline: 0;
    }

    // Reset alt som er gjort over hvis brukeren har på forced-colors.
    // Da mister vi box-shadow og er avhengig av at borders og outlines synes.
    @include forced-colors-mode {
        outline: revert;
        border-style: revert;
        outline-style: revert;

        &:active,
        &:hover,
        &:focus,
        &:link,
        &:visited {
            outline: revert !important;
            outline-style: revert;
        }

        /* Remove the inner border and padding in Firefox */
        button::-moz-focus-inner,
        [type="button"]::-moz-focus-inner,
        [type="reset"]::-moz-focus-inner,
        [type="submit"]::-moz-focus-inner {
            border-style: revert;
        }

        /* Remove dotted lines around object, especially for firefox */
        a:hover,
        a:active,
        a:focus,
        a:link,
        a:visited {
            outline: revert !important;
            outline-style: revert;
        }

        button,
        object,
        embed {
            outline: revert;
        }

        /* All Input elements */
        input::-moz-focus-inner {
            outline: revert;
        }

        /* Or more specifically */
        input[type="submit"]::-moz-focus-inner,
        input[type="button"]::-moz-focus-inner {
            outline: revert;
        }
    }
}

///
/// Removes increment and decrement buttons
/// for number input fields.
///
@mixin remove-inner-outer-button {
    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
    }

    input[type="number"] {
        -moz-appearance: textfield;
    }
}
