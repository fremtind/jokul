@import "./variables/all";
@import "./mixins/all";
@import "./functions";

@mixin underline-gradient($color) {
    background-image: linear-gradient(to bottom, $color 0%, $color 100%);
}

$right-arrow: "\2192"; // unicode right arrow
$left-arrow: "\2190"; // unicode left arrow
$north-east-arrow: "\2197"; // unicode north east arrow (up/right)

$link-underline-thickness: rem(1px);
$link-underline-thickness--hover: rem(2px);

$link-color: $svart;
$link-active-color: $info;

$link-color--inverted: $hvit;
$link-active-color--inverted: $info--darkbg;

:root,
[data-theme="light"] {
    --link-color: #{$link-color};
    --link-active-color: #{$link-active-color};
}
[data-theme="dark"] {
    --link-color: #{$link-color--inverted};
    --link-active-color: #{$link-active-color--inverted};
}

.jkl-link {
    color: $link-color;
    color: var(--link-color);

    @include underline-gradient(currentColor);
    background-position: 0 calc(100% - (#{$link-underline-thickness--hover} - #{$link-underline-thickness}));
    background-size: $link-underline-thickness $link-underline-thickness;
    background-repeat: repeat-x;
    @include motion("standard", "energetic");
    transition-property: background-size, background-position, color;
    outline: none;
    text-decoration: none;

    html:not([data-mousenavigation]) &:focus,
    &:hover {
        color: $link-active-color;
        color: var(--link-active-color);
        @include underline-gradient($link-active-color);
        @include underline-gradient(var(--link-active-color));
        background-position: 0 100%;
        background-size: $link-underline-thickness--hover $link-underline-thickness--hover;
    }

    &:active {
        background-position: 0 calc(100% - (#{$link-underline-thickness--hover} - #{$link-underline-thickness}));
        background-size: $link-underline-thickness $link-underline-thickness;
    }

    /* Show arrow after external links, or links opening
    in a new window or tab: */
    &[target="_blank"],
    &--external {
        &:after {
            content: $north-east-arrow;
        }
    }

    &--negative {
        color: $link-color--inverted;

        html:not([data-mousenavigation]) &:focus,
        &:hover {
            color: $link-active-color--inverted;
            @include underline-gradient($link-active-color--inverted);
        }
    }
}

.jkl-nav-link {
    color: $link-color;
    color: var(--link-color);

    @include reset-outline;
    box-sizing: border-box;
    font-weight: $normal-weight;
    text-decoration: none;
    position: relative;
    padding-right: 1.2em;

    &:after {
        position: absolute;
        content: $right-arrow;
        padding-left: rem(2px);
        transform: translateX(0);
        @include motion("standard");
        transition-property: transform;
    }

    &:hover,
    html:not([data-mousenavigation]) &:focus {
        color: $link-active-color;
        color: var(--link-active-color);

        &:after {
            transform: translateX(33%);
        }
    }

    &--active {
        @include no-grow-bold;
    }

    &--inverted {
        color: $link-color--inverted;

        &:hover,
        html:not([data-mousenavigation]) &:focus {
            color: $link-active-color--inverted;
        }
    }
}

.jkl-nav-link--back {
    padding-right: 0;
    padding-left: 1em;
    
    &:after {
        display: none;
    }

    &:before {
        position: absolute;
        left: 0;
        top: rem(-2px);
        content: $left-arrow;
        transform: translateX(0);
        @include motion("standard");
        transition-property: transform;
    }

    &:hover,
    html:not([data-mousenavigation]) &:focus {
        &:before {
            transform: translateX(-33%);
        }
    }
}
