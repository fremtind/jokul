@use "../../../core/jkl";
@use "../../../core/jkl/colors";

@include jkl.comfortable-density-variables {
    --jkl-file-padding: #{jkl.$unit-10};
    --jkl-file-thumbnail-width: #{jkl.$unit-70};
    --jkl-file-thumbnail-max-height: 120px;
    --jkl-file-thumbnail-aspect-ratio: 1;
    --jkl-file-gap: #{jkl.$unit-10} #{jkl.$unit-20};
    --jkl-file-button-width: #{jkl.$unit-50};
}

@include jkl.compact-density-variables {
    --jkl-file-padding: #{jkl.$unit-10};
    --jkl-file-thumbnail-width: #{jkl.$unit-50};
    --jkl-file-thumbnail-max-height: 80px;
    --jkl-file-thumbnail-aspect-ratio: 1;
    --jkl-file-gap: #{jkl.$unit-05} #{jkl.$unit-10};
    --jkl-file-button-width: #{jkl.$unit-40};
}

.jkl-file {
    --text-color: #{jkl.$sys-color-content-default};
    --border: 1px solid var(--jkl-color-border-separator);
    --border-radius: 2px;
    --bg: transparent;

    &__content {
        @include jkl.motion(
            "standard",
            "snappy",
            background-color,
            border-color,
            color
        );

        color: jkl.$sys-color-content-default;
        padding: var(--jkl-file-padding);
        border: var(--border);
        border-radius: var(--border-radius);
        background: var(--bg);
        display: grid;
        grid-template-columns: var(--jkl-file-thumbnail-width) 1fr var(
                --jkl-file-button-width
            );
        grid-template-areas: "image text button";
        gap: var(--jkl-file-gap);
        align-items: center;
        height: fit-content;

        &__name {
            @include jkl.text-style("small");
            grid-area: text;
            word-break: normal;
            overflow-wrap: anywhere;

            &__size {
                word-break: keep-all;
            }
        }

        &__delete {
            aspect-ratio: 1;
            grid-area: button;
        }

        &__thumbnail {
            width: 100%;
            aspect-ratio: var(--jkl-file-thumbnail-aspect-ratio);
            object-fit: cover;
            max-height: var(--jkl-file-thumbnail-max-height);
            grid-area: image;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--jkl-color-background-container-low);
            border-radius: 2px;
            overflow: hidden;
            container-type: inline-size;

            img {
                z-index: 0;

                &[src] {
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                }
            }

            &::before,
            &::after {
                position: absolute;
                z-index: 1;
            }
        }
    }

    // Card view
    &[class*="card"] {
        --jkl-file-thumbnail-width: 100%;
        --jkl-file-thumbnail-aspect-ratio: 16/9;

        .jkl-file__content {
            grid-template-columns: 1fr var(--jkl-file-button-width);
            grid-template-rows: var(--jkl-file-thumbnail-max-height) auto;
            grid-template-areas:
                "image image"
                "text button";
        }
    }

    // If the file is not an image
    &:not([data-state*="loading"]) {
        .jkl-file__content__thumbnail:not(:has(img[src]))::before {
            @include jkl.text-style("small");

            content: attr(data-filetype);
        }
    }

    // Loading state
    &[data-state="loading"]:not(:has(.jkl-file__support-label)) {
        .jkl-file__content__thumbnail {
            img {
                opacity: 0.25;
            }

            &::after {
                --scale: scale(0.3, 0.3);
                --scale-end: scale(0.1, 0.1);
                --rotation: 45deg;

                content: "" / "Laster opp";
                height: 100%;
                min-height: 24px;
                max-height: 2lh;
                aspect-ratio: 1;
                background: var(--text-color);
                transform: var(--scale) rotate(var(--rotation));
                animation: pulse 2500ms linear forwards infinite;

                @keyframes pulse {
                    0% {
                        transform: var(--scale) rotate(var(--rotation));
                    }

                    50% {
                        transform: var(--scale-end)
                            rotate(calc(var(--rotation) + 0.5turn));
                    }

                    100% {
                        transform: var(--scale)
                            rotate(calc(var(--rotation) + 1turn));
                    }
                }
            }
        }
    }

    // Error state
    &[data-state="error"] {
        --bg: var(--jkl-color-functional-error);

        &,
        a,
        a:hover,
        button,
        span {
            --text-color: var(--jkl-color-text-on-alert);
            --link-color: var(--text-color);
            --jkl-color-border-action: currentColor;
        }
    }
}
