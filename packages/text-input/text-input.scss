@use "sass:color";
@use "~@fremtind/jkl-core/jkl";
@use "~@fremtind/jkl-core/variables/colors";

@use "./autosuggest";

$_text-input-height: jkl.rem(48px);
$_text-input-height--compact: jkl.rem(40px);
$_text-input-button-width: jkl.rem(48px);
$_text-input-padding: jkl.$spacing-xs jkl.$spacing-s;

// These are used to calculate textarea height,
// and MUST equal the line height in the text style used
$_text-input-line-height: jkl.rem(32px);
$_text-input-line-height--compact: jkl.rem(28px);

$_text-input-focus-color: jkl.$color-granitt;
$_text-input-selection-color: color.scale(
    $color: $_text-input-focus-color,
    $alpha: -80%,
);

$_text-input-focus-color--inverted: jkl.$color-snohvit;
$_text-input-selection-color--inverted: color.scale(
    $color: $_text-input-focus-color--inverted,
    $alpha: -75%,
);

@include jkl.light-mode-variables {
    --jkl-text-input-border-color: #{jkl.$color-stein};
    --jkl-text-input-text-color: #{jkl.$color-granitt};
    --jkl-text-input-placeholder-color: #{jkl.$color-stein};
    --jkl-text-input-background-color: #{jkl.$color-hvit};
    --jkl-text-input-focus-color: #{$_text-input-focus-color};
    --jkl-text-input-error-background-color: #{colors.varslingsfarge("feil")};
    --jkl-text-input-error-text-color: #{jkl.$color-granitt};
    --jkl-text-input-error-placeholder-color: #{jkl.$color-stein};
    --jkl-text-input-selection-color: #{$_text-input-selection-color};
    --jkl-text-input-error-selection-color-color: #{$_text-input-selection-color};
}

@include jkl.dark-mode-variables {
    --jkl-text-input-border-color: #{jkl.$color-svaberg};
    --jkl-text-input-text-color: #{jkl.$color-snohvit};
    --jkl-text-input-placeholder-color: #{jkl.$color-svaberg};
    --jkl-text-input-background-color: #{jkl.$color-svart};
    --jkl-text-input-focus-color: #{$_text-input-focus-color--inverted};
    --jkl-text-input-selection-color: #{$_text-input-selection-color--inverted};
    --jkl-text-input-error-background-color: #{colors.varslingsfarge("feil")};
    --jkl-text-input-error-text-color: #{jkl.$color-granitt};
    --jkl-text-input-error-placeholder-color: #{jkl.$color-stein};
    --jkl-text-input-error-selection-color-color: #{$_text-input-selection-color};
}

@mixin _shared-input-styles {
    background: none;
    -webkit-appearance: none;

    @include jkl.reset-outline;
    @include jkl.text-style("body/large-screen");
    @include jkl.motion;

    color: var(--jkl-text-input-text-color);
    background-color: transparent;

    /* Placeholder text style */
    &::placeholder {
        opacity: 1;
        color: var(--jkl-text-input-placeholder-color);
    }

    /* Color of text selection */
    &::selection {
        background-color: var(--jkl-text-input-selection-color);

        [data-theme="dark"] & {
            background-color: var(--jkl-text-input-selection-color);
        }
    }

    /*  Invalid state */
    &[aria-invalid="true"] {
        background: var(--jkl-text-input-error-background-color);
        color: var(--jkl-text-input-error-text-color);

        &::placeholder {
            color: var(--jkl-text-input-error-placeholder-color);
        }

        /* Color of text selection */
        &::selection {
            background-color: var(--jkl-text-input-error-selection-color-color);
        }

        & ~ .jkl-text-input__action-button {
            color: var(--jkl-text-input-error-placeholder-color);

            &:hover {
                color: var(--jkl-text-input-error-text-color);
            }

            &:focus {
                @include jkl.keyboard-navigation {
                    &::after {
                        box-shadow: inset 0 0 0 jkl.rem(2px) var(--jkl-text-input-error-text-color);
                    }
                }
            }
        }
    }
}

@mixin _shared-error-styles {
    /*  Invalid state */
    &[aria-invalid="true"] {
        background-color: var(--jkl-text-input-error-background-color);
        color: var(--jkl-text-input-error-text-color);

        /* Color of text selection */
        &::selection {
            background-color: var(--jkl-text-input-error-selection-color-color);
        }
    }
}

.jkl-text-input {
    @include jkl.reset-outline;
    @include jkl.remove-inner-outer-button;

    &__input-wrapper {
        display: inline-flex;
        align-items: center;
        max-width: 100%;
    }

    &__input {
        @include _shared-input-styles;

        border-radius: jkl.rem(3px);
        box-sizing: border-box;
        height: $_text-input-height;
        padding: $_text-input-padding;
        max-width: 100%;
        width: 100%;

        background-color: transparent;
        box-shadow: inset 0 0 0 jkl.rem(1px) var(--jkl-text-input-border-color), 0 0 0 jkl.rem(1px) transparent;

        transition-property: color, box-shadow, background-color;

        &:hover {
            box-shadow: inset 0 0 0 jkl.rem(1px) var(--jkl-text-input-focus-color),
                0 0 0 jkl.rem(1px) var(--jkl-text-input-focus-color);
            border-color: var(--jkl-text-input-focus-color);
        }

        &:focus,
        &:focus-within {
            background-color: var(--jkl-text-input-background-color);
            box-shadow: inset 0 0 0 jkl.rem(1px) var(--jkl-text-input-focus-color),
                0 0 0 jkl.rem(1px) var(--jkl-text-input-focus-color);
            border-color: var(--jkl-text-input-focus-color);
        }

        @include _shared-error-styles;

        &--align-right {
            text-align: right;
        }
    }

    &__action-button {
        @include jkl.reset-outline;
        display: inline-flex;
        box-sizing: border-box;
        align-items: center;
        justify-content: center;
        background-color: transparent;
        cursor: pointer;
        padding: 0;
        padding: jkl.$spacing-xs 0;
        height: $_text-input-button-width;
        width: $_text-input-height;
        margin-left: jkl.rem(-48px);
        color: var(--jkl-text-input-border-color);

        &:hover {
            color: var(--jkl-text-input-focus-color);

            @include jkl.forced-colors-mode {
                border: rem(2px) inset ButtonText;
            }
        }

        &:focus {
            @include jkl.keyboard-navigation {
                position: relative;

                &::after {
                    content: "";
                    position: absolute;
                    top: jkl.rem(8px);
                    right: jkl.rem(8px);
                    bottom: jkl.rem(8px);
                    left: jkl.rem(8px);
                    box-shadow: inset 0 0 0 jkl.rem(2px) var(--jkl-text-input-focus-color);
                }
            }
        }

        @include jkl.forced-colors-mode {
            border: revert;
            background-color: revert;
        }

        @include jkl.forced-colors-svg-fallback($stroke: ButtonText);
    }

    /* Modifications for inline version */
    &--inline {
        display: inline-block;
        margin: jkl.rem(-2px) jkl.rem(4px);
    }

    /* Modifications for input with action */
    &--action {
        .jkl-text-input__input {
            padding-right: $_text-input-height;
        }
    }

    /* Modifications for compact variant (also inline) */
    *[data-compactlayout] &,
    &--compact,
    &--inline {
        .jkl-text-input__input {
            @include jkl.text-style("body/small-screen");
            height: $_text-input-height--compact;
        }

        .jkl-text-input__action-button {
            height: $_text-input-height--compact;
        }

        .jkl-text-input__action-icon {
            width: jkl.rem(18px);
        }
    }
}

.jkl-text-input:not(.jkl-text-area) {
    .jkl-text-input__input {
        line-height: $_text-input-height; // Trengs for å unngå clipping av Å i Chrome, men den ødelegger placeholder i textarea (hvor clippingen ikke skjer)
    }
}

*[data-compactlayout] .jkl-text-input:not(.jkl-text-area),
.jkl-text-input--compact:not(.jkl-text-area),
.jkl-text-input--inline:not(.jkl-text-area) {
    .jkl-text-input__input {
        line-height: $_text-input-height--compact; // Trengs for å unngå clipping av Å i Chrome, men den ødelegger placeholder i textarea (hvor clippingen ikke skjer)
    }
}

.jkl-text-area {
    height: auto;
    width: 100%;

    &--auto-expand {
        .jkl-text-input__input,
        .jkl-text-area__text-area {
            overflow: hidden; // Skjul scrollbar når høyden autojusteres
        }
    }

    &.jkl-text-input--compact .jkl-text-input__input:empty {
        overflow: hidden;
    }

    & .jkl-text-input__input {
        @include jkl.motion;

        transition-property: height, box-shadow;
        font-weight: normal;
        width: 100%;
        resize: none; // Disable textarea resize
    }

    &--with-counter {
        $progress-bar-height: jkl.rem(4px);

        .jkl-text-area__content {
            position: relative;
        }

        .jkl-text-input__input {
            height: auto;
            max-height: $_text-input-height;
            padding-bottom: jkl.$spacing-xs;
            transition-property: max-height, box-shadow, padding-bottom;

            &[data-has-content="true"],
            &:focus-within {
                padding-right: jkl.rem(1px);
                max-height: 100%;
                background: var(--jkl-text-input-background-color);
                padding-bottom: jkl.$spacing-xl;
            }

            @include _shared-error-styles;

            @include jkl.forced-colors-mode {
                // Fordi all styling med box-shadow er ut vinduet i forced-colors
                // så er det igjen textarea som har en border. Da er det _den_
                // som må ha padding, og her unngår vi å få dobbelt opp.
                // Det gjør at telleren havner under textarea, men siden vi
                // heller ikke har noen progress-bar synlig i denne modusen
                // så er det _godt nok_.
                padding: 0;
            }
        }

        /*
         * Textarea respekterer ikke padding (teksten rendres under det som
         * burde være tomrom), så om vi har en teller må vi wrappe textarea
         * i noe som styles som selve inputfeltet. Det er rollen
         * .jkl-text-input__input har i denne sammenhengen. Denne klassen
         * sørger for at selve textarea-elementet ikke får native styles og
         * får fonter, farger, og høyden den skal.
         */
        .jkl-text-area__text-area {
            @include jkl.reset-outline;
            @include _shared-input-styles;

            display: block;
            box-sizing: border-box;

            background: transparent;
            font-weight: normal;
            resize: none; // Disable textarea resize
            width: 100%;

            height: calc($_text-input-height - (2 * jkl.$spacing-xs));
            padding: 0;

            transition-property: height;

            @include _shared-error-styles;

            @include jkl.forced-colors-mode {
                padding: $_text-input-padding;
            }
        }

        .jkl-text-input__input[data-has-content="true"] .jkl-text-area__text-area,
        .jkl-text-area__text-area:focus {
            padding-right: jkl.$spacing-xs;
        }

        .jkl-text-area__counter {
            @include jkl.motion;
            transition-property: opacity;
            opacity: 0;

            pointer-events: none; // Don't block interactivity when field is collapsed
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;

            &-count {
                @include jkl.text-style("small");
                padding: jkl.$spacing-xs jkl.$spacing-s;
            }

            &-progress {
                background-color: transparent;
                height: $progress-bar-height;
                width: 100%;
                overflow: hidden;

                &::after {
                    content: "";
                    width: var(--progress-width, 100%);
                    display: block;
                    height: $progress-bar-height;
                    background-color: var(--jkl-color);
                    transition-property: width;
                    @include jkl.motion("standard", "lazy");
                }
            }
        }

        &:focus-within .jkl-text-area__counter {
            opacity: 1;
            transition-delay: jkl.timing("productive"); // Fade in once field is expanded
        }

        [aria-invalid="true"] ~ .jkl-text-area__counter {
            color: var(--jkl-text-input-error-text-color);
        }

        *[data-compactlayout] &,
        &.jkl-text-input--compact,
        &.jkl-text-input--inline {
            .jkl-text-input__input {
                height: revert;
                max-height: $_text-input-height--compact;

                &[data-has-content="true"] {
                    max-height: 100%;
                }

                &:focus-within {
                    max-height: 100%;
                }
            }

            .jkl-text-area__text-area {
                @include jkl.text-style("body/small-screen");
                height: calc($_text-input-height - (2 * jkl.$spacing-xs));
            }
        }

        &.jkl-text-area--start-open .jkl-text-input__input {
            max-height: none;
            padding-bottom: jkl.$spacing-xl;
        }
    }
}

/* Utility classes for number of rows */
@for $num from 3 through 10 {
    $height: $_text-input-line-height * $num + jkl.$spacing-xs * 2;
    $small-height: $_text-input-line-height--compact * $num + jkl.$spacing-xs * 2;

    .jkl-text-input__input--#{$num}-rows:focus,
    .jkl-text-input__input--#{$num}-rows:not(:placeholder-shown),
    .jkl-text-area--start-open .jkl-text-input__input--#{$num}-rows {
        /**
         * (#2751) Ekspanderende får inline style med height auto,
         *         som gir et "hopp" dersom det er en teller og vi
         *         ikke har en minimumshøyde.
         */
        min-height: $height; // (#2751)
        height: $height;
        max-height: 100%;

        @include jkl.small-device {
            height: $small-height;
            min-height: $small-height; // (#2751)
        }

        .jkl-text-input--compact & {
            height: $small-height;
            min-height: $small-height; // (#2751)
        }
    }

    .jkl-text-area--start-open.jkl-text-input--compact .jkl-text-input__input--#{$num}-rows {
        height: $small-height;
        min-height: $small-height; // (#2751)
    }
}
