@import "~@fremtind/jkl-core/_functions.scss";
@import "~@fremtind/jkl-core/mixins/_all.scss";
@import "~@fremtind/jkl-core/variables/_all.scss";

$text-input-border-color: $svart;
$text-input-height: rem(48px);
$text-input-height--compact: rem(40px);
$text-input-button-width: rem(48px);
$text-input-padding: $component-spacing--small;

// These are used to calculate textarea height,
// and MUST equal the line height in the text style used
$text-input-line-height: rem(32px);
$text-input-line-height--compact: rem(28px);

.jkl-text-input {
    @include reset-outline;

    &__input-wrapper {
        display: inline-flex;
        align-items: center;
        width: 100%;
    }

    &__input {
        border: none;
        outline: none;
        border-radius: rem(3px);
        -webkit-appearance: none;

        box-sizing: border-box;
        height: $text-input-height;
        padding: $text-input-padding;
        @include jkl-text-style("desktop/body");
        color: $svart;

        background-color: $hvit;
        box-shadow: inset 0 0 0 rem(1px) $svart, 0 0 0 0 $svart;

        @include motion("standard");
        transition-property: color, box-shadow;

        /* Placeholder text style */
        &::placeholder {
            opacity: 1;
            color: $gra-60;
        }

        /* Color of text selection */
        &::selection {
            background-color: transparentize($color: $info, $amount: 0.8);
        }

        /* Focus and hover states */
        &:hover,
        &:focus {
            box-shadow: inset 0 0 0 rem(1px) $info, 0 0 0 rem(1px) $info;
            border-color: $info;
        }

        /*  Invalid states */
        &[aria-invalid="true"],
        &:invalid {
            box-shadow: inset 0 0 0 rem(1px) $feil, 0 0 0 0 $feil;

            &::selection {
                background-color: transparentize($feil, 0.8);
            }

            &:hover,
            &:focus {
                box-shadow: inset 0 0 0 rem(1px) $feil, 0 0 0 rem(1px) $feil;
            }
        }
    }

    &__action-button {
        display: inline-flex;
        box-sizing: border-box;
        align-items: center;
        justify-content: center;
        border: none;
        background-color: transparent;
        cursor: pointer;
        padding: 0;
        padding: $component-spacing--small 0;
        height: $text-input-button-width;
        width: $text-input-height;
        margin-left: rem(-48px);
        color: inherit;

        &:focus,
        &:hover {
            color: $focus-color;
        }
    }

    /* Modifications for inline version */
    &--inline {
        display: inline-block;
        margin: rem(-2px) rem(4px);
    }

    /* Modifications for input with action */
    &--action {
        .jkl-text-input__input {
            padding-right: $text-input-height;
        }
    }

    /* Modifications for compact variant (also inline) */
    *[data-compactlayout] &,
    &--compact,
    &--inline {
        .jkl-text-input__input {
            @include jkl-text-style("compact/body");
            height: $text-input-height--compact;
        }
        .jkl-text-input__action-button {
            height: $text-input-height--compact;
        }
        .jkl-text-input__action-icon {
            width: rem(18px);
        }
    }

    /* Modifications for dark mode */
    &--inverted {
        & .jkl-text-input__input {
            color: $hvit;
            background-color: transparent;
            box-shadow: inset 0 0 0 rem(1px) $hvit, 0 0 0 0 $hvit;

            &::placeholder {
                color: $gra-50;
            }

            &::selection {
                background-color: transparentize($info--darkbg, 0.75);
            }

            &:focus,
            &:hover {
                box-shadow: inset 0 0 0 rem(1px) $info--darkbg, 0 0 0 rem(1px) $info--darkbg;
            }

            &[aria-invalid="true"],
            &:invalid {
                box-shadow: inset 0 0 0 rem(1px) $feil--darkbg, 0 0 0 0 $feil--darkbg;

                &::selection {
                    background-color: transparentize($feil--darkbg, 0.75);
                }

                &:focus,
                &:hover {
                    box-shadow: inset 0 0 0 rem(1px) $feil--darkbg, 0 0 0 rem(1px) $feil--darkbg;
                }
            }
        }

        & .jkl-text-input__action-button:hover,
        & .jkl-text-input__action-button:focus {
            color: $info--darkbg;
        }
    }
}

.jkl-text-area {
    height: auto;
    width: 100%;
    & .jkl-text-input__input {
        @include motion("standard");
        transition-property: height, box-shadow;
        font-weight: normal;
        width: 100%;
        resize: none; // Disable textarea resize
    }
}

/* Utility classes for number of rows */
@for $num from 3 through 10 {
    .jkl-text-input__input--#{$num}-rows:focus,
    .jkl-text-input__input--#{$num}-rows:not(:placeholder-shown) {
        height: $text-input-line-height * $num + $text-input-padding * 2;
        @include small-device {
            height: $text-input-line-height--compact * $num + $text-input-padding * 2;
        }
        .jkl-text-input--compact & {
            height: $text-input-line-height--compact * $num + $text-input-padding * 2;
        }
    }
}
