@use "~@fremtind/jkl-core/jkl";

@import "~@fremtind/jkl-core/mixins/_all.scss";
@import "~@fremtind/jkl-core/_functions.scss";

$smiley-size: rem(40px);
$smileys-max-width: $smiley-size * 9; // 5 smileys med fire like store mellomrom
$max-feedback-input-width: 30rem;

@include jkl.helper-light-mode-variables {
    --jkl-feedback--step-color: #{jkl.$color-stein};
    --jkl-feedback-smiley-color: #{jkl.$color-stein};
    --jkl-feedback-smiley-color--hover: #{jkl.$color-granitt};
}

@include jkl.helper-dark-mode-variables {
    --jkl-feedback--step-color: #{jkl.$color-svaberg};
    --jkl-feedback-smiley-color: #{jkl.$color-svaberg};
    --jkl-feedback-smiley-color--hover: #{jkl.$color-snohvit};
}

@keyframes show {
    from {
        transform: translate3d(0, 0.5rem, 0);
        opacity: 0;
    }
}

.jkl-feedback {
    max-width: rem(550px);

    &__submit-wrapper {
        width: 100%;
        transition-property: height;
        @include motion(standard, expressive);

        &--hidden {
            display: none;
        }
    }

    &__step-counter {
        @include jkl.text-style("body");
        color: var(--jkl-feedback--step-color);
        margin-bottom: jkl.$spacing-m;
    }

    &__fade-in {
        animation: show 0.25s ease-out;
    }
}

.jkl-feedback-smileys {
    margin-top: jkl.$spacing-xs;
    display: flex;
    justify-content: space-between;
    width: 100%;
    max-width: $smileys-max-width;
    flex-wrap: nowrap;
    gap: jkl.$spacing-s;
}

.jkl-feedback-smiley-option {
    display: inline-block;
    position: relative;
    cursor: pointer;
    height: $smiley-size;
    width: $smiley-size;
    color: var(--jkl-feedback-smiley-color);
    transform: translate3d(0, 0, 0);

    @include motion("standard");
    transition-property: transform, color;

    &::before,
    &::after {
        content: "";
        position: absolute;
        border-radius: 50%;
        opacity: 0;

        @include motion("standard");
        transition-property: opacity;
    }

    &::after {
        top: rem(-2px);
        right: rem(-2px);
        bottom: rem(-2px);
        left: rem(-2px);
        box-shadow: 0 0 0 rem(2px) currentColor;
    }

    &::before {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        box-shadow: 0 rem(2px) rem(30px) rgb(0 0 0 / 10%);
    }

    &:hover {
        color: var(--jkl-feedback-smiley-color--hover);
    }

    input:checked + & {
        color: var(--jkl-feedback-smiley-color--hover);
        transform: translate3d(0, -20%, 0);

        &::before {
            opacity: 1;
        }
    }

    input:focus + &::after {
        @include keyboard-navigation {
            opacity: 1;
        }
    }
}
