@use "~@fremtind/jkl-core/jkl";
@import "~@fremtind/jkl-core/mixins/all.scss";
@import "~@fremtind/jkl-core/_functions.scss";

$bounding-touch-size: rem(48px);
$hamburger-line-height: rem(2px);
$hamburger-icon-width: rem(35px);
$hamburger-line-spacing: rem(-8px);

$hamburger-color: jkl.$color-granitt;
$hamburger-focus-color: jkl.$color-stein;

$hamburger-color--inverted: jkl.$color-snohvit;
$hamburger-focus-color--inverted: jkl.$color-svaberg;

@include jkl.helper-light-mode-variables {
    --hamburger-color: #{$hamburger-color};
    --hamburger-focus-color: #{$hamburger-focus-color};
}

@include jkl.helper-dark-mode-variables {
    --hamburger-color: #{$hamburger-color--inverted};
    --hamburger-focus-color: #{$hamburger-focus-color--inverted};
}

.jkl-hamburger {
    @include reset-outline;
    border: none;
    outline: none;
    cursor: pointer;
    background-color: transparent;
    height: $bounding-touch-size;
    width: $bounding-touch-size;
    padding: 0;
    justify-content: center;
    position: relative;

    color: $hamburger-color;
    color: var(--hamburger-color);

    &--label-before {
        transform: rotate(180deg);

        .jkl-content-toggle__first,
        .jkl-content-toggle__secondary {
            transform: rotate(180deg);
        }
    }

    &:hover {
        .jkl-hamburger__inner {
            &::before {
                top: calc(#{$hamburger-line-spacing} * 1.5);
            }

            &::after {
                bottom: calc(#{$hamburger-line-spacing} * 1.5);
            }
        }

        .jkl-hamburger__label.jkl-hamburger__label--animated .jkl-content-toggle__slider {
            transform: scale(1.2);
            top: 0.4rem;
        }
    }

    @include keyboard-navigation {
        &:focus {
            box-shadow: 0 0 0 rem(2px) $hamburger-focus-color;
            box-shadow: 0 0 0 rem(2px) var(--hamburger-focus-color);
        }
    }

    &__label {
        .jkl-content-toggle__slider {
            position: absolute;
            left: calc(#{$hamburger-icon-width} * 0.9);
            top: 0.5rem;
            transition-property: transform top;
            transform-origin: center;
            transform: scale(1);

            @include jkl.text-style("body");
            @include motion(standard, expressive);
        }
    }

    &__inner {
        position: absolute;
        display: block;
        top: 50%;
        transform: translateX(20%);

        &::before,
        &::after {
            content: "";
            display: block;
            transition-property: transform;
            transition-timing-function: ease;
            transition-timing-function: ease;
        }

        &::before {
            top: $hamburger-line-spacing;
        }
        &::after {
            bottom: $hamburger-line-spacing;
        }
    }

    &__inner,
    &__inner::before,
    &__inner::after {
        width: $hamburger-icon-width;
        height: $hamburger-line-height;
        background-color: currentColor;
        position: absolute;

        transition-property: background-color, transform, top, bottom;

        @include motion(standard, expressive);
    }

    &--is-open {
        &:hover {
            .jkl-hamburger__inner::before {
                top: 0;
                transform: rotate(-45deg) scale3d(1.25, 1, 1);
            }
            .jkl-hamburger__inner::after {
                bottom: 0;
                transform: rotate(45deg) scale3d(1.25, 1, 1);
            }
        }

        & .jkl-hamburger {
            &__inner,
            &__inner::before,
            &__inner::after {
                width: calc(#{$hamburger-icon-width} - 3px);
            }
        }

        & .jkl-hamburger__inner {
            margin: auto;
            transform: rotate(-180deg) translateX(-25%);
            background-color: transparent;
        }
        & .jkl-hamburger__inner::before {
            top: 0;
            transform: rotate(-45deg);
        }
        & .jkl-hamburger__inner::after {
            bottom: 0;
            transform: rotate(45deg);
        }
    }

    &--inverted {
        color: $hamburger-color--inverted;

        html:not([data-mousenavigation]) &:focus {
            box-shadow: 0 0 0 rem(2px) $hamburger-focus-color--inverted;
        }
    }
}
