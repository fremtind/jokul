@use "~@fremtind/jkl-core/jkl";

@include jkl.light-mode-variables {
    --jkl-expand-button-text-color: #{jkl.$color-granitt};
    --jkl-expand-button-focus-color: #{jkl.$color-granitt};
}

@include jkl.dark-mode-variables {
    --jkl-expand-button-text-color: #{jkl.$color-snohvit};
    --jkl-expand-button-focus-color: #{jkl.$color-snohvit};
}

@mixin _expanded-arrow($px) {
    .jkl-expand-button__arrow {
        transform: translateY(jkl.rem($px));
    }
}

@include jkl.comfortable-density-variables {
    @include jkl.declare-font-variables("jkl-expand-button", "body");

    --jkl-expand-button-arrow-width: #{jkl.rem(16px)};
}

@include jkl.compact-mode {
    @include jkl.declare-font-variables("jkl-expand-button", "small");

    --jkl-expand-button-arrow-width: #{jkl.rem(14px)};
}

.jkl-expand-button {
    $_animation-timing: jkl.timing("snappy") jkl.easing("focus");
    $_focus-ring-width: jkl.rem(2px);

    @include jkl.reset-outline;
    @include jkl.use-font-variables("jkl-expand-button");

    background-color: transparent;
    cursor: pointer;
    color: var(--jkl-expand-button-text-color);
    padding: 0;
    transition: transform $_animation-timing, border $_animation-timing;
    min-width: unset;
    position: relative;

    &::after {
        $_expand-button-border-width: jkl.rem(1px);
        border: solid $_focus-ring-width transparent;
        box-shadow: none;
        transition: box-shadow $_animation-timing;
        content: "";
        position: absolute;
        bottom: -($_expand-button-border-width);
        left: -($_expand-button-border-width);
        right: -($_expand-button-border-width);
        top: -($_expand-button-border-width);
    }

    html:not([data-mousenavigation]):not([data-touchnavigation]) &:focus {
        border: none;

        &::after {
            box-shadow: 0 0 0 $_focus-ring-width var(--jkl-expand-button-focus-color);
        }
    }

    &:hover,
    html:not([data-mousenavigation]):not([data-touchnavigation]) &:focus {
        @include _expanded-arrow(3px);
        color: var(--jkl-expand-button-focus-color);
    }

    &--expanded {
        @include _expanded-arrow(3px);
        @include jkl.no-grow-bold;

        &:hover {
            @include _expanded-arrow(0);
        }
    }

    &--icon-only {
        .jkl-expand-button__arrow {
            margin: jkl.$spacing-2xs jkl.$spacing-xs;
        }
    }

    &__arrow {
        @include jkl.motion;

        display: inline-block;
        margin-left: jkl.$spacing-xs;
        margin-bottom: jkl.rem(-3px);

        .jkl-expand-button--expanded & {
            margin-bottom: 0;
        }

        --jkl-icon-width: var(--jkl-expand-button-arrow-width);

        .jkl-icon--small {
            --jkl-icon-width: var(--jkl-expand-button-arrow-width);
        }

        @include jkl.forced-colors-svg-fallback($stroke: ButtonText);
    }

    @include jkl.forced-colors-mode {
        &,
        &::after {
            border-top-style: none;
            border-right-style: none;
            border-left-style: none;
        }
    }
}

.jkl-expand-section {
    &__content-wrapper {
        @include jkl.motion;
        transition-property: height;
    }

    &__content {
        height: auto;
        padding: jkl.$spacing-m 0 jkl.$spacing-xl 0;
    }
}
