@charset "UTF-8";
@use "@fremtind/jkl-core/jkl";

.jkl-icon {
    --jkl-icon-size: calc(1em / 20 * 24);

    display: inline;

    &--animated {
        display: block;
    }

    &,
    &__icon {
        width: var(--jkl-icon-size, #{jkl.rem(20px)});
        height: var(--jkl-icon-size, #{jkl.rem(20px)});
        color: currentColor;
    }

    // Default: inherit, regular
    &__icon--small,
    &__icon--medium {
        display: none;
    }

    &__icon--bold {
        display: none;
    }

    &--small {
        --jkl-icon-size: #{jkl.rem(20px)};
    }

    &--medium {
        --jkl-icon-size: #{jkl.rem(24px)};
    }

    @include jkl.forced-colors-svg-fallback($stroke: CanvasText);
}

$_icon-sizes: ("small", "medium", "inherit");
$_icon-weights: ("regular", "bold");

@each $size in $_icon-sizes {
    .jkl-icon--#{$size}:not(.jkl-icon--bold) {
        @each $_size in $_icon-sizes {
            .jkl-icon__icon--#{$_size} {
                &.jkl-icon__icon--regular {
                    @if $_size == $size {
                        display: unset;
                    } @else {
                        display: none;
                    }
                }

                &.jkl-icon__icon--bold {
                    display: none;
                }
            }
        }
    }

    .jkl-icon--#{$size}.jkl-icon--bold {
        @each $_size in $_icon-sizes {
            .jkl-icon__icon--#{$_size} {
                &.jkl-icon__icon--regular {
                    display: none;
                }

                &.jkl-icon__icon--bold {
                    @if $_size == $size {
                        display: unset;
                    } @else {
                        display: none;
                    }
                }
            }
        }
    }
}

[data-layout-density="compact"],
[data-density="compact"] {
    @each $size in $_icon-sizes {
        .jkl-icon--#{$size}:not(.jkl-icon--bold) {
            .jkl-icon__icon--inherit,
            .jkl-icon__icon--medium {
                display: none;
            }

            .jkl-icon__icon--small.jkl-icon__icon--regular {
                display: unset;
            }
        }

        .jkl-icon--#{$size}.jkl-icon--bold {
            .jkl-icon__icon--inherit,
            .jkl-icon__icon--medium {
                display: none;
            }

            .jkl-icon__icon--small.jkl-icon__icon--bold {
                display: unset;
            }
        }
    }
}

$_regular-headings: ("heading-1", "heading-2");
$_bold-headings: ("heading-3", "heading-4", "heading-5");

// Overstyr eventuell compact settings
@each $_heading in $_regular-headings {
    .jkl-#{$_heading} {
        @each $_size in $_icon-sizes {
            .jkl-icon--#{$_size} {
                .jkl-icon__icon--#{$_size}.jkl-icon__icon--bold {
                    display: none;
                }
                .jkl-icon__icon--#{$_size}.jkl-icon__icon--regular {
                    display: unset;
                }
            }
        }
    }
}

@each $_heading in $_bold-headings {
    .jkl-#{$_heading} {
        @each $_size in $_icon-sizes {
            .jkl-icon--#{$_size} {
                .jkl-icon__icon--#{$_size}.jkl-icon__icon--regular {
                    display: none;
                }
                .jkl-icon__icon--#{$_size}.jkl-icon__icon--bold {
                    display: unset;
                }
            }
        }
    }
}

.jkl-animated-horizontal-arrows,
.jkl-animated-vertical-arrows {
    overflow: hidden;

    &__slider {
        display: flex;
        @include jkl.motion(standard, expressive);
        transition-delay: calc(#{jkl.timing("expressive")} * (1 / 3));
        transition-property: transform;
    }

    &__arrow {
        flex-shrink: 0;
    }
}

.jkl-animated-vertical-arrows__slider {
    flex-direction: column;
    height: calc(var(--jkl-icon-size) * 2);

    &[data-show="down"] {
        transform: translate3d(0, 0, 0);
    }

    &[data-show="up"] {
        transform: translate3d(0, -50%, 0);
    }
}

.jkl-animated-horizontal-arrows__slider {
    flex-direction: row;
    width: calc(var(--jkl-icon-size) * 2);

    &[data-show="right"] {
        transform: translate3d(0, 0, 0);
    }

    &[data-show="left"] {
        transform: translate3d(-50%, 0, 0);
    }
}

.jkl-icons-animated__plus {
    svg {
        @include jkl.motion("easeInBounceOut", "expressive");
        transition-property: transform;
        transform-origin: 50% 50%;
    }

    &--plus svg {
        transform: rotate(0);
    }

    &--close svg {
        transform: rotate(135deg);
    }
}
