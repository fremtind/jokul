@import "~@fremtind/jkl-core/variables/_all.scss";
@import "~@fremtind/jkl-core/mixins/_all.scss";

$transition-timing: 200ms cubic-bezier(0.7, 0, 0.3, 1);

$value-height: $line-height-4;
$value-font-size: $font-size-6;

$side-padding: $component-spacing--small;
$bottom-padding: $component-spacing--small;

$arrow-height: rem(16px);
$arrow-width: rem(13px);

$select-border-color: $svart;
$select-text-color: $svart;
$select-text-disabled-color: $gra-60;
$select-background-color: $hvit;
$select-open-background-color: $hvit;
$select-focus-color: $info;
$select-error-color: $feil;

$select-border-color--inverted: $hvit;
$select-text-color--inverted: $hvit;
$select-background-color--inverted: transparent;
$select-open-background-color--inverted: $gra-80;
$select-focus-color--inverted: $info--darkbg;
$select-error-color--inverted: $feil--darkbg;

:root,
[data-theme="light"] {
    --select-border-color: #{$select-border-color};
    --select-text-color: #{$select-text-color};
    --select-background-color: #{$select-background-color};
    --select-open-background-color: #{$select-open-background-color};
    --select-focus-color: #{$select-focus-color};
    --select-error-color: #{$select-error-color};
}

[data-theme="dark"] {
    --select-border-color: #{$select-border-color--inverted};
    --select-text-color: #{$select-text-color--inverted};
    --select-background-color: #{$select-background-color--inverted};
    --select-open-background-color: #{$select-open-background-color--inverted};
    --select-focus-color: #{$select-focus-color--inverted};
    --select-error-color: #{$select-error-color--inverted};
}

.jkl-select {
    @include reset-outline;
    display: block;
    position: relative;

    /* Resets for native styling, especially in Firefox/IE */
    & *:focus {
        outline: none;
    }
    & select {
        appearance: none;
        &::ms-expand {
            display: none;
        }
        &:-moz-focusring {
            color: transparent;
            text-shadow: 0 0 0 $select-text-color;
            text-shadow: 0 0 0 var(--select-text-color);
        }
        & option {
            font-weight: normal;
            font-family: sans-serif;
            color: $select-text-color;
            &:disabled {
                color: $select-text-disabled-color;
            }
        }
    }
    /* End of resets */

    &__outer-wrapper {
        position: relative;
        width: 15rem;
        min-width: 7rem;
    }

    &__search-input {
        box-sizing: border-box;
        color: $select-text-color !important;
        color: var(--select-text-color) !important;
    }

    /* The main select element showing the current value */
    &__search-input,
    &__button {
        @include jkl-text-style("desktop/body");
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        background-color: $select-background-color;
        background-color: var(--select-background-color);
        color: $select-text-color;
        color: var(--select-text-color);

        height: rem(48px);
        border-radius: rem(3px);
        border: rem(1px) solid $select-border-color;
        border: rem(1px) solid var(--select-border-color);
        box-shadow: 0 0 0 0 $select-border-color;
        box-shadow: 0 0 0 0 var(--select-border-color);

        padding: $component-spacing--small $component-spacing--large;
        padding-right: $arrow-width + 2 * $component-spacing--large;
        text-align: left;
        width: 100%;

        @include motion("standard");
        transition-property: color, border-color, box-shadow;

        &:hover,
        &:focus {
            border-color: $select-focus-color;
            border-color: var(--select-focus-color);
            color: $select-focus-color;
            color: var(--select-focus-color);
            box-shadow: 0 0 0 rem(1px) $select-focus-color;
            box-shadow: 0 0 0 rem(1px) var(--select-focus-color);

            & ~ .jkl-select__arrow {
                color: $select-focus-color;
                color: var(--select-focus-color);
            }
        }

        &:hover {
            & ~ .jkl-select__arrow {
                transform: translateY(calc(-50% + #{rem(3px)}));
            }
        }
    }

    /* The dropdown arrow */
    &__arrow {
        position: absolute;
        right: $component-spacing--large;
        top: 50%;
        transform: translateY(-50%);
        color: inherit;
    }

    /* The wrapper for the dropdown list */
    &__options-menu {
        @include motion("standard");
        transition-property: height;
        position: absolute;
        left: rem(-1px);
        right: rem(-1px);
        top: 100%;
        z-index: $z-index--dropdown;

        background-color: $select-open-background-color;
        background-color: var(--select-open-background-color);
        border: rem(2px) solid $select-focus-color;
        border: rem(2px) solid var(--select-focus-color);
        border-top: none;
        border-radius: 0 0 rem(3px) rem(3px);
        box-sizing: border-box;

        overflow-y: auto;
        max-height: 60vh;
    }

    /* A wrapper for the list items (<ul>) */
    &__option-wrapper {
        margin: 0;
        padding: 0;

        list-style-type: none;
        -webkit-overflow-scrolling: touch;
    }

    /* The individual options in the dropdown list */
    &__option {
        @include jkl-text-style("desktop/body");
        color: unset;
        border: 0; // removes native styling
        width: 100%;
        background-color: inherit;
        min-height: rem(48px);
        padding: $component-spacing--small $component-spacing--large;
        clip-path: inset($component-spacing--small $component-spacing--large);
        clip: rect();
        text-align: left;
        @include motion("standard");
        transition-property: color, background-color;
        position: relative;

        &:before {
            content: "";
        }

        &:focus {
            color: $select-focus-color;
            color: var(--select-focus-color);

            &::before {
                content: "â†’ ";
            }
        }

        &:hover {
            color: $select-focus-color;
            color: var(--select-focus-color);
        }

        &[aria-selected="true"]:not(:focus) {
            &::after {
                $mask-image-url: url('data:image/svg+xml; utf8, <svg width="17" height="13" viewBox="0 0 17 13" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 8.52632L4.6 12L16 1" stroke="black"/></svg>');
                background-color: $select-focus-color;
                background-color: var(--select-focus-color);
                content: "";
                /* autoprefixer with Browserlist="Chrome >= 70" will not generate 
                 * a prefix for this even if Chrome 70 doesn't support mask-image
                 */
                -webkit-mask-image: $mask-image-url;
                mask-image: $mask-image-url;
                display: inline-block;
                margin-left: $component-spacing--xs;
                width: 17px;
                height: 13px;
            }
        }
    }

    /* --------
       VARIANTS
       -------- */

    &--inline {
        display: inline-block;
        vertical-align: top;
    }

    &--open {
        .jkl-select__search-input,
        .jkl-select__button {
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
            border-color: $select-focus-color;
            border-color: var(--select-focus-color);
            background-color: $select-open-background-color;
            background-color: var(--select-open-background-color);
            box-shadow: 0 0 0 rem(1px) $select-focus-color;
            box-shadow: 0 0 0 rem(1px) var(--select-focus-color);

            &:hover ~ .jkl-select__arrow {
                transform: translateY(calc(-50% + #{rem(-3px)}));
            }
        }
    }

    &--invalid {
        .jkl-select__search-input,
        .jkl-select__button {
            border-color: $select-error-color;
            border-color: var(--select-error-color);
        }
        .jkl-select__search-input:hover,
        .jkl-select__search-input:focus,
        .jkl-select__button:hover,
        .jkl-select__button:focus {
            box-shadow: 0 0 0 rem(1px) $select-error-color;
            box-shadow: 0 0 0 rem(1px) var(--select-error-color);
            color: $select-error-color;
            color: var(--select-error-color);

            & ~ .jkl-select__arrow {
                color: $select-error-color;
                color: var(--select-error-color);
            }
        }

        &.jkl-select--open {
            .jkl-select__search-input,
            .jkl-select__button {
                border-color: $select-focus-color;
                border-color: var(--select-focus-color);
                box-shadow: 0 0 0 rem(1px) $select-focus-color;
                box-shadow: 0 0 0 rem(1px) var(--select-focus-color);
                &:hover,
                &:focus {
                    & ~ .jkl-select__arrow {
                        color: $select-focus-color;
                        color: var(--select-focus-color);
                    }
                }
            }
        }
    }

    &--inverted {
        .jkl-select__search-input,
        .jkl-select__button {
            background-color: $select-background-color--inverted;
            border-color: $select-border-color--inverted;
            color: $select-text-color--inverted;
        }

        .jkl-select__search-input {
            color: $select-text-color--inverted !important;
        }

        .jkl-select__search-input:hover,
        .jkl-select__search-input:focus,
        .jkl-select__button:hover,
        .jkl-select__button:focus,
        &.jkl-select--open .jkl-select__search-input,
        &.jkl-select--open .jkl-select__button {
            box-shadow: 0 0 0 rem(1px) $select-focus-color--inverted;
            border-color: $select-focus-color--inverted;

            & ~ .jkl-select__arrow {
                color: $select-focus-color--inverted;
            }
        }

        .jkl-select__option {
            &:focus {
                color: $select-focus-color--inverted;

                &::before {
                    content: "â†’";
                }
            }

            &[aria-selected="true"]:not(:focus)::after {
                background-color: $select-focus-color--inverted;
            }

            &:hover {
                color: $select-focus-color--inverted;
            }
        }

        .jkl-select__options-menu,
        &.jkl-select--open .jkl-select__search-input,
        &.jkl-select--open .jkl-select__button {
            border-color: $select-focus-color--inverted;
            background-color: $select-open-background-color--inverted;
        }

        &.jkl-select--invalid {
            .jkl-select__search-input,
            .jkl-select__button {
                border-color: $select-error-color--inverted;

                &:hover,
                &:focus {
                    box-shadow: 0 0 0 rem(1px) $select-error-color--inverted;
                    color: $select-error-color--inverted;
                    & ~ .jkl-select__arrow {
                        color: $select-error-color--inverted;
                    }
                }
            }

            &.jkl-select--open {
                .jkl-select__search-input,
                .jkl-select__button {
                    border-color: $select-focus-color--inverted;
                    box-shadow: 0 0 0 rem(1px) $select-focus-color--inverted;
                    &:hover,
                    &:focus {
                        color: $select-focus-color--inverted;
                        & ~ .jkl-select__arrow {
                            color: $select-focus-color--inverted;
                        }
                    }
                }
            }
        }
    }

    @include compact-mode {
        & .jkl-select__search-input,
        & .jkl-select__button {
            @include jkl-text-style("compact/body");
            height: rem(40px);
        }
        & .jkl-select__option {
            @include jkl-text-style("compact/body");
            min-height: rem(40px);
        }
    }
}

.jkl-expand-arrow {
    height: $arrow-height;
    width: $arrow-width;
    clip: rect(auto, auto, auto, auto);
    clip-path: inset(0 0 0 0);

    pointer-events: none;

    @include motion("standard");
    transition-property: transform, color;

    &__up,
    &__down {
        margin: 0;
        padding: 0;
        display: inline-block;
        position: absolute;
        left: 0;
        height: $arrow-height;
        width: $arrow-width;
        @include motion("standard");
        transition-property: transform;
    }

    &__up {
        top: 100%;
    }

    &__down {
        top: 0;
    }

    &--expanded {
        .jkl-expand-arrow__up,
        .jkl-expand-arrow__down {
            @include motion("standard", "expressive");
            transform: translate(0, -100%);
        }
    }
}
