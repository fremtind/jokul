@charset "UTF-8";
@use "sass:color";
@use "sass:math";
@use "~@fremtind/jkl-core/jkl";
@use "~@fremtind/jkl-core/jkl/colors";

$_select-focus-color: jkl.$color-granitt;
$_select-search-input-selection-color: color.scale(
    $color: $_select-focus-color,
    $alpha: -80%,
);

$_select-focus-color--inverted: jkl.$color-snohvit;
$_select-search-input-selection-color--inverted: color.scale(
    $color: $_select-focus-color--inverted,
    $alpha: -75%,
);

@include jkl.light-mode-variables {
    --jkl-select-border-color: #{jkl.$color-stein};
    --jkl-select-text-color: #{jkl.$color-granitt};
    --jkl-select-text-disabled-color: #{jkl.$color-stein};
    --jkl-select-background-color: transparent;
    --jkl-select-open-background-color: #{jkl.$color-hvit};
    --jkl-select-focus-color: #{$_select-focus-color};
    --jkl-select-error-background-color: #{colors.varslingsfarge("feil")};
    --jkl-select-error-text-color: #{jkl.$color-granitt};
    --jkl-select-hover-option-color: #{jkl.$color-granitt};
    --jkl-select-hover-option-background-color: #{jkl.$color-varde};
    --jkl-select-search-input-selection-color: #{$_select-search-input-selection-color};
    --jkl-select-search-input-error-selection-color: #{$_select-search-input-selection-color};
}

@include jkl.dark-mode-variables {
    --jkl-select-border-color: #{jkl.$color-svaberg};
    --jkl-select-text-color: #{jkl.$color-snohvit};
    --jkl-select-text-disabled-color: #{jkl.$color-svaberg};
    --jkl-select-background-color: transparent;
    --jkl-select-open-background-color: #{jkl.$color-svart};
    --jkl-select-focus-color: #{$_select-focus-color--inverted};
    --jkl-select-error-background-color: #{colors.varslingsfarge("feil")};
    --jkl-select-error-text-color: #{jkl.$color-granitt};
    --jkl-select-hover-option-color: #{jkl.$color-snohvit};
    --jkl-select-hover-option-background-color: #{jkl.$color-stein};
    --jkl-select-search-input-selection-color: #{$_select-search-input-selection-color--inverted};
    --jkl-select-search-input-error-selection-color: #{$_select-search-input-selection-color};
}

@include jkl.comfortable-density-variables {
    @include jkl.declare-font-variables("jkl-select", "body");

    --jkl-select-input-height: #{jkl.rem(48px)};
    --jkl-select-arrow-right: #{jkl.$spacing-8};
    --jkl-select-button-padding: #{jkl.$spacing-8} #{jkl.rem(36px)} #{jkl.$spacing-8} #{jkl.$spacing-12};
    --jkl-select-search-input-padding: var(--jkl-select-button-padding);
    --jkl-select-native-padding: 0 #{jkl.$spacing-40} 0 #{jkl.$spacing-8};
    --jkl-select-option-padding: #{jkl.$spacing-8} #{jkl.$spacing-12};

    @include jkl.small-device {
        --jkl-select-input-height: #{jkl.rem(44px)};
    }
}

@include jkl.compact-density-variables {
    @include jkl.declare-font-variables("jkl-select", "small");

    --jkl-select-input-height: #{jkl.rem(32px)};
    --jkl-select-arrow-right: #{jkl.rem(4px)};
    --jkl-select-button-padding: #{jkl.$spacing-4} #{jkl.$spacing-32} #{jkl.$spacing-4} #{jkl.$spacing-8};
    --jkl-select-search-input-padding: #{jkl.$spacing-4} #{jkl.$spacing-8};
    --jkl-select-native-padding: #{jkl.$spacing-4} #{jkl.$spacing-24} #{jkl.$spacing-4} #{jkl.$spacing-4};
    --jkl-select-option-padding: #{jkl.$spacing-4} #{jkl.$spacing-8};
}

.jkl-select {
    @include jkl.reset-outline;
    display: block;
    position: relative;

    & *:focus {
        outline: none;
    }

    & select {
        appearance: none;

        &::ms-expand {
            display: none;
        }

        &:-moz-focusring {
            color: transparent;
            text-shadow: 0 0 0 var(--jkl-select-text-color);
        }

        & option {
            font-weight: normal;
            font-family: sans-serif;
            color: var(--jkl-select-text-color);
            background-color: var(--jkl-select-open-background-color);

            &:disabled {
                color: var(--jkl-select-text-disabled-color);
            }
        }
    }

    &__outer-wrapper {
        position: relative;
        width: 15rem;
        min-width: 7rem;
        max-width: 100%;
    }

    &__search-input {
        box-sizing: border-box;
        padding: var(--jkl-select-search-input-padding);
        color: var(--jkl-select-text-color);

        &::selection {
            background-color: var(--jkl-select-search-input-selection-color);

            [data-theme="dark"] & {
                background-color: var(--jkl-select-search-input-selection-color);
            }
        }
    }

    &__search-input,
    &__button {
        @include jkl.use-font-variables("jkl-select");
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        background-color: var(--jkl-select-background-color);
        color: var(--jkl-select-text-color);
        cursor: pointer;

        height: var(--jkl-select-input-height);
        border-radius: jkl.rem(3px);
        border: jkl.rem(1px) solid var(--jkl-select-border-color);
        box-shadow: 0 0 0 jkl.rem(1px) transparent;
        text-align: left;
        width: 100%;

        @include jkl.motion;
        transition-property: color, border-color, box-shadow;

        &:focus {
            border-color: var(--jkl-select-focus-color);
            color: var(--jkl-select-focus-color);
            box-shadow: 0 0 0 jkl.rem(1px) var(--jkl-select-focus-color);
            background-color: var(--jkl-select-open-background-color);
        }

        &:hover {
            border-color: var(--jkl-select-focus-color);
            box-shadow: 0 0 0 jkl.rem(1px) var(--jkl-select-focus-color);

            & ~ .jkl-select__arrow {
                transform: translateY(calc(-50% + #{jkl.rem(3px)}));
            }
        }
    }

    &__button {
        padding: var(--jkl-select-button-padding);
    }

    & select.jkl-select__button {
        padding: var(--jkl-select-native-padding);
    }

    &__arrow {
        pointer-events: none;
        position: absolute;
        right: var(--jkl-select-arrow-right);
        top: 50%;
        transform: translateY(-50%);

        @include jkl.motion;
        transition-property: transform, color;

        @include jkl.forced-colors-svg-fallback($stroke: CanvasText, $fill: CanvasText);
    }

    &__options-menu {
        @include jkl.motion;
        transition-property: height;
        position: absolute;
        left: jkl.rem(-1px);
        right: jkl.rem(-1px);
        top: 100%;
        z-index: jkl.$z-index--dropdown;

        background-color: var(--jkl-select-open-background-color);
        border: jkl.rem(2px) solid var(--jkl-select-focus-color);
        border-top: none;
        border-radius: 0 0 jkl.rem(3px) jkl.rem(3px);
        box-sizing: border-box;

        overflow-y: auto;
        // Sett makshøyde på listen til høyden av (maxShownOptions + 0.5) ganger høyden på ett enlinjes valg
        max-height: calc(calc(var(--jkl-select-max-shown-options, 5) + 0.5) * var(--jkl-select-input-height));
    }

    &__option-wrapper {
        margin: 0;
        padding: 0;

        list-style-type: none;
        -webkit-overflow-scrolling: touch;
    }

    &__option {
        @include jkl.use-font-variables("jkl-select");
        color: unset;
        display: flex; // avoids wrapping long names "under" the focus arrow
        align-items: flex-start;
        border: 0; // removes native styling
        width: 100%;
        background-color: inherit;
        min-height: var(--jkl-select-input-height);
        text-align: left;
        @include jkl.motion;
        transition-property: color, background-color;
        position: relative;
        padding: var(--jkl-select-option-padding);
        cursor: pointer;

        /* For å unngå "dobbel" markering skrur vi av markering på hover i React-
        komponenten med data-focus="controlled". Uten dette satt vil valgene
        markeres ved hover som normalt. */
        &:focus,
        :not([data-focus="controlled"]) > &:hover {
            color: var(--jkl-select-hover-option-color);
            background-color: var(--jkl-select-hover-option-background-color);
        }
    }

    /* --------
       VARIANTS
       -------- */

    &--inline {
        display: inline-block;
        vertical-align: top;
    }

    &--open {
        .jkl-select__search-input,
        .jkl-select__button {
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
            border-color: var(--jkl-select-focus-color);
            background-color: var(--jkl-select-open-background-color);
            box-shadow: 0 0 0 jkl.rem(1px) var(--jkl-select-focus-color);

            &:hover ~ .jkl-select__arrow {
                transform: translateY(calc(-50% + #{jkl.rem(-3px)}));
            }
        }
    }

    &--invalid {
        .jkl-select__search-input,
        .jkl-select__button {
            background-color: var(--jkl-select-error-background-color);
        }

        .jkl-select__search-input,
        .jkl-select__button,
        .jkl-select__arrow {
            color: var(--jkl-select-error-text-color);
        }

        /* Color of text selection */
        .jkl-select__search-input::selection {
            background-color: var(--jkl-select-search-input-error-selection-color);
        }
    }

    @include jkl.forced-colors-mode {
        // Vi er en button (hvis ikke native) og får ButtonText, men vi later som vi er en select, og den har CanvasText
        & .jkl-select__button,
        & .jkl-select__search-input {
            color: CanvasText;
            border: 2px solid ButtonText;
            background-color: Canvas;
            outline: revert;

            &:hover {
                border-color: Highlight;
            }
        }

        & .jkl-select__option {
            color: CanvasText;

            border-top: 1px solid Canvas;
            border-bottom: 1px solid Canvas;

            &:hover,
            &:focus {
                @include jkl.no-grow-bold;
                border-top: 1px solid Highlight;
                border-bottom: 1px solid Highlight;
            }
        }
    }
}
