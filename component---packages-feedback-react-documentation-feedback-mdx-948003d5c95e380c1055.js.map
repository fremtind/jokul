{"version":3,"file":"component---packages-feedback-react-documentation-feedback-mdx-948003d5c95e380c1055.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/feedback-react/src/followup/useFollowup.ts","webpack://@fremtind/portal/../packages/feedback-react/src/followup/followupContext.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/main-question/mainQuestionContext.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/questions/CheckboxQuestion.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/questions/RadioQuestion.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/questions/TextQuestion.tsx","webpack://@fremtind/portal/../packages/slider-react/build/browser/index.js","webpack://@fremtind/portal/../packages/feedback-react/src/questions/SliderQuestion.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/questions/AddonQuestion.tsx","webpack://@fremtind/portal/../packages/validators-util/build/browser/index.js","webpack://@fremtind/portal/../packages/feedback-react/src/feedbackContext.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/FeedbackSuccess.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/questions/ContactQuestion.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/utils.ts","webpack://@fremtind/portal/../packages/feedback-react/src/followup/Followup.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/main-question/useMainQuestion.ts","webpack://@fremtind/portal/../packages/feedback-react/src/main-question/MainQuestion.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/Feedback.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/presets.tsx","webpack://@fremtind/portal/../packages/feedback-react/documentation/Example.tsx","webpack://@fremtind/portal/../packages/feedback-react/documentation/exampleProps.ts","webpack://@fremtind/portal/../packages/feedback-react/documentation/Feedback.mdx","webpack://@fremtind/portal/../packages/button-react/build/browser/index.js","webpack://@fremtind/portal/../packages/loader-react/build/browser/index.js"],"sourcesContent":["import { Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useRef, useState } from \"react\";\nimport { FeedbackAnswer, FeedbackOption, FollowupQuestion } from \"../types\";\n\ntype CurrentValue = FeedbackOption<string | number> | FeedbackOption<string | number>[] | undefined;\n\ntype Followup = {\n    questions: FollowupQuestion[];\n    values: FeedbackAnswer[] | undefined;\n    step: {\n        number: number;\n        question: FollowupQuestion;\n        isLast: boolean;\n    };\n    currentValue: CurrentValue;\n    setCurrentValue: Dispatch<SetStateAction<CurrentValue>>;\n    submitted: boolean;\n    handleNext: () => void;\n    handleAbort: () => void;\n};\n\nexport const useFollowup = (questions: FollowupQuestion[], onSubmit: (a: FeedbackAnswer[]) => void): Followup => {\n    const [values, setValues] = useState<FeedbackAnswer[]>();\n    const [step, setStep] = useState({\n        number: 0,\n        question: questions[0],\n        isLast: questions.length === 1,\n    });\n    const [shouldSubmit, setShouldSubmit] = useState(false);\n    const [submitted, setSubmitted] = useState(false);\n    const [currentValue, setCurrentValue] = useState<FeedbackOption | FeedbackOption[]>();\n\n    // Store info in a ref to facilitate autosubmit on component unmount,\n    // or when leaving page\n    const followupRef = useRef({\n        values,\n        submitted,\n        onSubmit,\n    });\n\n    // Keep values in ref updated\n    useEffect(() => {\n        followupRef.current = {\n            ...followupRef.current,\n            values,\n            submitted,\n        };\n    }, [values, submitted]);\n\n    // General method for submitting info\n    const _handleSubmit = useCallback(() => {\n        if (!followupRef.current.submitted && followupRef.current.values !== undefined) {\n            followupRef.current.onSubmit(followupRef.current.values);\n        }\n    }, []);\n\n    // Function for handling going to the next step in the form wizard\n    function handleNext(e?: FormEvent<HTMLFormElement>) {\n        e?.preventDefault();\n\n        const value = Array.isArray(currentValue)\n            ? currentValue.map((option) => option.value.toString())\n            : currentValue?.value;\n\n        const newValue = {\n            ...step.question,\n            name: step.question.name || step.question.label,\n            value,\n        };\n\n        setValues((oldValues) => {\n            const filteredValues = oldValues?.filter((oldValue) => oldValue.name !== newValue.name) || [];\n            return [...filteredValues, newValue as FeedbackAnswer];\n        });\n        setCurrentValue(undefined);\n\n        if (step.isLast) {\n            setShouldSubmit(true);\n        } else {\n            setStep((currentStep) => {\n                const newStepNum = currentStep.number + 1;\n                return {\n                    number: newStepNum,\n                    question: questions[newStepNum],\n                    isLast: newStepNum + 1 >= questions.length,\n                };\n            });\n        }\n    }\n\n    // Let the user abort without submitting answers\n    function handleAbort() {\n        setValues(undefined);\n        setCurrentValue(undefined);\n        setStep({\n            number: 0,\n            question: questions[0],\n            isLast: questions.length === 1,\n        });\n        setSubmitted(true);\n    }\n\n    // Submit info after user submits last question\n    useEffect(() => {\n        if (shouldSubmit) {\n            _handleSubmit();\n            setSubmitted(true);\n        }\n    }, [shouldSubmit, _handleSubmit]);\n\n    // Submit info if component unmounts or page unloads\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"beforeunload\", _handleSubmit);\n        }\n        return () => {\n            _handleSubmit();\n            window.removeEventListener(\"beforeunload\", _handleSubmit);\n        };\n    }, [_handleSubmit]);\n\n    return { questions, values, step, currentValue, setCurrentValue, submitted, handleNext, handleAbort };\n};\n","import React, { createContext, useContext } from \"react\";\nimport { FollowupState } from \"../types\";\n\nconst followUpContext = createContext<FollowupState | undefined>(undefined);\n\nexport const useFollowUpContext = (): FollowupState | undefined => useContext(followUpContext);\n\nexport const FollowUpProvider: React.FC<{ state: FollowupState }> = ({ state, children }) => (\n    <followUpContext.Provider value={state}>{children}</followUpContext.Provider>\n);\n","import React, { createContext, useContext } from \"react\";\nimport { FeedbackState } from \"../types\";\n\nconst mainQuestionContext = createContext<FeedbackState | undefined>(undefined);\n\nexport const useMainQuestionContext = (): FeedbackState | undefined => useContext(mainQuestionContext);\n\ninterface Props {\n    state: FeedbackState;\n}\n\nexport const MainQuestionContextProvider: React.FC<Props> = ({ state, children }) => (\n    <mainQuestionContext.Provider value={state}>{children}</mainQuestionContext.Provider>\n);\n","import React, { ChangeEventHandler, useEffect, useRef } from \"react\";\n\nimport { FieldGroup } from \"@fremtind/jkl-field-group-react\";\nimport { Checkbox } from \"@fremtind/jkl-checkbox-react\";\nimport { useFollowUpContext } from \"../followup/followupContext\";\nimport { useMainQuestionContext } from \"../main-question/mainQuestionContext\";\nimport { FeedbackOption, QuestionProps } from \"../types\";\n\nexport const CheckboxQuestion: React.VFC<QuestionProps> = ({ label, name, options, helpLabel, autoFocus = false }) => {\n    const followupContext = useFollowUpContext();\n    const feedbackContext = useMainQuestionContext();\n    const context = followupContext || feedbackContext;\n    const ref = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        if (autoFocus && ref.current) {\n            ref.current.focus();\n        }\n    }, [autoFocus, ref]);\n\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n        const { value } = event.target;\n        const matchingOption = options?.find((option) => option.value.toString() === value);\n        if (!matchingOption) return;\n\n        if (!context?.currentValue) {\n            context?.setCurrentValue([matchingOption]);\n            return;\n        }\n\n        if (Array.isArray(context?.currentValue)) {\n            const found = context.currentValue.find((option) => option === matchingOption);\n            if (found) {\n                context.setCurrentValue((oldValues) =>\n                    (oldValues as FeedbackOption[]).filter((option) => option !== found),\n                );\n            } else {\n                context.setCurrentValue((oldValues) => [...(oldValues as FeedbackOption[]), matchingOption]);\n            }\n        }\n    };\n\n    if (!context) {\n        console.error(\"Questions must be used inside a Followup or Feedback context provider\");\n        return null;\n    }\n\n    return (\n        <FieldGroup variant=\"large\" legend={label} helpLabel={helpLabel}>\n            {options?.map((option, i) => (\n                <Checkbox\n                    key={`${label}-${option.value}`}\n                    name={name || label}\n                    value={option.value.toString()}\n                    onChange={handleChange}\n                    ref={i === 0 ? ref : undefined}\n                >\n                    {option.label}\n                </Checkbox>\n            ))}\n        </FieldGroup>\n    );\n};\n","import React, { ChangeEventHandler, useEffect, useMemo, useRef } from \"react\";\nimport { RadioButtons } from \"@fremtind/jkl-radio-button-react\";\nimport { QuestionProps } from \"../types\";\nimport { useFollowUpContext } from \"../followup/followupContext\";\nimport { useMainQuestionContext } from \"../main-question/mainQuestionContext\";\n\nexport const RadioQuestion: React.VFC<QuestionProps> = ({ label, name, options, helpLabel, autoFocus = false }) => {\n    const followupContext = useFollowUpContext();\n    const feedbackContext = useMainQuestionContext();\n    const context = followupContext || feedbackContext;\n\n    const numOptions = options?.length || 0;\n\n    const ref = useRef<HTMLInputElement>(null);\n    useEffect(() => {\n        if (autoFocus && ref.current) {\n            ref.current.focus();\n        }\n    }, [autoFocus, ref]);\n\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n        const option = options?.find((option) => option.value.toString() === e.target.value);\n        context?.setCurrentValue(option);\n    };\n\n    const selectedValue = useMemo(\n        () =>\n            Array.isArray(context?.currentValue)\n                ? context?.currentValue[0].value.toString()\n                : context?.currentValue?.value.toString(),\n        [context?.currentValue],\n    );\n\n    if (!context) {\n        console.error(\"Questions must be used inside a Followup or Feedback context provider\");\n        return null;\n    }\n\n    return (\n        <RadioButtons\n            ref={ref}\n            variant=\"large\"\n            inline={numOptions < 3}\n            legend={label}\n            name={name || label}\n            choices={options?.map(({ label, value }) => ({ label, value: value.toString() })) || []}\n            selectedValue={selectedValue}\n            onChange={handleChange}\n            helpLabel={helpLabel}\n        />\n    );\n};\n","import React, { ChangeEventHandler, useEffect, useMemo, useRef } from \"react\";\nimport { TextArea } from \"@fremtind/jkl-text-input-react\";\n\nimport { QuestionProps } from \"../types\";\nimport { useFollowUpContext } from \"../followup/followupContext\";\nimport { useMainQuestionContext } from \"../main-question/mainQuestionContext\";\nimport { FeedbackAnswer } from \"../types\";\n\nexport const TextQuestion: React.VFC<QuestionProps> = ({\n    label,\n    name,\n    helpLabel = \"Ikke skriv personlige opplysninger. Tilbakemeldinger som kommer inn her blir ikke besvart, men brukt i videre arbeid med å forbedre tjenestene våre.\",\n    autoFocus = false,\n}) => {\n    const followupContext = useFollowUpContext();\n    const feedbackContext = useMainQuestionContext();\n    const context = followupContext || feedbackContext;\n    const ref = useRef<HTMLTextAreaElement>(null);\n\n    useEffect(() => {\n        if (autoFocus && ref.current) {\n            ref.current.focus();\n        }\n    }, [autoFocus, ref]);\n\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n        const value: FeedbackAnswer = {\n            label,\n            name: name || label,\n            type: \"text\",\n            value: e.target.value,\n        };\n        context?.setCurrentValue(value);\n    };\n\n    const currentValue = useMemo(\n        () =>\n            Array.isArray(context?.currentValue)\n                ? context?.currentValue[0].value.toString()\n                : context?.currentValue?.value.toString(),\n        [context?.currentValue],\n    );\n\n    if (!context) {\n        console.error(\"Questions must be used inside a Followup or Feedback context provider\");\n        return null;\n    }\n\n    return (\n        <TextArea\n            ref={ref}\n            variant=\"large\"\n            label={label}\n            name={name || label}\n            startOpen\n            rows={5}\n            value={currentValue}\n            onChange={handleChange}\n            helpLabel={helpLabel}\n        />\n    );\n};\n","import _extends from '@babel/runtime/helpers/extends';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport cn from 'classnames';\nimport { Label, SupportLabel } from '@fremtind/jkl-core';\n\nvar _excluded = [\"className\", \"label\", \"helpLabel\", \"errorLabel\", \"variant\", \"id\", \"from\", \"to\", \"value\"];\nvar Slider = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      helpLabel = _ref.helpLabel,\n      errorLabel = _ref.errorLabel,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"medium\" : _ref$variant,\n      id = _ref.id,\n      _ref$from = _ref.from,\n      from = _ref$from === void 0 ? 1 : _ref$from,\n      _ref$to = _ref.to,\n      to = _ref$to === void 0 ? 5 : _ref$to,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var numsteps = to - (from - 1);\n\n  var steps = _toConsumableArray(Array(numsteps).keys());\n\n  var _useState = useState(id || \"jkl-slider-\".concat(nanoid(8))),\n      _useState2 = _slicedToArray(_useState, 1),\n      uid = _useState2[0];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      progressWidth = _useState4[0],\n      setProgressWidth = _useState4[1];\n\n  var inputRef = useRef(null);\n  useEffect(function () {\n    var _inputRef$current;\n\n    var gaps = to - from;\n    var totalWidth = ((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.clientWidth) || 0;\n    var partWidth = totalWidth / gaps * ((value || from) - from);\n    setProgressWidth(partWidth);\n  }, [value, inputRef, from, to]); // Sync the internal ref that we need to style the slider with the forwarded ref (if any)\n\n  useEffect(function () {\n    if (!ref) {\n      return;\n    }\n\n    if (typeof ref === \"function\") {\n      ref(inputRef.current);\n    } else {\n      ref.current = inputRef.current;\n    }\n  }, [ref, inputRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cn(\"jkl-slider\", className, {\n      \"jkl-slider--invalid\": !!errorLabel\n    })\n  }, /*#__PURE__*/React.createElement(Label, {\n    standAlone: true,\n    htmlFor: uid,\n    variant: variant\n  }, label), /*#__PURE__*/React.createElement(\"input\", _extends({\n    ref: inputRef,\n    className: \"jkl-slider__slider\",\n    type: \"range\",\n    list: \"jkl-slider__values\",\n    min: from,\n    max: to,\n    id: uid,\n    value: value\n  }, rest, {\n    style: {\n      \"--progress-width\": \"\".concat(progressWidth, \"px\")\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"jkl-slider__values\",\n    className: \"jkl-slider__values\"\n  }, steps.map(function (step) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: step,\n      className: cn({\n        \"jkl-slider__value\": true,\n        \"jkl-slider__value--current\": value === step + from\n      })\n    }, step + from);\n  })), /*#__PURE__*/React.createElement(SupportLabel, {\n    className: \"jkl-spacing-m--top\",\n    helpLabel: helpLabel,\n    errorLabel: errorLabel\n  }));\n});\nSlider.displayName = \"Slider\";\n\nexport { Slider };\n","import React, { ChangeEventHandler, useEffect, useRef, useState } from \"react\";\nimport { Slider } from \"@fremtind/jkl-slider-react\";\n\nimport { useFollowUpContext } from \"../followup/followupContext\";\nimport { useMainQuestionContext } from \"../main-question/mainQuestionContext\";\nimport { QuestionProps } from \"../types\";\n\nconst findMinValue = (number: number, lowest: number) => (number < lowest ? number : lowest);\nconst findMaxValue = (number: number, highest: number) => (number > highest ? number : highest);\n\nexport const SliderQuestion: React.VFC<QuestionProps> = ({ label, name, options, autoFocus = false }) => {\n    const numbers = options?.map((option) => parseInt(option.value.toString()));\n    const from = numbers?.reduce(findMinValue);\n    const to = numbers?.reduce(findMaxValue);\n\n    const followupContext = useFollowUpContext();\n    const feedbackContext = useMainQuestionContext();\n    const context = followupContext || feedbackContext;\n\n    const handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n        const selectedOption = options?.find((option) => event.target.value === option.value.toString());\n        context?.setCurrentValue(selectedOption);\n    };\n\n    const [value, setValue] = useState<number>();\n    const ref = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        if (autoFocus && ref.current) {\n            ref.current.focus();\n        }\n    }, [autoFocus, ref]);\n\n    useEffect(() => {\n        const option = Array.isArray(context?.currentValue) ? context?.currentValue[0] : context?.currentValue;\n        const selectedValue = option && parseInt(option.value.toString());\n        setValue(selectedValue);\n    }, [context?.currentValue]);\n\n    if (!context) {\n        console.error(\"Questions must be used inside a Followup or Feedback context provider\");\n        return null;\n    }\n\n    return (\n        <Slider\n            variant=\"large\"\n            label={label}\n            name={name || label}\n            value={value}\n            from={from}\n            to={to}\n            ref={ref}\n            onChange={handleChange}\n        />\n    );\n};\n\nSliderQuestion.displayName = \"SliderQuestion\";\n","import React, { ChangeEventHandler, useEffect, useState } from \"react\";\nimport { TextArea } from \"@fremtind/jkl-text-input-react\";\n\nimport { useMainQuestionContext } from \"../main-question/mainQuestionContext\";\n\ninterface Props {\n    label: string;\n    helpLabel?: string;\n}\n\nexport const AddonQuestion: React.VFC<Props> = ({\n    label,\n    helpLabel = \"Ikke skriv personlige opplysninger. Tilbakemeldinger som kommer inn her blir ikke besvart, men brukt i videre arbeid med å forbedre tjenestene våre.\",\n}) => {\n    const context = useMainQuestionContext();\n    const [dynamicLabel, setDynamicLabel] = useState(label);\n\n    useEffect(() => {\n        const labelFromValue = Array.isArray(context?.currentValue)\n            ? context?.currentValue[0].textAreaLabel?.toString()\n            : context?.currentValue?.textAreaLabel?.toString();\n        setDynamicLabel(labelFromValue || label);\n    }, [context?.currentValue, label]);\n\n    if (!context) {\n        console.error(\"Addon question must be used inside a MainQuestion context provider\");\n        return null;\n    }\n\n    const { message, setMessage } = context;\n    const handleChange: ChangeEventHandler<HTMLTextAreaElement> = (e) => setMessage(e.target.value);\n\n    return (\n        <TextArea\n            inline\n            startOpen\n            rows={4}\n            data-testid=\"jkl-feedback__open-question\"\n            className=\"jkl-spacing-xl--bottom jkl-spacing-xl--top\"\n            label={dynamicLabel}\n            placeholder={dynamicLabel}\n            helpLabel={helpLabel}\n            value={message || \"\"}\n            onChange={handleChange}\n        />\n    );\n};\n","var EMAIL_REGEX = /^[a-zA-ZæøåÆØÅ0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-ZæøåÆØÅ0-9-]+(?:\\.[a-zA-Z0-9-]+)+$/;\nvar isValidEpost = function isValidEpost(value) {\n  return EMAIL_REGEX.test(value);\n};\n\nvar PHONENR_REGEX = /^\\d{8}$/;\nvar isValidTelefonnummer = function isValidTelefonnummer(value) {\n  return PHONENR_REGEX.test(value);\n};\n\nvar REGNR_REGEX = /^[a-zA-Z]{2}\\d{5}/;\nvar isValidRegistreringsnummer = function isValidRegistreringsnummer(value) {\n  return REGNR_REGEX.test(value);\n};\n\nvar CHASSISNR_REGEX = /^[a-zA-Z0-9]{9,17}$/;\nvar isValidChassisnummer = function isValidChassisnummer(value) {\n  return CHASSISNR_REGEX.test(value);\n};\n\nvar DOGID_REGEX = /^5780[0-9]{11}$/;\n/**\n * @deprecated This only validates norwegian id-tags, that is probably more restrictive than you want\n * expect this function to change, use carefully\n */\n\nvar isValidDogId = function isValidDogId(value) {\n  return DOGID_REGEX.test(value);\n};\n\nexport { isValidChassisnummer, isValidDogId, isValidEpost, isValidRegistreringsnummer, isValidTelefonnummer };\n","import React, { createContext, useContext, FC } from \"react\";\n\ninterface FeedbackContext {\n    feedbackSubmitted: boolean;\n    followupStarted: boolean;\n    followupSubmitted: boolean;\n    contactSubmitted: boolean;\n    setFeedbackSubmitted: (state: boolean) => void;\n    setFollowupStarted: (state: boolean) => void;\n    setFollowupSubmitted: (state: boolean) => void;\n    setContactSubmitted: (state: boolean) => void;\n}\n\nconst initialState: FeedbackContext = {\n    feedbackSubmitted: false,\n    followupStarted: false,\n    followupSubmitted: false,\n    contactSubmitted: false,\n    setFeedbackSubmitted: () => null,\n    setFollowupStarted: () => null,\n    setFollowupSubmitted: () => null,\n    setContactSubmitted: () => null,\n};\n\nconst feedbackContext = createContext(initialState);\n\nexport const useFeedbackContext = (): FeedbackContext => useContext(feedbackContext);\n\ninterface Props {\n    value: FeedbackContext;\n}\n\nexport const FeedbackContextProvider: FC<Props> = ({ value, children }) => (\n    <feedbackContext.Provider value={value}>{children}</feedbackContext.Provider>\n);\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport { SuccessMessage } from \"@fremtind/jkl-message-box-react\";\n\ntype Props = React.ComponentProps<typeof SuccessMessage>;\n\nexport const FeedbackSuccess: FC<Props> = ({ children, className, ...rest }) => (\n    <SuccessMessage className={cn(\"jkl-feedback__fade-in\", className)} {...rest}>\n        {children}\n    </SuccessMessage>\n);\n","import React, { ChangeEvent, FC, ReactNode, useEffect, useRef, useState } from \"react\";\nimport { PrimaryButton, TertiaryButton } from \"@fremtind/jkl-button-react\";\nimport { TextInput } from \"@fremtind/jkl-text-input-react\";\nimport { isValidEpost, isValidTelefonnummer } from \"@fremtind/jkl-validators-util\";\nimport { useFeedbackContext } from \"../feedbackContext\";\nimport { FeedbackSuccess } from \"../FeedbackSuccess\";\n\nconst validateEmail = (email?: string) => {\n    if (!email || email === \"\") {\n        return \"Du må oppgi e-postadresse for at vi kan kontakte deg\";\n    }\n    if (!isValidEpost(email)) {\n        return \"Skriv inn en gyldig e-postadresse\";\n    }\n    return;\n};\n\nconst validatePhone = (phone?: string) => {\n    if (!phone || phone === \"\") {\n        return \"Du må oppgi telefonnummer for at vi kan kontakte deg\";\n    }\n    if (!isValidTelefonnummer(phone)) {\n        return \"Skriv inn et gyldig telefonnummer\";\n    }\n    return;\n};\n\nconst defaultSuccessMessage = {\n    title: \"Takk for tiden din!\",\n    children:\n        \"Neste gang vi gjennomfører intervjuer og tester kan det hende vi tar kontakt med deg. Dine innspill hjelper oss med å gjøre nettsidene bedre for deg og alle andre som bruker dem.\",\n};\n\ninterface Props {\n    label?: string;\n    sendButtonLabel?: string;\n    withPhone?: boolean;\n    children?: ReactNode;\n    onSubmit: (values: { email: string; phone?: string }) => void;\n    successMessage?: {\n        title: string;\n        children: ReactNode;\n    };\n}\n\nexport const ContactQuestion: FC<Props> = ({\n    label = \"Kan vi kontakte deg for flere innspill?\",\n    sendButtonLabel = \"Sett meg på lista!\",\n    withPhone = false,\n    onSubmit,\n    successMessage = defaultSuccessMessage,\n    children,\n}) => {\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [errors, setErrors] = useState<{ email?: string; phone?: string }>({});\n    const emailRef = useRef<HTMLInputElement>(null);\n    const phoneRef = useRef<HTMLInputElement>(null);\n    const [shouldValidate, setShouldValidate] = useState(false);\n\n    const [noThanks, setNoThanks] = useState(false);\n    const { contactSubmitted, setContactSubmitted } = useFeedbackContext();\n\n    const ChildrenWrapper = typeof children === \"string\" ? \"p\" : \"div\";\n\n    const validate = (email: string, phone: string) => {\n        const emailError = validateEmail(email);\n        const phoneError = validatePhone(phone);\n        setErrors({ email: emailError, phone: phoneError });\n        return { emailError, phoneError };\n    };\n\n    useEffect(() => {\n        if (shouldValidate) {\n            const { emailError, phoneError } = validate(email, phone);\n\n            if (!emailError && (!withPhone || !phoneError)) {\n                setShouldValidate(false);\n            }\n        }\n    }, [email, phone, shouldValidate, withPhone]);\n\n    const handleChange = (consumer: (value: string) => void) => (e: ChangeEvent<HTMLInputElement>) =>\n        consumer(e.target.value);\n\n    const handleSubmit: React.FormEventHandler = (e) => {\n        e.preventDefault();\n\n        const { emailError, phoneError } = validate(email, phone);\n        if (emailError) {\n            setShouldValidate(true);\n            emailRef.current?.focus();\n            return;\n        }\n        if (withPhone && phoneError) {\n            setShouldValidate(true);\n            phoneRef.current?.focus();\n            return;\n        }\n\n        onSubmit({ email, phone: withPhone ? phone : undefined });\n        setContactSubmitted(true);\n    };\n\n    if (noThanks) {\n        return null;\n    }\n\n    if (contactSubmitted) {\n        return <FeedbackSuccess {...successMessage} />;\n    }\n\n    return (\n        <form className=\"jkl-spacing-xl--top\" onSubmit={handleSubmit} aria-live=\"off\">\n            <p className=\"jkl-heading-4 jkl-spacing-xs--bottom\">{label}</p>\n            {children && <ChildrenWrapper className=\"jkl-body\">{children}</ChildrenWrapper>}\n\n            <TextInput\n                ref={emailRef}\n                className=\"jkl-spacing-l--top\"\n                variant=\"small\"\n                label=\"E-post\"\n                autoComplete=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange(setEmail)}\n                errorLabel={errors.email}\n            />\n            {withPhone && (\n                <TextInput\n                    ref={phoneRef}\n                    className=\"jkl-spacing-l--top\"\n                    variant=\"small\"\n                    label=\"Telefonnummer\"\n                    autoComplete=\"tel\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={handleChange(setPhone)}\n                    errorLabel={errors.phone}\n                />\n            )}\n\n            <div className=\"jkl-spacing-xl--top\">\n                <PrimaryButton type=\"submit\" className=\"jkl-spacing-xl--right\">\n                    {sendButtonLabel}\n                </PrimaryButton>\n                <TertiaryButton onClick={() => setNoThanks(true)}>Nei takk</TertiaryButton>\n            </div>\n        </form>\n    );\n};\n","import React, { JSXElementConstructor, VFC } from \"react\";\nimport { CheckboxQuestion, RadioQuestion, SliderQuestion, TextQuestion } from \"./questions\";\nimport { QuestionProps, QuestionType } from \"./types\";\n\nexport function getChildrenOfType<P>(...allowedTypes: Array<string | JSXElementConstructor<P>>) {\n    return (\n        children: React.ReactNode,\n    ): React.ReactElement<P, string | React.JSXElementConstructor<unknown>>[] | null | undefined =>\n        React.Children.map(children, (child) => {\n            if (React.isValidElement<P>(child) && allowedTypes.includes(child.type)) {\n                return child;\n            }\n            return undefined;\n        });\n}\n\nexport const getTypeFromComponent = (component: React.ReactElement): QuestionType => {\n    switch (component.type) {\n        case SliderQuestion:\n            return \"slider\";\n        case RadioQuestion:\n            return \"radio\";\n        case CheckboxQuestion:\n            return \"checkbox\";\n        case TextQuestion:\n            return \"text\";\n        default:\n            return \"radio\";\n    }\n};\n\nexport const getQuestionFromType = (type: QuestionType): VFC<QuestionProps> => {\n    switch (type) {\n        case \"radio\":\n            return RadioQuestion;\n        case \"checkbox\":\n            return CheckboxQuestion;\n        case \"text\":\n            return TextQuestion;\n        case \"slider\":\n            return SliderQuestion;\n\n        default:\n            return RadioQuestion;\n    }\n};\n","import React, { ReactNode, useEffect, useRef, useState, VFC } from \"react\";\nimport { PrimaryButton, SecondaryButton, TertiaryButton } from \"@fremtind/jkl-button-react\";\nimport { FeedbackAnswer, FollowupQuestion } from \"../types\";\nimport { useFollowup } from \"./useFollowup\";\nimport { FollowUpProvider } from \"./followupContext\";\nimport { getQuestionFromType } from \"../utils\";\nimport { useFeedbackContext } from \"../feedbackContext\";\nimport { FeedbackSuccess } from \"../FeedbackSuccess\";\n\nconst defaultSuccessMessage = {\n    title: \"Takk, igjen!\",\n    children:\n        \"Vi setter pris på at du tok deg tid til å svare på flere spørsmål. Det hjelper oss med å gjøre nettsidene bedre for deg og alle andre som bruker dem.\",\n};\n\ninterface Props {\n    questions: FollowupQuestion[];\n    successMessage?: {\n        title: string;\n        children: ReactNode;\n    };\n    onSubmit: (values: FeedbackAnswer[]) => void;\n}\n\nexport const Followup: VFC<Props> = ({ questions, successMessage = defaultSuccessMessage, onSubmit }) => {\n    const [noThanks, setNoThanks] = useState(false);\n    const focusRef = useRef<HTMLParagraphElement>(null);\n    const followupState = useFollowup(questions, onSubmit);\n    const { handleAbort, handleNext, step, submitted } = followupState;\n    const { followupStarted, setFollowupStarted, setFollowupSubmitted, contactSubmitted } = useFeedbackContext();\n\n    useEffect(() => {\n        if (step.number === 0) {\n            return;\n        }\n        focusRef.current && focusRef.current.focus();\n    }, [step]);\n\n    useEffect(() => {\n        setFollowupSubmitted(submitted);\n    }, [submitted, setFollowupSubmitted]);\n\n    const QuestionComponent = getQuestionFromType(questions[step.number].type);\n    const Button = step.isLast ? PrimaryButton : SecondaryButton;\n\n    if (noThanks) {\n        return null;\n    }\n\n    return (\n        <FollowUpProvider state={followupState}>\n            {!followupStarted && (\n                <div className=\"jkl-feedback__fade-in\">\n                    <p className=\"jkl-heading-4 jkl-spacing-xl--top jkl-spacing-xs--bottom\">\n                        Har du tid til å svare på noen flere spørsmål?\n                    </p>\n                    <p className=\"jkl-body jkl-spacing-xl--bottom\">\n                        Det tar kun et minutt, og hjelper oss å lage bedre løsninger for deg.\n                    </p>\n                    <PrimaryButton onClick={() => setFollowupStarted(true)} className=\"jkl-spacing-xl--right\">\n                        Jeg har tid!\n                    </PrimaryButton>\n                    <TertiaryButton onClick={() => setNoThanks(true)}>Nei takk</TertiaryButton>\n                </div>\n            )}\n            {!submitted && followupStarted && (\n                <form onSubmit={handleNext} className=\"jkl-feedback__fade-in\">\n                    <p className=\"jkl-feedback__step-counter\" ref={focusRef}>\n                        Steg {step.number + 1} av {questions.length}\n                    </p>\n                    {/* eslint-disable-next-line jsx-a11y/no-autofocus */}\n                    <QuestionComponent {...questions[step.number]} autoFocus />\n                    <div className=\"jkl-spacing-xl--top\" aria-live=\"off\">\n                        <Button type=\"submit\">{step.isLast ? \"Send inn\" : \"Neste\"}</Button>\n                        <TertiaryButton onClick={handleAbort} className=\"jkl-spacing-xl--left\">\n                            Avbryt\n                        </TertiaryButton>\n                    </div>\n                </form>\n            )}\n            {submitted && !contactSubmitted && <FeedbackSuccess {...successMessage} />}\n        </FollowUpProvider>\n    );\n};\n","import { useState, useRef, useCallback, useEffect, SetStateAction, Dispatch } from \"react\";\nimport { FeedbackType, FeedbackOption } from \"../types\";\n\ntype Value = FeedbackOption<string | number> | FeedbackOption<string | number>[] | undefined;\n\ntype MainQuestion = {\n    currentValue: Value;\n    setCurrentValue: Dispatch<SetStateAction<Value>>;\n    message: string | undefined;\n    setMessage: Dispatch<SetStateAction<string | undefined>>;\n    submitted: boolean;\n    handleSubmit: () => void;\n};\n\nexport const useMainQuestion = (onSubmit: (f: FeedbackType) => void): MainQuestion => {\n    const [currentValue, setCurrentValue] = useState<FeedbackOption | FeedbackOption[]>();\n    const [message, setMessage] = useState<string>();\n    const [submitted, setSubmitted] = useState(false);\n\n    const feedbackRef = useRef({\n        onSubmit,\n        currentValue,\n        message,\n        submitted,\n    });\n\n    useEffect(() => {\n        feedbackRef.current = {\n            ...feedbackRef.current,\n            onSubmit,\n            currentValue,\n            message,\n            submitted,\n        };\n    }, [onSubmit, currentValue, message, submitted]);\n\n    const _handleSubmit = useCallback(() => {\n        const refValue = feedbackRef.current;\n        if (!refValue.submitted && refValue.currentValue !== undefined) {\n            const feedbackValue = Array.isArray(refValue.currentValue)\n                ? refValue.currentValue.map((option) => option.value)\n                : refValue.currentValue?.value;\n            feedbackRef.current.onSubmit({\n                feedbackValue,\n                message: feedbackRef.current.message,\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"beforeunload\", _handleSubmit);\n        }\n        return () => {\n            _handleSubmit();\n            window.removeEventListener(\"beforeunload\", _handleSubmit);\n        };\n    }, [_handleSubmit]);\n\n    const handleSubmit = () => {\n        _handleSubmit();\n        setSubmitted(true);\n    };\n\n    return {\n        currentValue,\n        setCurrentValue,\n        message,\n        setMessage,\n        submitted,\n        handleSubmit,\n    };\n};\n","import React, { ReactNode, useEffect, VFC } from \"react\";\nimport cn from \"classnames\";\nimport { PrimaryButton, TertiaryButton } from \"@fremtind/jkl-button-react\";\nimport { useAnimatedHeight } from \"@fremtind/jkl-react-hooks\";\n\nimport { FeedbackOption, FeedbackType } from \"../types\";\nimport { useMainQuestion } from \"./useMainQuestion\";\nimport { getQuestionFromType } from \"../utils\";\nimport { MainQuestionContextProvider } from \"./mainQuestionContext\";\nimport { AddonQuestion } from \"../questions\";\nimport { useFeedbackContext } from \"../feedbackContext\";\nimport { FeedbackSuccess } from \"../FeedbackSuccess\";\n\nconst defaultSuccessMessage = {\n    title: \"Takk for tilbakemeldingen!\",\n    children:\n        \"Husk at vi ikke kan besvare meldinger fra dette skjemaet. Kontakt gjerne din forsikringsrådgiver om du har flere spørsmål.\",\n};\n\ninterface Props {\n    type: \"slider\" | \"radio\";\n    label: string;\n    options: FeedbackOption[];\n    addOnQuestion?: {\n        label: string;\n        helpLabel?: string;\n    };\n    successMessage?: {\n        title: string;\n        children: ReactNode;\n    };\n    onSubmit: (value: FeedbackType) => void;\n}\n\nexport const MainQuestion: VFC<Props> = ({\n    label,\n    options,\n    type,\n    addOnQuestion,\n    successMessage = defaultSuccessMessage,\n    onSubmit,\n}) => {\n    const mainQuestionState = useMainQuestion(onSubmit);\n\n    const { setFeedbackSubmitted, contactSubmitted } = useFeedbackContext();\n    const { handleSubmit, currentValue, setCurrentValue, submitted } = mainQuestionState;\n    const [submitWrapperRef] = useAnimatedHeight<HTMLDivElement>(currentValue !== undefined);\n\n    useEffect(() => {\n        setFeedbackSubmitted(submitted);\n    }, [submitted, setFeedbackSubmitted]);\n\n    const MainQuestionComp = getQuestionFromType(type);\n\n    return (\n        <>\n            {!submitted && (\n                <MainQuestionContextProvider state={mainQuestionState}>\n                    <MainQuestionComp label={label} options={options} />\n                    <div\n                        ref={submitWrapperRef}\n                        className={cn({\n                            \"jkl-feedback__submit-wrapper\": true,\n                            \"jkl-feedback__submit-wrapper--hidden\": currentValue === undefined,\n                        })}\n                    >\n                        {addOnQuestion && <AddonQuestion {...addOnQuestion} />}\n                        <div className=\"jkl-spacing-xl--top\">\n                            <PrimaryButton onClick={handleSubmit} className=\"jkl-spacing-xl--right\">\n                                Send\n                            </PrimaryButton>\n                            <TertiaryButton onClick={() => setCurrentValue(undefined)}>Avbryt</TertiaryButton>\n                        </div>\n                    </div>\n                </MainQuestionContextProvider>\n            )}\n            {submitted && !contactSubmitted && <FeedbackSuccess {...successMessage} />}\n        </>\n    );\n};\n","import React, { ReactNode, useState } from \"react\";\nimport { Followup } from \"./followup/Followup\";\nimport { MainQuestion } from \"./main-question/MainQuestion\";\nimport { FeedbackContextProvider } from \"./feedbackContext\";\nimport { ContactQuestion } from \"./questions\";\nimport { FeedbackOption, FeedbackType } from \"./types\";\n\ntype FollowupProps = React.ComponentProps<typeof Followup>;\ntype ContactQuestionProps = React.ComponentProps<typeof ContactQuestion>;\n\ninterface Props {\n    className?: string;\n    type: \"slider\" | \"radio\";\n    label: string;\n    options: FeedbackOption[];\n    addOnQuestion?: {\n        label: string;\n        helpLabel?: string;\n    };\n    successMessage?: {\n        title: string;\n        children: ReactNode;\n    };\n    onSubmit: (value: FeedbackType) => void;\n\n    followup?: FollowupProps;\n    contactQuestion?: ContactQuestionProps;\n}\n\nexport const Feedback: React.VFC<Props> = ({ className, followup, contactQuestion, ...mainQuestionProps }) => {\n    const [feedbackSubmitted, setFeedbackSubmitted] = useState(false);\n    const [followupStarted, setFollowupStarted] = useState(false);\n    const [followupSubmitted, setFollowupSubmitted] = useState(false);\n    const [contactSubmitted, setContactSubmitted] = useState(false);\n\n    return (\n        <div className={`jkl-feedback ${className || \"\"}`} aria-live=\"polite\">\n            <FeedbackContextProvider\n                value={{\n                    feedbackSubmitted,\n                    followupStarted,\n                    followupSubmitted,\n                    contactSubmitted,\n                    setFeedbackSubmitted,\n                    setFollowupStarted,\n                    setFollowupSubmitted,\n                    setContactSubmitted,\n                }}\n            >\n                {!followupStarted && <MainQuestion {...mainQuestionProps} />}\n                {feedbackSubmitted && !contactSubmitted && followup && <Followup {...followup} />}\n                {/* Show contact question after followup, or after feedback if no followup */}\n                {((!followup && feedbackSubmitted) || followupSubmitted) && contactQuestion && (\n                    <ContactQuestion {...contactQuestion} />\n                )}\n            </FeedbackContextProvider>\n        </div>\n    );\n};\n","import { ComponentProps } from \"react\";\nimport { Feedback } from \"./\";\n\ntype FeedbackProps = ComponentProps<typeof Feedback>;\n\nexport const PRESETS: Record<string, Pick<FeedbackProps, \"label\" | \"type\" | \"options\" | \"addOnQuestion\">> = {\n    \"Fant du\": {\n        type: \"radio\",\n        label: \"Fant du det du lette etter?\",\n        options: [\n            {\n                label: \"Ja\",\n                value: \"ja\",\n                textAreaLabel: \"Så bra! Har du noen tilbakemeldinger kan du skrive dem her.\",\n            },\n            {\n                label: \"Nei\",\n                value: \"nei\",\n                textAreaLabel: \"Det var leit! Fortell oss gjerne hva du savner, så kan vi gjøre sidene våre bedre.\",\n            },\n        ],\n        addOnQuestion: { label: \"Vil du legge til noe mer?\" },\n    },\n    \"Fikk du gjort\": {\n        type: \"radio\",\n        label: \"Fikk du gjort det du skulle?\",\n        options: [\n            {\n                label: \"Ja\",\n                value: \"ja\",\n                textAreaLabel: \"Så bra! Har du noen tilbakemeldinger kan du skrive dem her.\",\n            },\n            {\n                label: \"Nei\",\n                value: \"nei\",\n                textAreaLabel: \"Det var leit! Fortell oss gjerne hva du savner, så kan vi gjøre sidene våre bedre.\",\n            },\n        ],\n        addOnQuestion: { label: \"Vil du legge til noe mer?\" },\n    },\n    \"Hvor fornøyd 5\": {\n        type: \"slider\",\n        label: \"På en skala fra 1 til 5, hvor fornøyd er du med løsningen?\",\n        options: [\n            {\n                label: \"Kjempefornøyd!\",\n                value: 5,\n                textAreaLabel: \"Så bra! Har du noen tilbakemeldinger kan du skrive dem her.\",\n            },\n            {\n                label: \"Ganske fornøyd\",\n                value: 4,\n                textAreaLabel: \"Så bra! Har du noen tilbakemeldinger kan du skrive dem her.\",\n            },\n            {\n                label: \"Hverken eller\",\n                value: 3,\n                textAreaLabel: \"Fortell oss gjerne hva du savner, så kan vi gjøre sidene våre bedre.\",\n            },\n            {\n                label: \"Litt misfornøyd\",\n                value: 2,\n                textAreaLabel: \"Det var leit! Fortell oss gjerne hva du savner, så kan vi gjøre sidene våre bedre.\",\n            },\n            {\n                label: \"Veldig misfornøyd!\",\n                value: 1,\n                textAreaLabel: \"Det var leit! Fortell oss gjerne hva du savner, så kan vi gjøre sidene våre bedre.\",\n            },\n        ],\n        addOnQuestion: { label: \"Vil du legge til noe mer?\" },\n    },\n};\n","import React, { VFC } from \"react\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\n\nimport { Feedback, PRESETS } from \"../src\";\nimport { FollowupQuestion } from \"../src/types\";\n\nconst followupQuestions: FollowupQuestion[] = [\n    {\n        type: \"radio\",\n        label: \"Hvordan opplevde du å bestille forsikring på nett?\",\n        name: \"opplevelse\",\n        options: [\n            { label: \"Enkelt og greit\", value: \"enkelt\" },\n            { label: \"Midt på treet\", value: \"ok\" },\n            { label: \"Tungvindt\", value: \"tungvindt\" },\n        ],\n    },\n    {\n        type: \"checkbox\",\n        label: \"Hva er viktig for deg?\",\n        name: \"viktig\",\n        options: [\n            { label: \"At det går raskt å bestille\", value: \"hurtighet\" },\n            { label: \"God informasjon\", value: \"info\" },\n            { label: \"At det ser fint ut\", value: \"utseende\" },\n            { label: \"At forsikringen er billig\", value: \"pris\" },\n        ],\n    },\n    {\n        type: \"text\",\n        label: \"Er det noe mer du vil legge til?\",\n        name: \"annet\",\n    },\n];\n\nconst contactQuestion = {\n    withPhone: true,\n    label: \"Vil du være med å teste sidene våre?\",\n    children:\n        \"Vi gjennomfører jevnlig tester og intervjuer for å forbedre løsningene våre (ca. 30 minutter). Som takk for hjelpen får du et gavekort. Legg igjen din e-postadresse hvis du er interessert.\",\n    sendButtonLabel: \"Skriv meg opp!\",\n    onSubmit: console.info,\n};\n\nexport const Example: VFC<ExampleComponentProps> = ({ boolValues, choiceValues }) => {\n    const followup = boolValues?.[\"Med oppfølgings-spørsmål\"]\n        ? {\n              onSubmit: console.log,\n              questions: followupQuestions,\n          }\n        : undefined;\n    const contact = boolValues?.[\"Med kontakt-spørsmål\"] ? contactQuestion : undefined;\n    const preset = choiceValues?.[\"Forhåndsvalg\"]\n        ? PRESETS[choiceValues[\"Forhåndsvalg\"] as keyof typeof PRESETS]\n        : PRESETS[\"Hvor fornøyd 5\"];\n\n    return (\n        <Feedback\n            type={preset.type}\n            options={preset.options}\n            label={preset.label}\n            addOnQuestion={preset.addOnQuestion}\n            onSubmit={console.log}\n            followup={followup}\n            contactQuestion={contact}\n        />\n    );\n};\n\nexport default Example;\n","import { PRESETS } from \"../src/presets\";\n\nexport const exampleProps = {\n    boolProps: [\"Med oppfølgings-spørsmål\", \"Med kontakt-spørsmål\"],\n    choiceProps: [\n        {\n            name: \"Forhåndsvalg\",\n            values: Object.keys(PRESETS),\n            defaultValue: 0,\n        },\n    ],\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { exampleProps } from \"./exampleProps\";\nimport { Feedback } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Feedback-komponenten lar oss få tilbakemelding fra brukerene våre. Det kan gi oss viktig innsikt om\n    brukeropplevelsen, og avdekke ønsker om funksjonalitet.\n    </Ingress>\n    <ComponentExample knobs={exampleProps} component={Example} mdxType=\"ComponentExample\" />\n    <p>{`Bruk spørsmål med to til fem alternativer når du ber om tilbake`}{`­`}{`melding. For hvert alternativ kan du spesifisere både teksten som vises og verdien som blir sendt inn, slik at det lett kan integreres med side`}{`­`}{`statistikk. Vi tilbyr noen standard`}{`­`}{`spørsmål med alternativer, som dekker de vanligste tilbake`}{`­`}{`meldings`}{`­`}{`behovene.`}</p>\n    <p>{`I tillegg til hovedspørsmålet kan man la brukeren legge igjen en skriftlig tilbakemelding. Du kan endre etiketten på tilbake`}{`­`}{`meldings`}{`­`}{`feltet på bakgrunn av alternativet brukeren valgte i hovedspørmålet, eller vise en generell etikett.`}</p>\n    <h2>{`Oppfølgingsspørsmål`}</h2>\n    <p>{`Noen ganger kan det være nyttig med mer inngående tilbakemeldinger, for eksempel under utrulling av ny funksjonalitet. Det er derfor mulig å be brukeren svare på et eller flere oppfølgings`}{`­`}{`spørsmål etter at den vanlige tilbakemeldingen er sendt inn. Brukeren blir først spurt om å delta, og tas deretter videre til første spørmål.`}</p>\n    <p>{`Spørmålene kan være en blanding av flervalgsspørsmål med ett eller flere mulige valg, og åpne tekstspørsmål. De presenteres ett og ett, med knapp for å gå videre etter hvert spørmål. Dersom brukeren navigerer vekk fra siden for alle spørsmålene er besvart blir kun de besvarte spørsmålene sendt inn.`}</p>\n    <h2>{`Innsending av data`}</h2>\n    <p>{`Du må selv sende inn funksjoner for å håndtere innsending av data, men komponenten sørger selv for at de blir kalt på riktig tidspunkt; når brukeren trykker send inn, eller når de forlater siden etter å ha tatt valg i skjemaet.`}</p>\n    <p>{`Du må selv koble opp mot ditt ønskede feedback-endepunkt med eventuell vasking og/eller transformering av data.`}</p>\n    <h3>{`Hovedspørsmål`}</h3>\n    <p>{`Funksjonen for håndtering av hovedspørmålet får inn et objekt med verdien fra hovedspørsmålet, samt den eventuelle skriftlige tilbake`}{`­`}{`meldingen:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`{ value: string | number; message?: string }\n`}</code></pre>\n    <h3>{`Oppfølgingsspørsmål`}</h3>\n    <p>{`Funksjonen for håndtering av oppfølgings`}{`­`}{`spørmål får inn en liste med objekter etter hvor mange spørsmål som er besvart. Objektene inneholder informasjon om feltet, og verdien eller verdiene som er valgt:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`[{ label: string: name: string; type: \"single\" | \"multi\" | \"text\"; value: string | string[] }]\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '@fremtind/jkl-loader-react';\n\nvar BaseButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    ref: ref\n  }));\n});\nBaseButton.displayName = \"BaseButton\";\n\nvar _excluded = [\"children\", \"className\", \"forceCompact\", \"inverted\", \"onClick\", \"onTouchStart\", \"loader\"];\n\nvar makeButtonComponent = function makeButtonComponent(buttonType) {\n  var button = /*#__PURE__*/forwardRef(function (_ref, ref) {\n    var children = _ref.children,\n        _ref$className = _ref.className,\n        className = _ref$className === void 0 ? \"\" : _ref$className,\n        forceCompact = _ref.forceCompact,\n        inverted = _ref.inverted,\n        onClick = _ref.onClick,\n        onTouchStart = _ref.onTouchStart,\n        loader = _ref.loader,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    var componentClassName = classNames(\"jkl-button\", \"jkl-button--\" + buttonType, className, {\n      \"jkl-button--compact\": forceCompact,\n      \"jkl-button--inverted\": inverted\n    });\n\n    var handleTouch = function handleTouch(event) {\n      onTouchStart && onTouchStart(event);\n      var target = event.target;\n\n      if (target && event.targetTouches.length) {\n        var Xcoord = event.targetTouches[0].clientX - target.getBoundingClientRect().x;\n        var Ycoord = event.targetTouches[0].clientY - target.getBoundingClientRect().y;\n        target.style.setProperty(\"--jkl-touch-xcoord\", Xcoord.toPrecision(4) + \"px\");\n        target.style.setProperty(\"--jkl-touch-ycoord\", Ycoord.toPrecision(4) + \"px\");\n        target.classList.add(\"jkl-button--pressed\");\n        setTimeout(function () {\n          return target.classList.remove(\"jkl-button--pressed\");\n        }, 400);\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(BaseButton, _extends({\n      \"aria-live\": \"polite\",\n      className: componentClassName,\n      disabled: loader === null || loader === void 0 ? void 0 : loader.showLoader,\n      onClick: onClick,\n      onTouchStart: handleTouch\n    }, rest, {\n      ref: ref\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"jkl-button__content\", {\n        \"jkl-button__content--compact\": forceCompact\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"jkl-button__slider\", {\n        \"jkl-button__slider--show-loader\": !!(loader !== null && loader !== void 0 && loader.showLoader)\n      })\n    }, children, loader && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jkl-button__loader\"\n    }, /*#__PURE__*/React.createElement(Loader, {\n      textDescription: loader.textDescription,\n      \"aria-hidden\": !!loader.showLoader,\n      variant: forceCompact ? \"small\" : \"medium\"\n    })))));\n  });\n  return button;\n};\n\nvar PrimaryButton = makeButtonComponent(\"primary\");\nvar SecondaryButton = makeButtonComponent(\"secondary\");\nvar TertiaryButton = makeButtonComponent(\"tertiary\");\n\nexport { PrimaryButton, SecondaryButton, TertiaryButton };\n","import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React from 'react';\nimport classNames from 'classnames';\n\nvar _excluded = [\"variant\", \"textDescription\", \"className\", \"dataTestAutoId\", \"politeness\"];\nvar Loader = function Loader(_ref) {\n  var _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"large\" : _ref$variant,\n      textDescription = _ref.textDescription,\n      className = _ref.className,\n      _ref$dataTestAutoId = _ref.dataTestAutoId,\n      dataTestAutoId = _ref$dataTestAutoId === void 0 ? \"jkl-loader\" : _ref$dataTestAutoId,\n      _ref$politeness = _ref.politeness,\n      politeness = _ref$politeness === void 0 ? \"polite\" : _ref$politeness,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var componentClassName = classNames(\"jkl-loader\", className, {\n    \"jkl-loader--medium\": variant === \"medium\",\n    \"jkl-loader--small\": variant === \"small\"\n  });\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    \"aria-busy\": \"true\",\n    \"aria-label\": textDescription,\n    \"aria-live\": politeness,\n    className: componentClassName,\n    \"data-testautoid\": dataTestAutoId,\n    \"data-testid\": \"jkl-loader\",\n    role: \"alert\",\n    title: textDescription\n  }, rest), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--left\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--middle\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--right\"\n  }));\n};\n\nexport { Loader };\n"],"names":["followUpContext","createContext","undefined","useFollowUpContext","useContext","FollowUpProvider","state","children","Provider","value","mainQuestionContext","useMainQuestionContext","MainQuestionContextProvider","CheckboxQuestion","label","name","options","helpLabel","autoFocus","followupContext","feedbackContext","context","ref","useRef","useEffect","current","focus","handleChange","event","target","matchingOption","find","option","toString","currentValue","Array","isArray","found","setCurrentValue","oldValues","filter","variant","legend","map","i","key","onChange","console","error","RadioQuestion","numOptions","length","selectedValue","useMemo","inline","choices","e","TextQuestion","startOpen","rows","type","_excluded","Slider","forwardRef","_ref","className","errorLabel","_ref$variant","id","_ref$from","from","_ref$to","to","rest","_objectWithoutProperties","numsteps","steps","_toConsumableArray","keys","_useState","useState","concat","nanoid","uid","_slicedToArray","_useState3","_useState4","progressWidth","setProgressWidth","inputRef","_inputRef$current","gaps","totalWidth","clientWidth","React","cn","Label","standAlone","htmlFor","_extends","list","min","max","style","step","SupportLabel","displayName","findMinValue","number","lowest","findMaxValue","highest","SliderQuestion","numbers","parseInt","reduce","setValue","selectedOption","AddonQuestion","dynamicLabel","setDynamicLabel","labelFromValue","textAreaLabel","message","setMessage","placeholder","EMAIL_REGEX","PHONENR_REGEX","initialState","feedbackSubmitted","followupStarted","followupSubmitted","contactSubmitted","setFeedbackSubmitted","setFollowupStarted","setFollowupSubmitted","setContactSubmitted","useFeedbackContext","FeedbackContextProvider","FeedbackSuccess","validateEmail","email","test","validatePhone","phone","defaultSuccessMessage","title","ContactQuestion","sendButtonLabel","withPhone","onSubmit","successMessage","setEmail","setPhone","errors","setErrors","emailRef","phoneRef","shouldValidate","setShouldValidate","noThanks","setNoThanks","ChildrenWrapper","validate","emailError","phoneError","consumer","preventDefault","autoComplete","onClick","getQuestionFromType","Followup","questions","focusRef","followupState","values","setValues","question","isLast","setStep","shouldSubmit","setShouldSubmit","submitted","setSubmitted","followupRef","_handleSubmit","useCallback","window","addEventListener","removeEventListener","handleNext","newValue","filteredValues","oldValue","currentStep","newStepNum","handleAbort","useFollowup","QuestionComponent","Button","PrimaryButton","SecondaryButton","MainQuestion","addOnQuestion","mainQuestionState","feedbackRef","refValue","feedbackValue","handleSubmit","useMainQuestion","submitWrapperRef","useAnimatedHeight","MainQuestionComp","Feedback","followup","contactQuestion","mainQuestionProps","PRESETS","followupQuestions","info","boolValues","choiceValues","log","contact","preset","exampleProps","boolProps","choiceProps","Object","defaultValue","_frontmatter","makeShortcode","props","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","knobs","component","Example","parentName","isMDXComponent","BaseButton","makeButtonComponent","buttonType","_ref$className","forceCompact","inverted","onTouchStart","loader","componentClassName","classNames","disabled","showLoader","targetTouches","Xcoord","clientX","getBoundingClientRect","x","Ycoord","clientY","y","setProperty","toPrecision","classList","add","setTimeout","remove","Loader","textDescription","TertiaryButton","_ref$dataTestAutoId","dataTestAutoId","_ref$politeness","politeness","role"],"sourceRoot":""}