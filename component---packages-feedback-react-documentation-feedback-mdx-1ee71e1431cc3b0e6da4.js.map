{"version":3,"sources":["webpack://@fremtind/portal/../packages/feedback-react/src/FeedbackValues.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/utils.ts","webpack://@fremtind/portal/../packages/feedback-react/src/BaseFeedback.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/Smiley.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/Feedback.tsx","webpack://@fremtind/portal/../packages/feedback-react/src/SimplifiedFeedback.tsx","webpack://@fremtind/portal/../packages/feedback-react/documentation/Example.tsx","webpack://@fremtind/portal/../packages/feedback-react/documentation/Feedback.mdx","webpack://@fremtind/portal/../packages/button-react/build/browser/index.js","webpack://@fremtind/portal/../packages/loader-react/build/browser/index.js"],"names":["VERY_UNHAPPY","label","value","UNHAPPY","NEUTRAL","HAPPY","VERY_HAPPY","getLabel","option","hasOwnProperty","hasLabel","getRawFeedbackValue","isFeedbackValue","getRawFeedbackValues","options","map","FeedbackContext","createContext","description","setValue","BaseFeedback","onSubmit","renderCustomSuccess","successMessage","successTitle","callToActionText","showTextArea","textAreaLabel","textAreaHelpLabel","className","feedbackOptions","headingLevel","content","useState","feedbackValue","setFeedbackValue","feedbackPrompt","setFeedbackPrompt","message","setMessage","feedbackSubmitted","setFeedbackSubmitted","feedbackSubmittedAnimation","setFeedbackSubmittedAnimation","animationRef","useAnimatedHeight","undefined","handleSubmit","useCallback","useEffect","window","addEventListener","removeEventListener","find","v","hasPrompt","prompt","H","cn","Provider","data-testid","title","e","preventDefault","setTimeout","ref","name","variant","rows","helpLabel","onChange","currentTarget","type","smileys","1","icon","d","2","3","x1","y1","x2","y2","4","5","Smiley","element","aria-hidden","fill","viewBox","cx","cy","r","getSmiley","FeedbackContent","useContext","id","nanoid","legend","transformToValuePair","optionValue","radioButtonId","Fragment","key","checked","htmlFor","Feedback","props","choices","_","idx","toString","inline","parseInt","target","selectedValue","SimplifiedFeedback","boolValues","Component","console","info","_frontmatter","makeShortcode","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","knobs","boolProps","component","Example","parentName","isMDXComponent","BaseButton","forwardRef","React","_extends","displayName","makeButtonComponent","buttonType","_ref","children","_ref$className","forceCompact","inverted","onClick","onTouchStart","loader","rest","_objectWithoutProperties","componentClassName","classNames","handleTouch","event","targetTouches","length","Xcoord","clientX","getBoundingClientRect","x","Ycoord","clientY","y","style","setProperty","toPrecision","classList","add","remove","showLoader","disabled","Loader","textDescription","negative","PrimaryButton","SecondaryButton","TertiaryButton","_ref$negative","_ref$inline","_ref$dataTestAutoId","dataTestAutoId","role"],"mappings":"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","file":"component---packages-feedback-react-documentation-feedback-mdx-1ee71e1431cc3b0e6da4.js","sourcesContent":["import { FeedbackOption } from \"./types\";\n\nexport const VERY_UNHAPPY: FeedbackOption = { label: \"Ikke fornøyd i det hele tatt\", value: 1 };\nexport const UNHAPPY: FeedbackOption = { label: \"Ikke fornøyd\", value: 2 };\nexport const NEUTRAL: FeedbackOption = { label: \"Verken fornøyd eller ufornøyd\", value: 3 };\nexport const HAPPY: FeedbackOption = { label: \"Fornøyd\", value: 4 };\nexport const VERY_HAPPY: FeedbackOption = { label: \"Veldig fornøyd\", value: 5 };\n","import { FeedbackOption, FeedbackValue } from \"./types\";\n\nexport function hasPrompt(option: FeedbackValue | FeedbackOption): option is FeedbackOption {\n    return option?.hasOwnProperty(\"prompt\");\n}\n\nexport function hasLabel(option: FeedbackValue | FeedbackOption): option is FeedbackOption {\n    return option?.hasOwnProperty(\"label\");\n}\n\nexport function getLabel(option: FeedbackValue | FeedbackOption) {\n    return hasLabel(option) ? (option as FeedbackOption).label : `${getRawFeedbackValue(option)}`;\n}\n\nexport function getRawFeedbackValue(option: FeedbackValue | FeedbackOption) {\n    return isFeedbackValue(option) ? option : option?.value;\n}\n\nexport function getRawFeedbackValues(options: Array<FeedbackValue | FeedbackOption>) {\n    return options.map(getRawFeedbackValue);\n}\n\nexport function isFeedbackValue(option: FeedbackValue | FeedbackOption): option is FeedbackValue {\n    return typeof option === \"number\";\n}\n\nexport function transformToValuePair(option: FeedbackValue | FeedbackOption) {\n    return {\n        label: getLabel(option),\n        value: getRawFeedbackValue(option),\n    };\n}\n","import React, { createContext, useCallback, useEffect, useState, FC, ReactNode, FormEvent, ChangeEvent } from \"react\";\nimport cn from \"classnames\";\nimport { TextArea } from \"@fremtind/jkl-text-input-react\";\nimport { SecondaryButton } from \"@fremtind/jkl-button-react\";\nimport { SuccessMessage } from \"@fremtind/jkl-message-box-react\";\nimport { useAnimatedHeight } from \"@fremtind/jkl-react-hooks\";\nimport { VERY_UNHAPPY, UNHAPPY, NEUTRAL, HAPPY, VERY_HAPPY } from \"./FeedbackValues\";\nimport { FeedbackOption, FeedbackValue } from \"./types\";\nimport { hasPrompt } from \"./utils\";\n\nexport type FeedbackPayload = {\n    feedbackValue: FeedbackValue;\n    message?: string;\n};\n\ninterface CustomSuccessProps {\n    value?: FeedbackValue;\n    message: string;\n}\nexport interface BaseFeedbackProps {\n    label: string;\n    onSubmit: (data: FeedbackPayload) => void;\n    description: string;\n    feedbackOptions?: Array<FeedbackValue | FeedbackOption>;\n    renderCustomSuccess?: (props: CustomSuccessProps) => ReactNode;\n    successTitle?: string;\n    successMessage?: string;\n    className?: string;\n    callToActionText?: string;\n    showTextArea?: boolean;\n    textAreaLabel?: string;\n    textAreaHelpLabel?: string;\n    headingLevel?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"p\";\n}\n\ninterface Props extends BaseFeedbackProps {\n    content: ReactNode;\n}\n\nexport const FeedbackContext = createContext<{\n    description: string;\n    options: Array<FeedbackValue | FeedbackOption>;\n    value?: FeedbackValue;\n    setValue: (next: FeedbackValue) => void;\n}>({ description: \"\", options: [], setValue: () => undefined });\n\nexport const BaseFeedback: FC<Props> = ({\n    label,\n    onSubmit,\n    description,\n    renderCustomSuccess,\n    successMessage = \"Det hjelper oss i arbeidet med å forbedre våre løsninger\",\n    successTitle = \"Takk for tilbakemeldingen!\",\n    callToActionText = \"Send inn tilbakemelding\",\n    showTextArea = true,\n    textAreaLabel = \"Tips oss gjerne om hva vi kan forbedre\",\n    textAreaHelpLabel = \"\",\n    className = \"\",\n    feedbackOptions = [VERY_UNHAPPY, UNHAPPY, NEUTRAL, HAPPY, VERY_HAPPY],\n    headingLevel = \"h3\",\n    content,\n}) => {\n    const [feedbackValue, setFeedbackValue] = useState<FeedbackValue>();\n    const [feedbackPrompt, setFeedbackPrompt] = useState(textAreaLabel);\n    const [message, setMessage] = useState(\"\");\n    const [feedbackSubmitted, setFeedbackSubmitted] = useState(false);\n    const [feedbackSubmittedAnimation, setFeedbackSubmittedAnimation] = useState(false);\n    const [animationRef] = useAnimatedHeight<HTMLDivElement>(feedbackValue !== undefined);\n\n    const handleSubmit = useCallback(() => {\n        if (!feedbackSubmitted && feedbackValue) {\n            onSubmit({ feedbackValue, message });\n        }\n    }, [feedbackValue, feedbackSubmitted, message, onSubmit]);\n\n    const handleActiveSubmit = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        handleSubmit();\n        setFeedbackSubmittedAnimation(true);\n        setTimeout(() => setFeedbackSubmitted(true), 250);\n    };\n\n    const handleMessageChange = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) =>\n        setMessage(e.currentTarget.value);\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"beforeunload\", handleSubmit);\n        }\n        return () => {\n            window.removeEventListener(\"beforeunload\", handleSubmit);\n        };\n    }, [handleSubmit]);\n\n    useEffect(() => {\n        const option = feedbackOptions.find((v) => hasPrompt(v) && v.value === feedbackValue) as\n            | FeedbackOption\n            | undefined;\n        setFeedbackPrompt(option?.prompt ?? textAreaLabel);\n    }, [feedbackOptions, feedbackValue, textAreaLabel]);\n\n    const H = headingLevel;\n\n    return (\n        <div className={cn(\"jkl-feedback\", className)}>\n            <FeedbackContext.Provider\n                value={{\n                    description,\n                    options: feedbackOptions,\n                    setValue: setFeedbackValue,\n                    value: feedbackValue,\n                }}\n            >\n                {feedbackSubmitted && (\n                    <section className=\"jkl-feedback__success\" data-testid=\"feedback-success\">\n                        {renderCustomSuccess && renderCustomSuccess({ value: feedbackValue, message })}\n                        {!renderCustomSuccess && <SuccessMessage title={successTitle}>{successMessage}</SuccessMessage>}\n                    </section>\n                )}\n                {!feedbackSubmitted && (\n                    <form\n                        className={cn(\"jkl-feedback__form\", {\n                            \"jkl-feedback__form--hidden\": feedbackSubmittedAnimation,\n                        })}\n                        onSubmit={handleActiveSubmit}\n                    >\n                        <H className=\"jkl-feedback__heading jkl-heading-large\">{label}</H>\n                        {content}\n                        <section\n                            ref={animationRef}\n                            className={cn(\"jkl-feedback__submit-wrapper\", {\n                                \"jkl-feedback__submit-wrapper--hidden jkl-layout-spacing--medium-top\":\n                                    feedbackValue === undefined,\n                            })}\n                        >\n                            <div className=\"jkl-feedback__submit-content\">\n                                {showTextArea && (\n                                    <TextArea\n                                        className=\"jkl-feedback__message-input\"\n                                        data-testid=\"feedback-text\"\n                                        name=\"feedback-text\"\n                                        label={feedbackPrompt}\n                                        variant=\"small\"\n                                        rows={3}\n                                        helpLabel={textAreaHelpLabel}\n                                        value={message}\n                                        onChange={handleMessageChange}\n                                    />\n                                )}\n                                <SecondaryButton\n                                    data-testid=\"submit-button\"\n                                    className=\"jkl-layout-spacing--medium-top\"\n                                    type=\"submit\"\n                                >\n                                    {callToActionText}\n                                </SecondaryButton>\n                            </div>\n                        </section>\n                    </form>\n                )}\n            </FeedbackContext.Provider>\n        </div>\n    );\n};\n","import React, { FC } from \"react\";\nimport { FeedbackValue } from \"./types\";\n\nconst smileys = {\n    1: {\n        icon: <path d=\"M40 42C40 36.4772 35.0751 32 29 32C22.9249 32 18 36.4772 18 42\"></path>,\n    },\n    2: {\n        icon: <path d=\"M40 39C37.5556 35.4353 33.8529 33 29 33C24.1471 33 20.4444 35.4353 18 39\"></path>,\n    },\n    3: {\n        icon: <line x1=\"20\" y1=\"37\" x2=\"36\" y2=\"37\"></line>,\n    },\n    4: {\n        icon: <path d=\"M18 35C20.4444 38.5647 24.1471 41 29 41C33.8529 41 37.5556 38.5647 40 35\"></path>,\n    },\n    5: {\n        icon: <path d=\"M29 45C36.5429 45 40.1429 38.3333 41 35L17 35C17.5714 38.3333 21.4571 45 29 45Z\"></path>,\n    },\n};\n\nexport const getSmiley = (element: FeedbackValue) => smileys[element];\n\nexport const Smiley: FC<{ element: FeedbackValue }> = ({ element }) => (\n    <svg\n        aria-hidden\n        className={`jkl-feedback-icon jkl-feedback-icon--${element}`}\n        fill=\"currentColor\"\n        viewBox=\"0 0 57 57\"\n    >\n        <circle cx=\"28.5\" cy=\"28.5\" r=\"27.5\"></circle>\n        <circle cx=\"19\" cy=\"24\" r=\"2\" className=\"jkl-feedback-icon__eyes\"></circle>\n        <circle cx=\"38\" cy=\"24\" r=\"2\" className=\"jkl-feedback-icon__eyes\"></circle>\n        {getSmiley(element).icon}\n    </svg>\n);\n","import React, { FC, Fragment, useContext, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { ScreenReaderOnly } from \"@fremtind/jkl-core\";\nimport { FieldGroup } from \"@fremtind/jkl-field-group-react\";\nimport { BaseFeedback, BaseFeedbackProps, FeedbackContext } from \"./BaseFeedback\";\nimport { Smiley } from \"./Smiley\";\nimport { transformToValuePair } from \"./utils\";\n\nconst FeedbackContent = () => {\n    const { description, options, value, setValue } = useContext(FeedbackContext);\n    const [id] = useState(nanoid(8));\n\n    return (\n        <FieldGroup legend={description} className=\"jkl-feedback__fieldset\">\n            {options?.map((option) => {\n                const { label, value: optionValue } = transformToValuePair(option);\n                const radioButtonId = `${id}-feedback--${optionValue}`;\n\n                return (\n                    <Fragment key={optionValue}>\n                        <input\n                            className=\"jkl-feedback__answer-input\"\n                            type=\"radio\"\n                            name=\"feedback\"\n                            id={radioButtonId}\n                            value={optionValue}\n                            onChange={() => setValue(optionValue)}\n                            checked={value === optionValue}\n                        />\n                        <label\n                            data-testid={`feedback-${optionValue}`}\n                            className=\"jkl-feedback__answer-label\"\n                            htmlFor={radioButtonId}\n                        >\n                            <Smiley element={optionValue} />\n                            <ScreenReaderOnly>{label}</ScreenReaderOnly>\n                        </label>\n                    </Fragment>\n                );\n            })}\n        </FieldGroup>\n    );\n};\n\nexport const Feedback: FC<BaseFeedbackProps> = (props) => {\n    return <BaseFeedback {...props} content={<FeedbackContent />} />;\n};\n","import React, { FC, useContext } from \"react\";\nimport { RadioButtons } from \"@fremtind/jkl-radio-button-react\";\nimport { BaseFeedback, BaseFeedbackProps, FeedbackContext } from \"./BaseFeedback\";\nimport { FeedbackValue } from \"./types\";\nimport { getRawFeedbackValues } from \"./utils\";\n\nconst FeedbackContent: FC = () => {\n    const { description, options, value, setValue } = useContext(FeedbackContext);\n\n    return (\n        <RadioButtons\n            className=\"jkl-feedback__fieldset\"\n            legend={description}\n            name=\"feedback\"\n            choices={getRawFeedbackValues(options).map((_, idx) => (idx + 1).toString())}\n            inline\n            onChange={(e) => setValue(parseInt(e.target.value, 10) as FeedbackValue)}\n            selectedValue={value?.toString()}\n        />\n    );\n};\n\nexport const SimplifiedFeedback = (props: BaseFeedbackProps) => {\n    return <BaseFeedback {...props} content={<FeedbackContent />} />;\n};\n","import React from \"react\";\nimport { ExampleComponentProps } from \"@fremtind/jkl-portal-components\";\nimport { SuccessMessage } from \"@fremtind/jkl-message-box-react\";\nimport { Feedback, HAPPY, NEUTRAL, SimplifiedFeedback, UNHAPPY, VERY_HAPPY, VERY_UNHAPPY } from \"../src\";\n\nexport const Example = ({ boolValues }: ExampleComponentProps) => {\n    const Component = boolValues?.[\"Uten smilefjes\"] ? SimplifiedFeedback : Feedback;\n\n    return (\n        <>\n            <Component\n                label=\"Gi oss tilbakemelding!\"\n                description=\"Hvor fornøyd er du med denne siden for å følge saken?\"\n                onSubmit={console.info}\n                showTextArea={!boolValues?.[\"Uten tekst\"]}\n                renderCustomSuccess={(props) => (\n                    <div>\n                        <SuccessMessage title=\"Tilbakemelding sendt!\">\n                            {props.value === VERY_UNHAPPY.value && <>Det var trist!</>}\n                            {props.value === UNHAPPY.value && (\n                                <>Vi ser på alle tilbakemeldinger, håper vi kan gjøre deg mer fornøyd en annen gang!</>\n                            )}\n                            {props.value === NEUTRAL.value && (\n                                <>Vi vil gjerne ha fornøyde kunder, så vi skal se på tilbakemeldingen din!</>\n                            )}\n                            {props.value === HAPPY.value && <>Takk skal du ha!</>}\n                            {props.value === VERY_HAPPY.value && (\n                                <>\n                                    Det var stas du var fornøyd, vi prøver hele tiden å bli bedre! Takk for\n                                    tilbakemeldingen!\n                                </>\n                            )}\n                        </SuccessMessage>\n                        {props.message && (\n                            <div className=\"jkl-layout-spacing--small-top\">\n                                <span>Kopi av din melding</span>\n                                <pre>{props.message}</pre>\n                            </div>\n                        )}\n                    </div>\n                )}\n            />\n\n            <Component\n                label=\"Bare to valg\"\n                description=\"Hvor fornøyd er du med denne siden for å følge saken?\"\n                onSubmit={console.info}\n                showTextArea={!boolValues?.[\"Uten tekst\"]}\n                feedbackOptions={[UNHAPPY, HAPPY]}\n                className=\"jkl-layout-spacing--large-top\"\n            />\n        </>\n    );\n};\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nimport { Feedback } from \"../src\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Feedback-komponenten lar oss få tilbakemelding fra brukerene våre. Det kan gi oss viktig innsikt om\n    brukeropplevelsen, og avdekke ønsker om funksjonalitet.\n    </Ingress>\n    <ComponentExample knobs={{\n      boolProps: [\"Uten smilefjes\", \"Uten tekst\"]\n    }} component={Example} mdxType=\"ComponentExample\" />\n    <p>{`Komponenten kommer i to grunnvarianter: Feedback har smilefjes basert på valgene brukeren kan ta, mens SimplifiedFeedback viser vanlige radioknapper. Du kan bestemme hvilke valg brukeren skal få ved å sende inn noen eller alle tall fra 1 til 5:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1 - Surt fjes`}</li>\n      <li parentName=\"ul\">{`2 - Litt surt fjes`}</li>\n      <li parentName=\"ul\">{`3 - Nøytralt fjes`}</li>\n      <li parentName=\"ul\">{`4 - Smilefjes`}</li>\n      <li parentName=\"ul\">{`5 - Happy smilefjes`}</li>\n    </ul>\n    <p>{`I tillegg til en score kan man la brukeren legge igjen en skriftlig tilbakemelding. Etiketten på tekstfeltet kan spesifiseres generelt og/eller defineres spesifikt basert på hvilken score brukeren har gitt.`}</p>\n    <h2>{`Innsending av data`}</h2>\n    <p>{`Du må selv sende inn en funksjon for å håndtere innsending av data, men komponenten sørger selv for at den blir kalt på riktig tidspunkt; når brukeren trykker send inn, eller når de forlater siden etter å ha tatt et valg i skjemaet.`}</p>\n    <p>{`Funksjonen du sender inn må ta imot et objekt på formen`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`{ feedbackValue: 1 | 2 | 3 | 4 | 5, message?: string }\n`}</code></pre>\n    <p>{`og du må selv koble opp mot ditt ønskede feedback-endepunkt med eventuell vasking og/eller transformering av data.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import _extends from '@babel/runtime/helpers/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '@fremtind/jkl-loader-react';\n\nvar BaseButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    ref: ref\n  }));\n});\nBaseButton.displayName = \"BaseButton\";\n\nvar makeButtonComponent = function makeButtonComponent(buttonType) {\n  var button = /*#__PURE__*/forwardRef(function (_ref, ref) {\n    var children = _ref.children,\n        _ref$className = _ref.className,\n        className = _ref$className === void 0 ? \"\" : _ref$className,\n        forceCompact = _ref.forceCompact,\n        inverted = _ref.inverted,\n        onClick = _ref.onClick,\n        onTouchStart = _ref.onTouchStart,\n        loader = _ref.loader,\n        rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"forceCompact\", \"inverted\", \"onClick\", \"onTouchStart\", \"loader\"]);\n\n    var componentClassName = classNames(\"jkl-button\", \"jkl-button--\" + buttonType, {\n      \"jkl-button--compact\": forceCompact,\n      \"jkl-button--inverted\": inverted\n    });\n\n    var handleTouch = function handleTouch(event) {\n      onTouchStart && onTouchStart(event);\n      var target = event.target;\n\n      if (target && event.targetTouches.length) {\n        var Xcoord = event.targetTouches[0].clientX - target.getBoundingClientRect().x;\n        var Ycoord = event.targetTouches[0].clientY - target.getBoundingClientRect().y;\n        target.style.setProperty(\"--jkl-touch-xcoord\", Xcoord.toPrecision(4) + \"px\");\n        target.style.setProperty(\"--jkl-touch-ycoord\", Ycoord.toPrecision(4) + \"px\");\n        target.classList.add(\"jkl-button--pressed\");\n        setTimeout(function () {\n          return target.classList.remove(\"jkl-button--pressed\");\n        }, 400);\n      }\n    };\n\n    if (!loader) {\n      return /*#__PURE__*/React.createElement(BaseButton, _extends({\n        className: classNames(componentClassName, className),\n        onClick: onClick,\n        onTouchStart: handleTouch\n      }, rest, {\n        ref: ref\n      }), children);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"jkl-button-wrapper\", className, {\n        \"jkl-button-wrapper--compact\": forceCompact\n      })\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"jkl-button-wrapper__slider\", {\n        \"jkl-button-wrapper__slider--show-loader\": !!loader.showLoader\n      })\n    }, /*#__PURE__*/React.createElement(BaseButton, _extends({\n      className: componentClassName,\n      onClick: onClick,\n      onTouchStart: handleTouch,\n      disabled: loader === null || loader === void 0 ? void 0 : loader.showLoader\n    }, rest, {\n      ref: ref\n    }), children), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jkl-button-wrapper__loader jkl-layout-spacing--small-top\"\n    }, /*#__PURE__*/React.createElement(Loader, {\n      textDescription: loader.textDescription,\n      negative: inverted,\n      \"aria-hidden\": !!loader.showLoader,\n      inline: true\n    }))));\n  });\n  return button;\n};\n\nvar PrimaryButton = makeButtonComponent(\"primary\");\nvar SecondaryButton = makeButtonComponent(\"secondary\");\nvar TertiaryButton = makeButtonComponent(\"tertiary\");\n\nexport { PrimaryButton, SecondaryButton, TertiaryButton };\n","import React from 'react';\nimport classNames from 'classnames';\n\nvar Loader = function Loader(_ref) {\n  var textDescription = _ref.textDescription,\n      _ref$negative = _ref.negative,\n      negative = _ref$negative === void 0 ? false : _ref$negative,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      className = _ref.className,\n      _ref$dataTestAutoId = _ref.dataTestAutoId,\n      dataTestAutoId = _ref$dataTestAutoId === void 0 ? \"jkl-loader\" : _ref$dataTestAutoId;\n  var componentClassName = classNames(\"jkl-loader\", className, {\n    \"jkl-loader--negative\": negative,\n    \"jkl-loader--inline\": inline\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: componentClassName,\n    \"data-testid\": \"jkl-loader\",\n    \"data-testautoid\": dataTestAutoId,\n    title: textDescription,\n    \"aria-label\": textDescription,\n    role: \"alert\",\n    \"aria-busy\": \"true\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--left\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--middle\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"jkl-loader__dot jkl-loader__dot--right\"\n  }));\n};\n\nexport { Loader };\n"],"sourceRoot":""}