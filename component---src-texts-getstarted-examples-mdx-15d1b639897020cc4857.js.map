{"version":3,"sources":["webpack://@fremtind/portal/./src/components/Examples/SimpleForm/PersonalInfoForm.tsx","webpack://@fremtind/portal/./src/components/Examples/SimpleForm/AddressForm.tsx","webpack://@fremtind/portal/./src/components/Examples/SimpleForm/HouseDetailsForm.tsx","webpack://@fremtind/portal/./src/components/Examples/SimpleForm.tsx","webpack://@fremtind/portal/./src/texts/getstarted/Examples.mdx"],"names":["onSubmit","useState","showNext","setShowNext","useContext","ExampleContext","darkMode","isCompact","useForm","register","handleSubmit","errors","handleChange","standAlone","variant","className","name","label","errorLabel","fornavn","inverted","forceCompact","ref","required","onChange","etternavn","personnummer","helpLabel","maxLength","type","placeholder","minLength","pattern","watch","useRef","postnummerRef","streetNameRef","numberRef","useScrollIntoView","useEffect","current","focus","postnummer","motion","initial","opacity","animate","exit","style","position","top","title","fullWidth","e","AnimatePresence","toString","length","streetName","items","houseType","setHouseType","preventDefault","choices","legend","target","value","selectedValue","showAddress","setShowAddress","showHouseDetails","setShowHouseDetails","registerKnobs","useLayoutEffect","onClick","location","reload","key","console","log","_frontmatter","makeShortcode","props","warn","Ingress","FlowExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","isMDXComponent"],"mappings":"+SAgFA,EArE0C,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACzC,GAAgCC,eAAS,GAAlCC,EAAP,KAAiBC,EAAjB,KACA,GAAgCC,gBAAWC,MAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAClB,GAA2CC,UAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAE1BC,EAAe,WACjBT,GAAY,GACZH,GAAS,IAOb,OACI,wBAAMA,SAAUU,GANL,WACXP,GAAY,GACZH,GAAS,OAKL,gBAAC,KAAD,CAAOa,YAAU,EAACC,QAAQ,QAAQC,UAAWR,EAAY,wBAA0B,yBAAnF,eAGA,gBAAC,KAAD,CACIS,KAAK,UACLD,UAAWR,EAAY,wBAA0B,wBACjDU,MAAM,UACNC,WAAYP,EAAOQ,QAAU,0BAA4B,GACzDC,SAAUd,EACVe,aAAcd,EACde,IAAKb,EAAS,CAAEc,UAAU,IAC1BC,SAAUZ,EACVE,QAAQ,UAEZ,gBAAC,KAAD,CACIE,KAAK,YACLD,UAAWR,EAAY,wBAA0B,wBACjDU,MAAM,YACNC,WAAYP,EAAOc,UAAY,4BAA8B,GAC7DL,SAAUd,EACVe,aAAcd,EACde,IAAKb,EAAS,CAAEc,UAAU,IAC1BC,SAAUZ,EACVE,QAAQ,UAEZ,gBAAC,KAAD,CACIE,KAAK,eACLD,UAAWR,EAAY,wBAA0B,wBACjDU,MAAM,eACNC,WAAYP,EAAOe,aAAe,+BAAiC,GACnEC,UAAU,mCACVP,SAAUd,EACVe,aAAcd,EACdqB,UAAW,GACXC,KAAK,MACLC,YAAY,YACZR,IAAKb,EAAS,CAAEc,UAAU,EAAMK,UAAW,GAAIG,UAAW,GAAIC,QAAS,aACvER,SAAUZ,EACVE,QAAQ,UAEXZ,GACG,gBAAC,KAAD,CACImB,aAAcd,EACda,SAAUd,EACVS,UAAWR,EAAY,wBAA0B,yBAHrD,e,wCC2EhB,EA/HqC,SAAC,GAAkB,IAAhBP,EAAe,EAAfA,SACpC,GAAgCC,eAAS,GAAlCC,EAAP,KAAiBC,EAAjB,KACA,GAAgCC,gBAAWC,MAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAClB,GAAkDC,UAA1CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAAQsB,EAAxC,EAAwCA,MAClCX,GAAMY,YAAwB,MAC9BC,GAAgBD,YAAyB,MACzCE,GAAgBF,YAAyB,MACzCG,GAAYH,YAAuB,OAEzCI,QAAkB,CAAEhB,SAEpBiB,gBAAU,wBAAMJ,SAAN,UAAMA,EAAeK,eAArB,aAAM,EAAwBC,UAAS,KACjDF,gBAAU,wBAAMH,SAAN,UAAMA,EAAeI,eAArB,aAAM,EAAwBC,UAAS,KACjDF,gBAAU,wBAAMF,SAAN,UAAMA,EAAWG,eAAjB,aAAM,EAAoBC,UAAS,IAE7C,IAAMC,EAAaT,EAAM,cAEnBrB,EAAe,WACjBT,GAAY,GACZH,GAAS,IAOb,OACI,gBAAC2C,EAAA,OAAD,CACIC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjB7C,SAAUU,GAVH,WACXP,GAAY,GACZH,GAAS,MASLgD,MAAO,CAAEC,SAAU,aAEnB,yBAAOD,MAAO,CAAEC,SAAU,WAAYC,IAAK,UAAY5B,IAAKA,IAC5D,gBAAC,KAAD,CACI6B,MAAM,qBACNC,WAAS,EACTrC,UAAS,qBAAsBR,EAAY,IAAM,KAAxC,0BAHb,uEAOA,uBAAKQ,UAAU,iCACX,gBAAC,KAAD,CACID,QAAQ,QACRG,MAAM,aACND,KAAK,aACLD,UAAWR,EAAY,wBAA0B,wBACjDW,WAAYP,EAAO+B,WAAa,6BAA+B,GAC/DtB,SAAUd,EACVe,aAAcd,EACdqB,UAAW,EACXE,YAAY,WACZD,KAAK,MACLL,SAAUZ,EACVU,IAAK,SAAC+B,GAEF5C,EAAS4C,EAAG,CAAE9B,UAAU,EAAMK,UAAW,EAAGG,UAAW,EAAGC,QAAS,aAEnEG,EAAcK,QAAUa,KAGhC,gBAACC,EAAA,EAAD,KACuC,KAAlCZ,aAAA,EAAAA,EAAYa,WAAWC,SACpB,gBAACb,EAAA,IAAD,CACIC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjB9B,UAAS,wCACLR,EAAY,wBAA0B,0BAL9C,WAaZ,gBAAC+C,EAAA,EAAD,KACuC,KAAlCZ,aAAA,EAAAA,EAAYa,WAAWC,SACpB,gBAACb,EAAA,MAAD,CAAYC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAAKE,KAAM,CAAEF,QAAS,IAC3E,gBAAC,KAAD,CACI/B,QAAQ,SACRG,MAAM,WACND,KAAK,aACLD,UAAWR,EAAY,wBAA0B,wBACjDW,WAAYP,EAAO8C,WAAa,8BAAgC,GAChErC,SAAUd,EACVe,aAAcd,EACdsB,KAAK,OACLL,SAAUZ,EACVU,IAAK,SAAC+B,GAEF5C,EAAS4C,EAAG,CAAE9B,UAAU,IAExBa,EAAcI,QAAUa,OAM5C,gBAACC,EAAA,EAAD,KACuC,KAAlCZ,aAAA,EAAAA,EAAYa,WAAWC,SACpB,gBAACb,EAAA,MAAD,CAAYC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GAAKE,KAAM,CAAEF,QAAS,GAAKvB,IAAKe,GACrF,gBAAC,IAAD,CACItB,UAAS,gDACLR,EAAY,wBAA0B,yBAE1CmD,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5BlC,SAAUZ,EACVK,MAAM,aAKrBf,GACG,gBAAC,KAAD,CACImB,aAAcd,EACda,SAAUd,EACVS,UAAWR,EAAY,wBAA0B,yBAHrD,e,UC5DhB,EA3D0C,SAAC,GAAkB,IAAhBP,EAAe,EAAfA,SACzC,GAAgCI,gBAAWC,MAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAClB,GAAkCN,gBAA3B0D,EAAP,KAAkBC,EAAlB,KACMtC,GAAMY,YAAwB,MAIpC,OAFAI,QAAkB,CAAEhB,QAGhB,gBAACqB,EAAA,OAAD,CACIC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjB7C,SAAU,SAACqD,GACPA,EAAEQ,iBACF7D,KAEJgD,MAAO,CAAEC,SAAU,aAEnB,yBAAOD,MAAO,CAAEC,SAAU,WAAYC,IAAK,UAAY5B,IAAKA,IAC5D,gBAAC,IAAD,CACIwC,QAAS,CAAC,WAAY,eAAgB,WAAY,aAClDC,OAAO,qBACP/C,KAAK,YACLQ,SAAU,SAAC6B,GAAD,OAAOO,EAAaP,EAAEW,OAAOC,QACvCC,cAAeP,EACf5C,UACIR,EAAY,2CAA6C,2CAE7DO,QAAQ,UAGZ,gBAACwC,EAAA,EAAD,KACmB,aAAdK,GACG,gBAAChB,EAAA,MAAD,CACIC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjB9B,UAAWR,EAAY,wBAA0B,yBAEjD,gBAAC,KAAD,CAAc4C,MAAM,gCAApB,0IAOG,aAAdQ,GACG,gBAAC,KAAD,CACItC,aAAcd,EACda,SAAUd,EACVS,UAAWR,EAAY,wBAA0B,yBAHrD,eCnBhB,EA/BmB,WACf,OAAsCN,eAAS,GAAxCkE,EAAP,KAAoBC,EAApB,KACA,GAAgDnE,eAAS,GAAlDoE,EAAP,KAAyBC,EAAzB,KACQC,GAAkBnE,gBAAWC,MAA7BkE,cAYR,OAVAC,sBAAgB,WACRD,GACAA,EAAc,CACV,gBAAC,KAAD,CAAgBE,QAAS,kBAAMC,SAASC,UAAUC,IAAI,SAAtD,aAKT,CAACL,IAGA,+BACI,sBAAIxD,UAAU,4DAAd,gBACA,qBAAGA,UAAU,kCAAb,mHAIA,gBAAC,EAAD,CAAkBf,SAAUoE,IAC5B,gBAACd,EAAA,EAAD,KAAkBa,GAAe,gBAAC,EAAD,CAAanE,SAAUsE,KACxD,gBAAChB,EAAA,EAAD,KACKe,GAAoB,gBAAC,EAAD,CAAkBrE,SAAU,kBAAM6E,QAAQC,IAAI,c,iBCzBtEC,EAAe,GAEtBC,EAAgB,SAAAhE,GAAI,OAAI,SAA6BiE,GAEzD,OADAJ,QAAQK,KAAK,aAAelE,EAAO,4EAC5B,eAASiE,KAGZE,EAAUH,EAAc,WACxBI,EAAcJ,EAAc,eAC5BK,EAAc,CAClBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGR,GACF,YACD,OAAO,SAACK,EAAD,iBAAeD,EAAiBJ,EAAhC,CAAuCQ,WAAYA,EAAYC,QAAQ,eAI5E,iCACA,SAACP,EAAD,CAASO,QAAQ,WAAjB,0DACA,qCACA,SAACN,EAAD,CAAaM,QAAQ,gBACrB,SAAC,EAAD,CAAYA,QAAQ,iBAMxBF,EAAWG,gBAAiB","file":"component---src-texts-getstarted-examples-mdx-15d1b639897020cc4857.js","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { TextInput } from \"@fremtind/jkl-text-input-react\";\nimport { PrimaryButton } from \"@fremtind/jkl-button-react\";\nimport { ExampleContext } from \"@fremtind/jkl-portal-components\";\nimport { Label } from \"@fremtind/jkl-core\";\n\ninterface Props {\n    onSubmit: (arg0: boolean) => void;\n}\n\nconst PersonalInfoForm: React.FC<Props> = ({ onSubmit }) => {\n    const [showNext, setShowNext] = useState(true);\n    const { darkMode, isCompact } = useContext(ExampleContext);\n    const { register, handleSubmit, errors } = useForm();\n\n    const handleChange = () => {\n        setShowNext(true);\n        onSubmit(false);\n    };\n    const submit = () => {\n        setShowNext(false);\n        onSubmit(true);\n    };\n\n    return (\n        <form onSubmit={handleSubmit(submit)}>\n            <Label standAlone variant=\"large\" className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}>\n                Første steg\n            </Label>\n            <TextInput\n                name=\"fornavn\"\n                className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                label=\"Fornavn\"\n                errorLabel={errors.fornavn ? \"Du må fylle inn fornavn\" : \"\"}\n                inverted={darkMode}\n                forceCompact={isCompact}\n                ref={register({ required: true })}\n                onChange={handleChange}\n                variant=\"small\"\n            />\n            <TextInput\n                name=\"etternavn\"\n                className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                label=\"Etternavn\"\n                errorLabel={errors.etternavn ? \"Du må fylle inn etternavn\" : \"\"}\n                inverted={darkMode}\n                forceCompact={isCompact}\n                ref={register({ required: true })}\n                onChange={handleChange}\n                variant=\"small\"\n            />\n            <TextInput\n                name=\"personnummer\"\n                className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                label=\"Personnummer\"\n                errorLabel={errors.personnummer ? \"Du må fylle inn personnummer\" : \"\"}\n                helpLabel=\"Vi lagrer ikke ditt personnummer\"\n                inverted={darkMode}\n                forceCompact={isCompact}\n                maxLength={11}\n                type=\"tel\"\n                placeholder=\"11 siffer\"\n                ref={register({ required: true, maxLength: 11, minLength: 11, pattern: /^[0-9]*$/ })}\n                onChange={handleChange}\n                variant=\"small\"\n            />\n            {showNext && (\n                <PrimaryButton\n                    forceCompact={isCompact}\n                    inverted={darkMode}\n                    className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                >\n                    Gå videre\n                </PrimaryButton>\n            )}\n        </form>\n    );\n};\n\nexport default PersonalInfoForm;\n","import React, { useContext, useRef, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { TextInput } from \"@fremtind/jkl-text-input-react\";\nimport { PrimaryButton } from \"@fremtind/jkl-button-react\";\nimport { ExampleContext } from \"@fremtind/jkl-portal-components\";\nimport { useScrollIntoView } from \"@fremtind/jkl-react-hooks\";\nimport { InfoMessage } from \"@fremtind/jkl-message-box-react\";\n\nimport \"./AddressForm.scss\";\nimport { Select } from \"@fremtind/jkl-select-react\";\n\ninterface Props {\n    onSubmit: (arg0: boolean) => void;\n}\n\nconst AddressForm: React.FC<Props> = ({ onSubmit }) => {\n    const [showNext, setShowNext] = useState(true);\n    const { darkMode, isCompact } = useContext(ExampleContext);\n    const { register, handleSubmit, errors, watch } = useForm();\n    const ref = useRef<HTMLFormElement>(null);\n    const postnummerRef = useRef<HTMLInputElement>(null);\n    const streetNameRef = useRef<HTMLInputElement>(null);\n    const numberRef = useRef<HTMLDivElement>(null);\n\n    useScrollIntoView({ ref });\n\n    useEffect(() => postnummerRef?.current?.focus(), []);\n    useEffect(() => streetNameRef?.current?.focus(), []);\n    useEffect(() => numberRef?.current?.focus(), []);\n\n    const postnummer = watch(\"postnummer\");\n\n    const handleChange = () => {\n        setShowNext(true);\n        onSubmit(false);\n    };\n    const submit = () => {\n        setShowNext(false);\n        onSubmit(true);\n    };\n\n    return (\n        <motion.form\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onSubmit={handleSubmit(submit)}\n            style={{ position: \"relative\" }}\n        >\n            <aside style={{ position: \"absolute\", top: \"-150px\" }} ref={ref} />\n            <InfoMessage\n                title=\"Fant ikke addresse\"\n                fullWidth\n                className={`jkl-spacing--top-${isCompact ? \"3\" : \"4\"} jkl-spacing--bottom-1`}\n            >\n                Vi fant ikke addressen din i vår database. Fortell oss hvor du bor.\n            </InfoMessage>\n            <div className=\"jkl-simple-form__postal-group\">\n                <TextInput\n                    variant=\"large\"\n                    label=\"Postnummer\"\n                    name=\"postnummer\"\n                    className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                    errorLabel={errors.postnummer ? \"Du må fylle inn postnummer\" : \"\"}\n                    inverted={darkMode}\n                    forceCompact={isCompact}\n                    maxLength={6}\n                    placeholder=\"4 siffer\"\n                    type=\"tel\"\n                    onChange={handleChange}\n                    ref={(e) => {\n                        // @ts-ignore:: should be improved, temporarily escaped\n                        register(e, { required: true, maxLength: 4, minLength: 4, pattern: /^[0-9]*$/ });\n                        // @ts-ignore:: should be improved, temporarily escaped\n                        postnummerRef.current = e;\n                    }}\n                />\n                <AnimatePresence>\n                    {postnummer?.toString().length === 4 && (\n                        <motion.p\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                            className={`jkl-simple-form__postal-group__area ${\n                                isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"\n                            }`}\n                        >\n                            Geilo\n                        </motion.p>\n                    )}\n                </AnimatePresence>\n            </div>\n            <AnimatePresence>\n                {postnummer?.toString().length === 4 && (\n                    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n                        <TextInput\n                            variant=\"medium\"\n                            label=\"Gatenavn\"\n                            name=\"streetName\"\n                            className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                            errorLabel={errors.streetName ? \"Du må fylle inn gateadresse\" : \"\"}\n                            inverted={darkMode}\n                            forceCompact={isCompact}\n                            type=\"text\"\n                            onChange={handleChange}\n                            ref={(e) => {\n                                // @ts-ignore: should be improved, temporarily escaped\n                                register(e, { required: true });\n                                // @ts-ignore: should be improved, temporarily escaped\n                                streetNameRef.current = e;\n                            }}\n                        />\n                    </motion.div>\n                )}\n            </AnimatePresence>\n            <AnimatePresence>\n                {postnummer?.toString().length === 4 && (\n                    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} ref={numberRef}>\n                        <Select\n                            className={`jkl-simple-form__postal-group__house-number ${\n                                isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"\n                            }`}\n                            items={[\"1\", \"3\", \"5\", \"7\", \"9\"]}\n                            onChange={handleChange}\n                            label=\"Nummer\"\n                        />\n                    </motion.div>\n                )}\n            </AnimatePresence>\n            {showNext && (\n                <PrimaryButton\n                    forceCompact={isCompact}\n                    inverted={darkMode}\n                    className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                >\n                    Gå videre\n                </PrimaryButton>\n            )}\n        </motion.form>\n    );\n};\n\nexport default AddressForm;\n","import React, { useContext, useRef, useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { PrimaryButton } from \"@fremtind/jkl-button-react\";\nimport { ExampleContext } from \"@fremtind/jkl-portal-components\";\nimport { useScrollIntoView } from \"@fremtind/jkl-react-hooks\";\nimport { ErrorMessage } from \"@fremtind/jkl-message-box-react\";\nimport { RadioButtons } from \"@fremtind/jkl-radio-button-react\";\n\ninterface Props {\n    onSubmit: () => void;\n}\n\nconst HouseDetailsForm: React.FC<Props> = ({ onSubmit }) => {\n    const { darkMode, isCompact } = useContext(ExampleContext);\n    const [houseType, setHouseType] = useState<string>();\n    const ref = useRef<HTMLFormElement>(null);\n\n    useScrollIntoView({ ref });\n\n    return (\n        <motion.form\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onSubmit={(e) => {\n                e.preventDefault();\n                onSubmit();\n            }}\n            style={{ position: \"relative\" }}\n        >\n            <aside style={{ position: \"absolute\", top: \"-150px\" }} ref={ref} />\n            <RadioButtons\n                choices={[\"Enebolig\", \"Tomannsbolig\", \"Rekkehus\", \"Leilighet\"]}\n                legend=\"Hvilken boligtype?\"\n                name=\"housetype\"\n                onChange={(e) => setHouseType(e.target.value)}\n                selectedValue={houseType}\n                className={\n                    isCompact ? \"jkl-spacing--bottom-1 jkl-spacing--top-2\" : \"jkl-spacing--bottom-2 jkl-spacing--top-3\"\n                }\n                variant=\"large\"\n            />\n\n            <AnimatePresence>\n                {houseType === \"Enebolig\" && (\n                    <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                    >\n                        <ErrorMessage title=\"Vi forsikrer ikke eneboliger\">\n                            Fordi vi ville vise en alternativ sti her så har vi lagt inn denne tulleregelen. Kontakt\n                            nærmeste person for å få vite mer om dette.\n                        </ErrorMessage>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n            {houseType !== \"Enebolig\" && (\n                <PrimaryButton\n                    forceCompact={isCompact}\n                    inverted={darkMode}\n                    className={isCompact ? \"jkl-spacing--bottom-1\" : \"jkl-spacing--bottom-2\"}\n                >\n                    Gå videre\n                </PrimaryButton>\n            )}\n        </motion.form>\n    );\n};\n\nexport default HouseDetailsForm;\n","import React, { useLayoutEffect, useContext, useState } from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { TertiaryButton } from \"@fremtind/jkl-button-react\";\nimport { ExampleContext } from \"@fremtind/jkl-portal-components\";\n\nimport PersonalInfoForm from \"./SimpleForm/PersonalInfoForm\";\nimport AddressForm from \"./SimpleForm/AddressForm\";\nimport HouseDetailsForm from \"./SimpleForm/HouseDetailsForm\";\n\nconst SimpleForm = () => {\n    const [showAddress, setShowAddress] = useState(false);\n    const [showHouseDetails, setShowHouseDetails] = useState(false);\n    const { registerKnobs } = useContext(ExampleContext);\n\n    useLayoutEffect(() => {\n        if (registerKnobs) {\n            registerKnobs([\n                <TertiaryButton onClick={() => location.reload()} key=\"reset\">\n                    Reset\n                </TertiaryButton>,\n            ]);\n        }\n    }, [registerKnobs]);\n\n    return (\n        <section>\n            <h1 className=\"jkl-title-large jkl-spacing--top-3 jkl-spacing--bottom-2\">Liksomskjema</h1>\n            <p className=\"jkl-lead jkl-spacing--bottom-2\">\n                Har du husforsikring får du erstatning slik at du kan reparere eller bygge nytt hvis noe skjer med\n                boligen din.\n            </p>\n            <PersonalInfoForm onSubmit={setShowAddress} />\n            <AnimatePresence>{showAddress && <AddressForm onSubmit={setShowHouseDetails} />}</AnimatePresence>\n            <AnimatePresence>\n                {showHouseDetails && <HouseDetailsForm onSubmit={() => console.log(\"yeah\")} />}\n            </AnimatePresence>\n        </section>\n    );\n};\n\nexport default SimpleForm;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport SimpleForm from \"../../components/Examples/SimpleForm\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst FlowExample = makeShortcode(\"FlowExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Eksempler`}</h1>\n    <Ingress mdxType=\"Ingress\">Her finner du eksempler på hvordan du kan bruke Jøkul</Ingress>\n    <h2>{`Enkelt skjema`}</h2>\n    <FlowExample mdxType=\"FlowExample\">\n    <SimpleForm mdxType=\"SimpleForm\" />\n    </FlowExample>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}