{"version":3,"file":"component---packages-react-hooks-documentation-previous-value-mdx-2021f24efc5735a6fd9c.js","mappings":"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","sources":["webpack://@fremtind/portal/../packages/react-hooks/src/useReducedMotion/useReducedMotion.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/animation.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/useClickOutside.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScreen/state.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useMutationObserver/useMutationObserver.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScreen/useScreen.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useScrollIntoView/useScrollIntoView.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/useBrowserPreferences/useBrowserPreferences.tsx","webpack://@fremtind/portal/../packages/react-hooks/src/usePreviousValue/usePreviousValue.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useFocusOutside.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useIntersectionObserver/useIntersectionObserver.ts","webpack://@fremtind/portal/../packages/react-hooks/src/useKeyListener.ts","webpack://@fremtind/portal/../packages/react-hooks/documentation/PreviousValueExample.tsx","webpack://@fremtind/portal/../packages/react-hooks/documentation/previousValue.mdx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst PREFERS_REDUCED_MOTION = \"(prefers-reduced-motion: no-preference)\";\nconst getInitialState = () => {\n    if (typeof window !== \"undefined\" && window.matchMedia) {\n        return !window.matchMedia(PREFERS_REDUCED_MOTION).matches;\n    }\n    return false;\n};\n\nexport const useReducedMotion = (): boolean => {\n    const [prefersReducedMotion, setPrefersReducedMotion] = useState(getInitialState());\n\n    useEffect(() => {\n        let mediaQueryList: MediaQueryList;\n        let listener: (event: MediaQueryListEvent) => void;\n        if (typeof window !== \"undefined\" && window.matchMedia) {\n            mediaQueryList = window.matchMedia(PREFERS_REDUCED_MOTION);\n            listener = (event: MediaQueryListEvent) => setPrefersReducedMotion(!event.matches);\n            mediaQueryList?.addListener(listener);\n        }\n\n        return () => {\n            mediaQueryList?.removeListener(listener);\n        };\n    }, []);\n\n    return prefersReducedMotion;\n};\n","import { MutableRefObject, useEffect, useRef, RefObject, useCallback, useLayoutEffect } from \"react\";\nimport { useReducedMotion } from \"./useReducedMotion/useReducedMotion\";\n\ninterface HTMLElementOrCoreToggleElement<T extends HTMLElementOrCoreToggleElement<T>> extends HTMLElement {\n    el?: T; // Hack and workaround until https://github.com/nrkno/custom-element-to-react/pull/17 has landed\n}\n\ninterface Options {\n    onTransitionStart?: (isOpening: boolean) => void;\n    onTransitionEnd?: (isOpen: boolean) => void;\n}\n\nexport function useAnimatedHeight<T extends HTMLElement>(\n    isOpen: boolean,\n    options?: Options,\n): [RefObject<T>, () => void] {\n    const raf1 = useRef<number>();\n    const raf2 = useRef<number>();\n    const elementRef = useRef<T>(null);\n    const firstRender = useRef<boolean>(true);\n    const prefersReducedMotion = useReducedMotion();\n\n    function handleTransitionEnd(event: TransitionEvent) {\n        const element = getElement(elementRef);\n\n        // Ignore bubbling transitions from within container\n        if (element && event.target === element) {\n            element.removeAttribute(\"style\");\n            options?.onTransitionEnd?.(isOpen);\n        }\n    }\n\n    const runAnimation = useCallback(() => {\n        if (firstRender.current) {\n            return; // Do not play animation on first render\n        }\n\n        options?.onTransitionStart?.(isOpen);\n\n        if (prefersReducedMotion) {\n            options?.onTransitionEnd?.(isOpen); // make sure to call callback when animation is off\n            return;\n        }\n\n        const element = getElement(elementRef);\n        if (element) {\n            element.style.display = \"block\";\n            element.style.overflow = \"hidden\";\n            if (isOpen) {\n                element.style.height = \"0\";\n                element.style.height = `${element.scrollHeight}px`;\n            } else {\n                // If the scrollHeight is 0 it means that we are transitioning from height 0 -> 0.\n                // This causes the \"transitionend\"-event to never fire and the element gets stuck with\n                // style: height: 0; display: block; overflow:hidden\n                if (element.scrollHeight === 0) {\n                    element.removeAttribute(\"style\");\n                    return;\n                }\n\n                element.style.height = `${element.scrollHeight}px`;\n\n                raf1.current = requestAnimationFrame(() => {\n                    raf2.current = requestAnimationFrame(() => {\n                        element.style.height = `${0}px`;\n                    });\n                });\n            }\n        }\n    }, [isOpen]);\n\n    useLayoutEffect(() => {\n        runAnimation();\n    }, [isOpen, runAnimation]);\n\n    useEffect(() => {\n        const element = getElement(elementRef);\n        if (element) {\n            element.addEventListener(\"transitionend\", handleTransitionEnd);\n        }\n\n        return () => {\n            if (element) {\n                element.removeEventListener(\"transitionend\", handleTransitionEnd);\n            }\n        };\n    }, [isOpen]);\n\n    useEffect(() => {\n        const r1 = raf1.current;\n        const r2 = raf2.current;\n        firstRender.current = false;\n        return () => {\n            r1 && cancelAnimationFrame(r1);\n            r2 && cancelAnimationFrame(r2);\n        };\n    }, [raf1, raf2]);\n\n    return [elementRef, runAnimation];\n}\n\nfunction getElement(elementRef: MutableRefObject<HTMLElementOrCoreToggleElement<HTMLElement> | null>) {\n    // Workaround to handle custom elements from NRK Core components until this lands:\n    // https://github.com/nrkno/custom-element-to-react/pull/17\n    return elementRef.current && (elementRef.current.el || elementRef.current);\n}\n","import { RefObject, useEffect } from \"react\";\n\nexport function useClickOutside(ref: RefObject<HTMLElement> | null, fn: () => void) {\n    function handleClickOutside(event: MouseEvent) {\n        if (ref?.current && !ref.current.contains(event.target as Node)) {\n            fn();\n        }\n    }\n\n    useEffect(() => {\n        if (ref) {\n            document && document.addEventListener(\"click\", handleClickOutside);\n        }\n        return () => {\n            if (ref) {\n                document && document.removeEventListener(\"click\", handleClickOutside);\n            }\n        };\n    });\n}\n","import { breakpoints } from \"@fremtind/jkl-core\";\n\nexport interface State {\n    isSmallDevice: boolean;\n    isMediumDevice: boolean;\n    isLargeDevice: boolean;\n    isXlDevice: boolean;\n    isLandscape: boolean;\n    isPortrait: boolean;\n    inner: {\n        height: number;\n        width: number;\n    };\n}\n\nenum ActionTypes {\n    resized = \"WINDOW_RESIZED\",\n}\n\ninterface Action {\n    type: ActionTypes;\n    width: number;\n    height: number;\n}\n\nexport const actionTypes = {\n    resized: ActionTypes.resized,\n};\n\nconst setDeviceSize = (width: number, height: number) => ({\n    isSmallDevice: width <= breakpoints.small,\n    isMediumDevice: width > breakpoints.small && width < breakpoints.medium,\n    isLargeDevice: width > breakpoints.medium && width < breakpoints.large,\n    isXlDevice: width > breakpoints.large,\n    isPortrait: height >= width,\n    isLandscape: height < width,\n    inner: {\n        height,\n        width,\n    },\n});\n\nexport const initialState = {\n    isSmallDevice: false,\n    isMediumDevice: false,\n    isLargeDevice: false,\n    isXlDevice: false,\n    isLandscape: false,\n    isPortrait: false,\n    inner: {\n        height: 0,\n        width: 0,\n    },\n};\n\nexport const init = () => {\n    const width = typeof window !== \"undefined\" ? window.innerWidth : 0;\n    const height = typeof window !== \"undefined\" ? window.innerHeight : 0;\n    return setDeviceSize(width, height);\n};\n\nexport const reducer = (state: State, { type, width, height }: Action) => {\n    switch (type) {\n        case actionTypes.resized:\n            return {\n                ...state,\n                ...setDeviceSize(width, height),\n            };\n    }\n};\n","import { useEffect, useRef, RefObject } from \"react\";\n\nconst hasWindowWithMutationObserver = () => typeof window !== \"undefined\" && typeof MutationObserver !== \"undefined\";\n\nexport const useMutationObserver = (\n    targetRef: RefObject<HTMLElement>,\n    onObservation: MutationCallback,\n    config?: Partial<MutationObserverInit>,\n) => {\n    const observerRef = useRef<MutationObserver>(null);\n\n    useEffect(() => {\n        let observer = observerRef.current;\n\n        if (hasWindowWithMutationObserver()) {\n            const target = targetRef.current;\n\n            if (observer) {\n                observer.disconnect();\n            }\n\n            observer = new MutationObserver(onObservation);\n\n            if (target) {\n                observer.observe(target, config);\n            }\n        }\n        return () => {\n            if (hasWindowWithMutationObserver() && observer) {\n                observer.disconnect();\n            }\n        };\n    }, [targetRef, onObservation, config]);\n};\n","import { useEffect, useReducer } from \"react\";\nimport { reducer, initialState, init, actionTypes } from \"./state\";\n\nexport const useScreen = () => {\n    const [device, deviceDispatch] = useReducer(reducer, initialState, init);\n\n    const handleScreenChange = () =>\n        requestAnimationFrame(() =>\n            deviceDispatch({ type: actionTypes.resized, width: window.innerWidth, height: window.innerHeight }),\n        );\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            window.addEventListener(\"resize\", handleScreenChange);\n        }\n        return () => {\n            if (typeof window !== \"undefined\") {\n                window.removeEventListener(\"resize\", handleScreenChange);\n            }\n        };\n    }, []);\n\n    return { ...device };\n};\n","import { useEffect, RefObject } from \"react\";\n\ntype ValueOf<T> = T[keyof T];\n\ninterface Props {\n    ref: RefObject<ValueOf<HTMLElementTagNameMap>>;\n    timeout?: number;\n    autoScroll?: boolean;\n    options?: ScrollIntoViewOptions;\n}\n\nexport const useScrollIntoView = ({ ref, timeout = 0, autoScroll = true, options = { behavior: \"smooth\" } }: Props) => {\n    const scrollIntoView = () => {\n        if (ref?.current) {\n            ref.current.scrollIntoView(options);\n        }\n    };\n    useEffect(() => {\n        if (!autoScroll) {\n            return;\n        }\n        const scrollFn = setTimeout(scrollIntoView, timeout);\n        return () => clearTimeout(scrollFn);\n    }, [ref, timeout, autoScroll]);\n\n    return [scrollIntoView];\n};\n","import { useEffect, useState } from \"react\";\n\ntype ColorScheme = \"light\" | \"dark\";\ntype BrowserPreferences = {\n    prefersReducedMotion: boolean;\n    prefersColorScheme: ColorScheme;\n};\n\nconst PREFERS_REDUCED_MOTION = \"(prefers-reduced-motion: reduce)\";\nconst PREFERS_LIGHT_COLOR_SCHEME = \"(prefers-color-scheme: light)\";\n\nconst getInitialMediaQueryMatch = (mediaQuery: string) => {\n    if (typeof window !== \"undefined\" && window.matchMedia) {\n        return window.matchMedia(mediaQuery).matches;\n    }\n    return false;\n};\n\nconst addMediaQueryListener = (mq: MediaQueryList, callback: (e: MediaQueryListEvent) => void) => {\n    if (typeof mq.addEventListener !== \"undefined\") {\n        mq.addEventListener(\"change\", callback);\n    } else {\n        mq.addListener(callback);\n    }\n};\n\nexport const useBrowserPreferences = (): BrowserPreferences => {\n    const [prefersReducedMotion, setPrefersReducedMotion] = useState(getInitialMediaQueryMatch(PREFERS_REDUCED_MOTION));\n    const [prefersColorScheme, setPrefersColorScheme] = useState<ColorScheme>(\n        getInitialMediaQueryMatch(PREFERS_LIGHT_COLOR_SCHEME) ? \"light\" : \"dark\",\n    );\n\n    useEffect(() => {\n        if (typeof window !== \"undefined\" && window.matchMedia) {\n            addMediaQueryListener(window.matchMedia(PREFERS_REDUCED_MOTION), (e) => {\n                setPrefersReducedMotion(e.matches);\n            });\n\n            addMediaQueryListener(window.matchMedia(PREFERS_LIGHT_COLOR_SCHEME), (e) => {\n                setPrefersColorScheme(e.matches ? \"light\" : \"dark\");\n            });\n        }\n    }, []);\n\n    return { prefersReducedMotion, prefersColorScheme };\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const usePreviousValue = <T>(value: T): T | undefined => {\n    const ref = useRef<T>();\n\n    useEffect(() => {\n        ref.current = value;\n    });\n\n    return ref.current;\n};\n","import { RefObject, useEffect } from \"react\";\n\nexport function useFocusOutside(ref: RefObject<HTMLElement> | null, fn: () => void) {\n    function handleFocusOutside(event: FocusEvent) {\n        if (ref?.current && !ref.current.contains(event.target as Node)) {\n            fn();\n        }\n    }\n\n    useEffect(() => {\n        if (ref) {\n            document && document.addEventListener(\"focusin\", handleFocusOutside);\n        }\n        return () => {\n            if (ref) {\n                document && document.removeEventListener(\"focusin\", handleFocusOutside);\n            }\n        };\n    });\n}\n","import { useEffect, useRef, RefObject } from \"react\";\n\nconst hasWindowWithIntersectionObserver = () =>\n    typeof window !== \"undefined\" && typeof IntersectionObserver !== \"undefined\";\n\nexport const useIntersectionObserver = (\n    targetRef: RefObject<HTMLElement | SVGElement>,\n    onIntersect: IntersectionObserverCallback,\n    fallback: VoidFunction,\n    options?: Partial<IntersectionObserverInit>,\n) => {\n    const observerRef = useRef<IntersectionObserver>(null);\n\n    useEffect(() => {\n        let observer = observerRef.current;\n        if (hasWindowWithIntersectionObserver()) {\n            const target = targetRef.current;\n\n            if (observer) {\n                observer.disconnect();\n            }\n\n            observer = new IntersectionObserver(onIntersect, options);\n\n            if (target) {\n                observer.observe(target);\n            }\n        } else {\n            fallback();\n        }\n        return () => {\n            if (hasWindowWithIntersectionObserver() && observer) {\n                observer.disconnect();\n            }\n        };\n    }, [targetRef, onIntersect, fallback, options]);\n};\n","import { RefObject, useEffect } from \"react\";\n\nexport function useKeyListener(\n    ref: RefObject<HTMLElement> | null,\n    keys: string[] | string | null,\n    fn: (event: KeyboardEvent) => void,\n) {\n    if (typeof keys === \"string\") {\n        keys = [keys];\n    }\n    function handleKeyDown(event: KeyboardEvent) {\n        if (keys && !keys.includes(event.key)) {\n            return;\n        }\n        fn(event);\n    }\n\n    useEffect(() => {\n        const element = ref && ref.current;\n        if (element) {\n            element.addEventListener(\"keydown\", handleKeyDown);\n        }\n        return () => {\n            if (element) {\n                element.removeEventListener(\"keydown\", handleKeyDown);\n            }\n        };\n    });\n}\n","import React, { useState } from \"react\";\nimport { usePreviousValue } from \"../src\";\n\nconst usePreviousValueExample = () => {\n    const [state, setState] = useState(0);\n    const previousValue = usePreviousValue(state);\n\n    return (\n        <section>\n            <p className=\"jkl-body jkl-spacing--bottom-1\">\n                Nåværende verdi: {state}\n                <br />\n                Forrige verdi: {previousValue?.toString() ?? \"undefined\"}\n            </p>\n            <button className=\"jkl-button jkl-button--primary\" onClick={() => setState(state + 1)}>\n                Inkrementer\n            </button>\n        </section>\n    );\n};\n\nexport default usePreviousValueExample;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport PreviousValueExample from \"./PreviousValueExample\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    usePreviousValue lagrer forrige verdi av en variabel. Dette kan brukes til å agere på endringer hvor du trenger å\n    vite den forrige verdien.\n    </Ingress>\n    <ComponentExample component={PreviousValueExample} mdxType=\"ComponentExample\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["PREFERS_REDUCED_MOTION","useReducedMotion","useState","window","matchMedia","matches","prefersReducedMotion","setPrefersReducedMotion","useEffect","mediaQueryList","listener","event","addListener","removeListener","useAnimatedHeight","isOpen","options","raf1","useRef","raf2","elementRef","firstRender","handleTransitionEnd","element","getElement","target","removeAttribute","onTransitionEnd","runAnimation","useCallback","current","onTransitionStart","style","display","overflow","height","scrollHeight","requestAnimationFrame","useLayoutEffect","addEventListener","removeEventListener","r1","r2","cancelAnimationFrame","el","useClickOutside","ref","fn","handleClickOutside","contains","document","ActionTypes","hasWindowWithMutationObserver","MutationObserver","useMutationObserver","targetRef","onObservation","config","observerRef","observer","disconnect","observe","actionTypes","resized","setDeviceSize","width","isSmallDevice","breakpoints","isMediumDevice","isLargeDevice","isXlDevice","isPortrait","isLandscape","inner","initialState","init","innerWidth","innerHeight","reducer","state","type","useScreen","useReducer","device","deviceDispatch","handleScreenChange","useScrollIntoView","timeout","autoScroll","behavior","scrollIntoView","scrollFn","setTimeout","clearTimeout","PREFERS_LIGHT_COLOR_SCHEME","getInitialMediaQueryMatch","mediaQuery","addMediaQueryListener","mq","callback","useBrowserPreferences","prefersColorScheme","setPrefersColorScheme","e","usePreviousValue","value","useFocusOutside","handleFocusOutside","hasWindowWithIntersectionObserver","IntersectionObserver","useIntersectionObserver","onIntersect","fallback","useKeyListener","keys","handleKeyDown","includes","key","setState","previousValue","className","toString","onClick","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","PreviousValueExample","isMDXComponent"],"sourceRoot":""}