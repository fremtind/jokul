{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/blog/darkmode/",
    "result": {"data":{"page":{"id":"2bd1cd3f-e63b-5672-b77c-d2fd3acaee91","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dark mode og Inverted—Hva er greia?\",\n  \"author\": \"Pio Rasch-Halvorsen\",\n  \"description\": \"Hvordan fungerer egentlig mørkt tema i Jøkul?\",\n  \"publishDate\": \"2020.09.21\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"J\\xF8kul gir deg to hjelpemidler for \\xE5 jobbe med m\\xF8rkt tema i hele eller deler av l\\xF8sningen din. Men hvilket skal du bruke n\\xE5r? Og hvordan?\"), mdx(\"p\", null, \"Hvis du har sett p\\xE5 komponentsidene i portalen den siste tiden har du sikkert merket at det har kommet et ekstra valg i eksemplene: Valget \\\"Dark mode\\\", under overskriften \\\"Visning\\\", gj\\xF8r tilsynelatende det samme som valget \\\"Invertert\\\", under overskriften \\\"Egenskaper\\\", har gjort frem til n\\xE5.\"), mdx(\"p\", null, \"N\\xF8kkelen til forskjellen ligger i overskriftene: \\\"Invertert\\\" er en egenskap som settes p\\xE5 selve komponenten og kun gjelder den, mens \\\"Dark mode\\\" er en egenskap som settes p\\xE5 eksempelet og gjelder for hele omr\\xE5det inne i eksemplet. Dette er ogs\\xE5 forskjellen p\\xE5 hvordan du bruker dem i utvikling.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/blog/dark-mode-inverted.png\",\n    \"alt\": \"Valgene for \\\"Dark mode\\\" og \\\"Invertert\\\" i et komponenteksempel\"\n  })), mdx(\"h2\", null, \"M\\xF8rkt tema for moderne nettlesere\"), mdx(\"p\", null, \"I moderne nettlesere er den beste l\\xF8sningen for dark mode \\xE5 benytte seg av attributten \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data-theme=\\\"dark\\\"\"), \". Alle komponentene i J\\xF8kul vil automatisk bytte til m\\xF8rkt tema dersom de befinner seg inne i et element med denne attributten satt. Du kan dermed enkelt sette m\\xF8rkt tema p\\xE5 hele eller deler av l\\xF8sningen du lager. Attributten endrer ingenting p\\xE5 selve elementet den er satt p\\xE5, s\\xE5 du m\\xE5 selv velge/endre bakgrunnsfarge og skriftfarge.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<body data-theme=\\\"dark\\\">\\n    <InfoMessageBox title=\\\"M\\xF8rkt tema\\\">Alle J\\xF8kul-komponenter p\\xE5 denne siden vil automatisk f\\xE5 m\\xF8rkt tema.</InfoMessageBox>\\n</body>\\n\")), mdx(\"p\", null, \"Du kan fint sette m\\xF8rkt tema p\\xE5 kun en liten del av l\\xF8sningen, og man kan ogs\\xE5 eksplisitt sette lyst tema med \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data-theme=\\\"light\\\"\"), \" p\\xE5 samme m\\xE5te. Eksemplene i portalen er et eksempel p\\xE5 dette, der \\\"Dark mode\\\"-valget styrer \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data-theme\"), \"-attributten kun p\\xE5 komponentvinduet.\"), mdx(\"p\", null, \"Denne l\\xF8sningen benytter seg av \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties\"\n  }, \"CSS custom properties\"), \", og fungerer derfor ikke i IE. I de fleste tilfeller anbefaler vi \\xE5 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ikke\"), \" implementere dark mode for IE, og se p\\xE5 tilbudet om m\\xF8rkt tema som en form for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Progressive_enhancement\"\n  }, \"progressive enhanchement\"), \". Om du likevel har et behov for \\xE5 bruke m\\xF8rkt tema p\\xE5 hele eller deler av l\\xF8sningen din ogs\\xE5 for IE, kan du lese om dette under.\"), mdx(\"h2\", null, \"M\\xF8rkt tema for Internet Explorer\"), mdx(\"p\", null, \"Dersom du er n\\xF8dt til \\xE5 implementere m\\xF8rkt tema for Internet Explorer kan man alts\\xE5 ikke bruke den generelle l\\xF8sningen over, men m\\xE5 i stedet styre temaet per enkelt komponent. Dette gj\\xF8res ved \\xE5 sette prop'en \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inverted\"), \" til true. Siden dette m\\xE5 gj\\xF8res p\\xE5 hver eneste J\\xF8kul-komponent i l\\xF8sningen vil nok dette best l\\xF8ses ved hjelp av f.eks. en \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/context.html\"\n  }, \"context\"), \" eller \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/render-props.html\"\n  }, \"render props\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<InfoMessageBox inverted>Denne meldingen har m\\xF8rkt tema</InfoMessageBox>\\n<WarningMessageBox>Denne meldingen har lyst tema</WarningMessageBox>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"const darkTheme = useContext(myThemeContext);\\n\\n<SuccessMessageBox inverted={darkTheme}>Denne meldingen bytter tema ut fra verdien i myThemeContext</SuccessMessageBox>;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Dark mode og Inverted—Hva er greia?","react":null,"scss":null,"order":null,"author":"Pio Rasch-Halvorsen","publishDate":"2020.09.21","group":null}}},"pageContext":{"id":"2bd1cd3f-e63b-5672-b77c-d2fd3acaee91","title":"Dark mode og Inverted—Hva er greia?"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}