{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/blog/auto-dark-mode/",
    "result": {"data":{"page":{"id":"b37bc399-0ed9-51cb-9859-c884611b052d","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Guide til dark mode i Jøkul\",\n  \"author\": \"Pio Rasch-Halvorsen\",\n  \"description\": \"Hvordan gjøre løsningen din klar for automatisk dark mode som designer eller utvikler\",\n  \"publishDate\": \"2021.07.07\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Automatisk dark mode bytter tema p\\xE5 l\\xF8sninger bygget med J\\xF8kul, basert p\\xE5 inn\\xADstillingene p\\xE5 brukerens mobil eller data\\xADmaskin. Her er noen tips for \\xE5 gj\\xF8re din l\\xF8sning klar for dette.\"), mdx(\"h2\", null, \"Hjelp! Jeg vil ikke!\"), mdx(\"p\", null, \"Aller f\\xF8rst: Hvis du vil oppgradere til siste versjon av J\\xF8kul, men ikke enn\\xE5 er klar for \\xE5 aktivere automatisk dark mode, lar det seg likevel gj\\xF8re! Bare s\\xF8rg for at l\\xF8sningen din rendres inne i et element med f\\xF8lgende attributter satt:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div class=\\\"jkl\\\" data-theme=\\\"light\\\" />\\n\")), mdx(\"p\", null, \"Da vil applikasjonen \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"alltid\"), \" vises i lyst tema. Du kan selvf\\xF8lgelig ogs\\xE5 spesifisere \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"m\\xF8rkt\"), \" tema p\\xE5 denne m\\xE5ten om du heller vil det. Merk at du ogs\\xE5 kan sette tema p\\xE5 enkeltdeler av l\\xF8sningen din med \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data-theme\"), \"-attributten.\"), mdx(\"h2\", null, \"Ting \\xE5 huske p\\xE5 n\\xE5r du designer for dark mode\"), mdx(\"p\", null, \"Dark mode setter Granitt som bakgrunnsfarge og Sn\\xF8hvit som tekstfarge p\\xE5 l\\xF8sningen. Det blir imidlertid \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ikke\"), \" automatisk byttet bakgrunnsfarge p\\xE5 seksjoner der man har aktivt satt en bakgrunnsfarge (f.eks. felter som er uthevet med m\\xF8rkere toner). For disse m\\xE5 man finne en passende bakgrunnsfarge for dark mode, som s\\xF8rger for \\xE5 gi tilsvarende kontrast mot Granitt bakgrunn.\"), mdx(\"p\", null, \"Husk ogs\\xE5 p\\xE5 at skygger ikke vil synes mot m\\xF8rke bakgrunner, og at felter som er utheves med skygge derfor b\\xF8r utheves p\\xE5 annen m\\xE5te i dark mode. For eksempel kan man bruke omriss eller endring i bakgrunnsfarge.\"), mdx(\"p\", null, \"Hvis det er deler av l\\xF8sningen din som \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"alltid\"), \" skal vises i m\\xF8rkt tema m\\xE5 du s\\xF8rge for at bakgrunnen har \\xF8nsket kontrast mot Granitt bakgrunnsfarge, s\\xE5 den ikke g\\xE5r i ett med resten av l\\xF8sningen i dark mode.\"), mdx(\"h2\", null, \"Verkt\\xF8y for \\xE5 utvikle med dark mode\"), mdx(\"p\", null, \"Vi har fors\\xF8kt \\xE5 gj\\xF8re det s\\xE5 enkelt som mulig \\xE5 utvikle l\\xF8sninger med tanke p\\xE5 dark mode. Som standard vil alle J\\xF8kul-komponentene automatisk bytte mellom lyst og m\\xF8rkt tema basert p\\xE5 brukerens preferanser. For helt enkle l\\xF8sninger er det dermed ikke sikkert man m\\xE5 gj\\xF8re noe ekstra arbeid!\"), mdx(\"h3\", null, \"Overstyre automatisk bytte\"), mdx(\"p\", null, \"Du kan overstyre det automatiske byttet ved \\xE5 sette attributten \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data-theme\"), \" p\\xE5 elementer i DOMet. Det er ogs\\xE5 mulig \\xE5 n\\xF8ste seksjoner med forskjellig tema inne i hverandre.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"<div className=\\\"jkl din-app\\\">\\n    // Dette innholdet bytter automatisk tema\\n    <div data-theme=\\\"dark\\\">\\n        // Dette innholdet er alltid i m\\xF8rkt tema\\n        <div data-theme=\\\"light\\\">/* Dette innholdet er alltid lyst, selv om det er inne i en div med m\\xF8rkt tema */</div>\\n    </div>\\n</div>\\n\")), mdx(\"h3\", null, \"Gj\\xF8re spesifikke endringer for dark mode\"), mdx(\"p\", null, \"I noen tilfeller holder det ikke med de automatiske endringene av bakgrunns- og tekstfarge, for eksempel n\\xE5r man har felter med en annen bakgrunnsfarge enn standard. For \\xE5 gj\\xF8re det enklere \\xE5 l\\xF8se disse tilfellene har vi laget mixins som er tilgjengelige fra \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jkl-core\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scss\"\n  }, \"@import \\\"@fremtind/jkl-core/jkl\\\";\\n\\n@include jkl.helper-light-mode-variables {\\n    --my-custom-background-color: #{jkl.$color-varde};\\n}\\n@include jkl.helper-dark-mode-variables {\\n    --my-custom-background-color: #{jkl.$color-skifer};\\n}\\n\\n.my-fancy-component {\\n    background-color: var(--my-custom-background-color);\\n    background-color: jkl.$color-varde; // Husk \\xE5 ta h\\xF8yde for IE om du m\\xE5 st\\xF8tte det\\n}\\n\")), mdx(\"h3\", null, \"H\\xE5ndtere elementer som alltid skal ha m\\xF8rkt tema\"), mdx(\"p\", null, \"Noen l\\xF8sninger har elementer som alltid skal vises med m\\xF8rkt tema, ogs\\xE5 n\\xE5r resten av applikasjonen er i lyst tema. For disse m\\xE5 du huske \\xE5 sette bakgrunns- og tekstfarge spesifikt, samt \\xE5 markere at den er l\\xE5st til m\\xF8rkt tema:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-scss\"\n  }, \"// MyDarkComponent.scss\\n\\n.my-dark-component {\\n    background-color: jkl.$color-granitt;\\n    color: jkl.$color-snohvit;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"// MyDarkComponent.tsx\\n\\n<div className=\\\"my-dark-component\\\" data-theme=\\\"dark\\\">\\n    Sammendrag\\n    <SummaryTable />\\n    <PrimaryButton>Kj\\xF8p forsikring</PrimaryButton>\\n</div>\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NB!\"), \": Dersom du skal st\\xF8tte Internet Explorer er du n\\xF8dt til \\xE5 bruke prop-en \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"inverted\"), \" p\\xE5 komponenter inne i elementer med m\\xF8rkt tema, siden den automatiske l\\xF8sningen benytter seg av CSS custom properties\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Guide til dark mode i Jøkul","react":null,"scss":null,"order":null,"author":"Pio Rasch-Halvorsen","publishDate":"2021.07.07","group":null}}},"pageContext":{"id":"b37bc399-0ed9-51cb-9859-c884611b052d","title":"Guide til dark mode i Jøkul"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}