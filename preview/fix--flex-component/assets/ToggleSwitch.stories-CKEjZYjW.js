import{c as y}from"./clsx-B-dksMZM.js";import{r as M,R as e}from"./index-siqcju79.js";import{u as _}from"./useId-CahK3IZ3.js";import{u as C}from"./useSwipeGesture-BFRccSS5.js";import{C as P}from"./CheckIcon-CgnQAFKR.js";import"./_commonjsHelpers-DaWZu8wl.js";import"./Icon-Crh-gXYv.js";const i=M.forwardRef(({"aria-pressed":o=!1,children:d,className:p,density:g,id:l,onChange:c,...u},v)=>{const f=_(l||"jkl-toggle-switch",{generateSuffix:!l}),[t,r]=e.useState(o);e.useEffect(()=>{r(o)},[o]);const{onClick:h,onPointerCancel:w,onPointerDown:k,onPointerMove:E,onPointerUp:T,...m}=u,R=n=>{r(!t),c?.(n,!t),h?.(n)},S=(n,s)=>{s!==t&&(r(s),c?.(n,s))},{gestureHandlers:b}=C({onClick:R,onChange:S,onPointerCancel:w,onPointerDown:k,onPointerMove:E,onPointerUp:T});return e.createElement("button",{className:y("jkl-toggle-switch",p),id:f,ref:v,"aria-pressed":t,"data-density":g,...m,...m.disabled?{}:b},d,e.createElement("div",{"aria-hidden":!0,className:"jkl-toggle-switch-widget"},e.createElement("div",{className:"jkl-toggle-switch-widget__slider"},e.createElement("div",{className:"jkl-toggle-switch-widget__knob"}),e.createElement(P,{variant:"small",bold:!0,className:"jkl-toggle-switch-widget__indicator"}))))});i.displayName="ToggleSwitch";i.__docgenInfo={description:"",methods:[],displayName:"ToggleSwitch",props:{density:{required:!1,tsType:{name:"union",raw:'"comfortable" | "compact"',elements:[{name:"literal",value:'"comfortable"'},{name:"literal",value:'"compact"'}]},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:`(
    event: React.MouseEvent<T> | React.PointerEvent<T>,
    pressed: boolean,
) => void`,signature:{arguments:[{type:{name:"union",raw:"React.MouseEvent<T> | React.PointerEvent<T>",elements:[{name:"ReactMouseEvent",raw:"React.MouseEvent<T>",elements:[{name:"HTMLButtonElement"}]},{name:"ReactPointerEvent",raw:"React.PointerEvent<T>",elements:[{name:"HTMLButtonElement"}]}]},name:"event"},{type:{name:"boolean"},name:"pressed"}],return:{name:"void"}}},description:'Handler for å håndtere toggling av knappen. Tar inn en boolean som indikerer om knappen er er togglet på\neller ikke, samt en MouseEvent eller en PointerEvent avhengig av om togglingen skjedde via klikk eller swipe.\n@example\n```js\nfunction handleChange(event, pressed) {\n   console.log(`ToggleSwitch er ${pressed ? "på" : "av"}`);\n}\n```'},"aria-pressed":{defaultValue:{value:"false",computed:!1},required:!1}}};const L={title:"Komponenter/ToggleSwitch",component:i,parameters:{layout:"centered"},tags:["autodocs"]},a={args:{children:"Mørk modus"}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:`{
  args: {
    children: "Mørk modus"
  }
}`,...a.parameters?.docs?.source}}};const $=["ToggleSwitch"];export{a as ToggleSwitch,$ as __namedExportsOrder,L as default};
