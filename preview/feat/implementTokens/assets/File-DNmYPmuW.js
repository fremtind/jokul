import{c as R}from"./clsx-B-dksMZM.js";import{r as i,R as e}from"./index-siqcju79.js";import{L as h}from"./Link-Dwdm3rDB.js";import{f,n as v}from"./formatNumber-DzIwhxNg.js";import{B as F}from"./Button-Bm5jRD6q.js";import{T as I}from"./TrashCanIcon-6vv0VZFo.js";import{S as k}from"./SupportLabel-Bm3W2hYF.js";function E(t,n){return t>=1e5?`${f(Number(t/1e3/1e3),{maximumFractionDigits:1,...n})}${v}MB`:`${f(t/1e3,{maximumFractionDigits:2,...n})}${v}KB`}const g=i.createContext(null),H=()=>i.useContext(g),w=({context:t,children:n})=>e.createElement(g.Provider,{value:t},n);w.__docgenInfo={description:"",methods:[],displayName:"FileInputContextProvider",props:{children:{required:!0,tsType:{name:"union",raw:"ReactNode | ReactNode[]",elements:[{name:"ReactNode"},{name:"Array",elements:[{name:"ReactNode"}],raw:"ReactNode[]"}]},description:""},context:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    accept?: "image/*" | ".pdf" | "image/*,.pdf" | HTMLInputElement["accept"];
    maxSizeBytes?: number;
    files: UploadedFile[];
    onChange: (
        e:
            | React.ChangeEvent<HTMLInputElement>
            | React.DragEvent<HTMLDivElement>,
        files: UploadedFile[],
    ) => void;
}`,signature:{properties:[{key:"accept",value:{name:"union",raw:'"image/*" | ".pdf" | "image/*,.pdf" | HTMLInputElement["accept"]',elements:[{name:"literal",value:'"image/*"'},{name:"literal",value:'".pdf"'},{name:"literal",value:'"image/*,.pdf"'},{name:'HTMLInputElement["accept"]',raw:'HTMLInputElement["accept"]'}],required:!1}},{key:"maxSizeBytes",value:{name:"number",required:!1}},{key:"files",value:{name:"Array",elements:[{name:"UploadedFile"}],raw:"UploadedFile[]",required:!0}},{key:"onChange",value:{name:"signature",type:"function",raw:`(
    e:
        | React.ChangeEvent<HTMLInputElement>
        | React.DragEvent<HTMLDivElement>,
    files: UploadedFile[],
) => void`,signature:{arguments:[{type:{name:"union",raw:`| React.ChangeEvent<HTMLInputElement>
| React.DragEvent<HTMLDivElement>`,elements:[{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},{name:"ReactDragEvent",raw:"React.DragEvent<HTMLDivElement>",elements:[{name:"HTMLDivElement"}]}]},name:"e"},{type:{name:"Array",elements:[{name:"UploadedFile"}],raw:"UploadedFile[]"},name:"files"}],return:{name:"void"}},required:!0}}]}},description:""}}};const C=t=>{const{children:n,className:_,fileName:a,fileType:l,fileSize:m,path:r,file:s,state:o,errorLabel:c="Feil",onRemove:p,variant:T="list",...y}=t,u=`jkl-file-preview-${i.useId()}`,L=`${u}-support`,M=H(),N=l.startsWith("image/")&&(s?URL.createObjectURL(s):r),d=e.createElement("div",{id:u,className:R(_,"jkl-file",`jkl-file--${T}`),"data-state":o,...y},e.createElement("div",{className:"jkl-file__content"},e.createElement("div",{className:"jkl-file__content__thumbnail","data-filetype":l},e.createElement("img",{src:N||void 0,alt:""})),r?e.createElement("p",{className:"jkl-file__content__name"},e.createElement(h,{href:r},a," ",e.createElement("span",{className:"jkl-file__content__name__size"},"(",E(m),")"))):e.createElement("p",{className:"jkl-file__content__name"},a," ",e.createElement("span",{className:"jkl-file__content__name__size"},"(",E(m),")")),p&&e.createElement(F,{variant:"ghost",className:"jkl-file__content__button",onClick:p,title:`Fjern ${a}`,icon:e.createElement(I,null)})),o==="error"&&c&&e.createElement(k,{className:"jkl-file__support-label",id:L,label:c,labelType:"error"}));return M?e.createElement("li",null,d):d};C.__docgenInfo={description:"",methods:[],displayName:"File",props:{fileName:{required:!0,tsType:{name:"string"},description:""},fileType:{required:!0,tsType:{name:"string"},description:""},fileSize:{required:!0,tsType:{name:"number"},description:""},path:{required:!1,tsType:{name:"string"},description:""},errorLabel:{required:!1,tsType:{name:"string"},description:""},state:{required:!1,tsType:{name:"union",raw:'"error" | "loading"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"loading"'}]},description:""},variant:{required:!1,tsType:{name:"union",raw:'"list" | "card"',elements:[{name:"literal",value:'"list"'},{name:"literal",value:'"card"'}]},description:""},file:{required:!1,tsType:{name:"File"},description:""},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"MouseEvent",elements:[{name:"HTMLButtonElement"}],raw:"MouseEvent<HTMLButtonElement>"},name:"e"}],return:{name:"void"}}},description:""}}};export{C as F,w as a,E as f,H as u};
