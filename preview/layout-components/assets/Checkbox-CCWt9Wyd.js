import{j as e}from"./jsx-runtime-BbjHj44Y.js";import{c as x}from"./clsx-B-dksMZM.js";import{r as a}from"./index-C6mWTJJr.js";import{u as b}from"./useId-Cim48cX5.js";const l=a.forwardRef((o,d)=>{const{id:r,children:m,invalid:i,className:p,inline:u=!1,density:k,"data-testautoid":h,checked:t,indeterminate:s,...f}=o,n=a.useRef(null);a.useImperativeHandle(d,()=>n.current,[]);const c=b(r||"jkl-checkbox",{generateSuffix:!r});return a.useEffect(()=>{n.current&&(n.current.indeterminate=!t&&!!s)},[t,s]),e.jsxs("div",{className:x("jkl-checkbox",p,{"jkl-checkbox--inline":u,"jkl-checkbox--error":i}),"data-density":k,children:[e.jsx("input",{id:c,ref:n,className:"jkl-checkbox__input","data-testid":"jkl-checkbox-input","aria-invalid":i,type:"checkbox","data-testautoid":h,checked:t,...f}),e.jsxs("label",{htmlFor:c,className:"jkl-checkbox__label",children:[e.jsxs("span",{className:"jkl-checkbox__mark",children:[e.jsx("span",{className:"jkl-checkbox__indeterminate-mark"}),e.jsx("span",{className:"jkl-checkbox__check-mark"})]}),e.jsx("span",{className:"jkl-checkbox__text",children:m})]})]})});l.displayName="Checkbox";l.__docgenInfo={description:"",methods:[],displayName:"Checkbox",props:{"data-testautoid":{required:!1,tsType:{name:"string"},description:""},children:{required:!0,tsType:{name:"ReactNode"},description:""},name:{required:!0,tsType:{name:"string"},description:""},value:{required:!0,tsType:{name:"string"},description:""},checked:{required:!1,tsType:{name:"boolean"},description:""},inline:{required:!1,tsType:{name:"boolean"},description:""},className:{required:!1,tsType:{name:"string"},description:""},density:{required:!1,tsType:{name:"union",raw:'"comfortable" | "compact"',elements:[{name:"literal",value:'"comfortable"'},{name:"literal",value:'"compact"'}]},description:""},invalid:{required:!1,tsType:{name:"boolean"},description:""},onChange:{required:!1,tsType:{name:"ChangeEventHandler",elements:[{name:"HTMLInputElement"}],raw:"ChangeEventHandler<HTMLInputElement>"},description:""},onFocus:{required:!1,tsType:{name:"FocusEventHandler",elements:[{name:"HTMLInputElement"}],raw:"FocusEventHandler<HTMLInputElement>"},description:""},onBlur:{required:!1,tsType:{name:"FocusEventHandler",elements:[{name:"HTMLInputElement"}],raw:"FocusEventHandler<HTMLInputElement>"},description:""},indeterminate:{required:!1,tsType:{name:"boolean"},description:""}},composes:["InputHTMLAttributes"]};export{l as C};
