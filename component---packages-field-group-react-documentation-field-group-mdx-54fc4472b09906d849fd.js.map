{"version":3,"file":"component---packages-field-group-react-documentation-field-group-mdx-54fc4472b09906d849fd.js","mappings":"gRAgBaA,EAAa,SAAC,GASb,IARVC,EAQS,EARTA,OACAC,EAOS,EAPTA,UACAC,EAMS,EANTA,SACAC,EAKS,EALTA,UACAC,EAIS,EAJTA,WACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,aACAC,EACS,EADTA,SAEMC,EAAqBC,GAAAA,CAAW,kBAAmBR,GACzD,OACI,4BAAUA,UAAWO,GACjB,0BAAQP,UAAU,2BACd,gBAAC,KAAD,CAAOI,QAASA,EAASC,aAAcA,GAClCN,IAGRE,GACCC,GAAaC,IACX,gBAAC,KAAD,CAAcG,SAAUA,EAAUJ,UAAWA,EAAWC,WAAYA,MCZpF,MAnBO,YAAuE,IAApDM,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,aAC5BR,EAAYO,GAAcA,EAAW,mBAAqB,sCAAmCE,EAC7FR,EAAaM,GAAcA,EAAW,YAAc,sCAAmCE,EACvFP,EAAUM,GAAiBA,EAAY,QAE7C,OACI,gBAACZ,EAAD,CACIO,aAAcI,GAAcA,EAAU,QACtCL,QAASA,EACTF,UAAWA,EACXC,WAAYA,EACZH,UAAU,wBACVD,OAAO,+BAEP,qBAAGC,UAAU,YAAb,4C,iBCVCY,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAmBN,EAAc,oBACjCO,EAAc,CAClBR,aAAAA,GAEIS,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,SAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAI5E,SAACP,EAAD,CAASO,QAAQ,WAAjB,yNAIA,SAACN,EAAD,CAAkBO,UAAWC,EAASC,MAAO,CAC3CC,UAAW,CAAC,UAAW,kBAAmB,YAC1CC,YAAa,CAAC,CACZhB,KAAM,UACNiB,OAAQ,CAAC,QAAS,SAAU,SAC5BC,aAAc,KAEfP,QAAQ,sBACX,2CACA,iPACA,gLACA,2OAEA,4BACA,oBACE,eAAIQ,WAAW,MAAf,6BACA,eAAIA,WAAW,MAAf,iCACA,eAAIA,WAAW,MAAf,+EAMNV,EAAWW,gBAAiB","sources":["webpack://@fremtind/portal/../packages/field-group-react/src/FieldGroup.tsx","webpack://@fremtind/portal/../packages/field-group-react/documentation/Example.tsx","webpack://@fremtind/portal/../packages/field-group-react/documentation/FieldGroup.mdx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport { Label, SupportLabel, LabelVariant } from \"@fremtind/jkl-core\";\nimport classNames from \"classnames\";\n\ninterface Props {\n    legend: string;\n    children?: ReactNode;\n    className?: string;\n    helpLabel?: string;\n    errorLabel?: string;\n    variant?: LabelVariant;\n    forceCompact?: boolean;\n    /** @deprecated */\n    inverted?: boolean;\n}\n\nexport const FieldGroup = ({\n    legend,\n    className,\n    children,\n    helpLabel,\n    errorLabel,\n    variant,\n    forceCompact,\n    inverted,\n}: Props) => {\n    const componentClassName = classNames(\"jkl-field-group\", className);\n    return (\n        <fieldset className={componentClassName}>\n            <legend className=\"jkl-field-group__legend\">\n                <Label variant={variant} forceCompact={forceCompact}>\n                    {legend}\n                </Label>\n            </legend>\n            {children}\n            {(helpLabel || errorLabel) && (\n                <SupportLabel inverted={inverted} helpLabel={helpLabel} errorLabel={errorLabel} />\n            )}\n        </fieldset>\n    );\n};\n","import React from \"react\";\nimport { LabelVariant } from \"@fremtind/jkl-core\";\nimport { ExampleComponentProps } from \"../../../doc-utils\";\nimport { FieldGroup } from \"../src/index\";\n\nexport function Example({ boolValues, choiceValues }: ExampleComponentProps) {\n    const helpLabel = boolValues && boolValues[\"Med hjelpetekst\"] ? \"Hjelpetekst for feltene samlet\" : undefined;\n    const errorLabel = boolValues && boolValues[\"Med feil\"] ? \"Feilmelding for feltene samlet\" : undefined;\n    const variant = choiceValues && (choiceValues[\"Variant\"] as LabelVariant);\n\n    return (\n        <FieldGroup\n            forceCompact={boolValues && boolValues[\"Kompakt\"]}\n            variant={variant}\n            helpLabel={helpLabel}\n            errorLabel={errorLabel}\n            className=\"jkl-spacing--bottom-3\"\n            legend=\"Samleoverskrift for feltene\"\n        >\n            <p className=\"jkl-body\">her kan du sette inn innhold og felter</p>\n        </FieldGroup>\n    );\n}\n\nexport default Example;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jokul/jokul/portal/src/components/Layout/DocPageLayout.tsx\";\nimport Example from \"./Example\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Ingress = makeShortcode(\"Ingress\");\nconst ComponentExample = makeShortcode(\"ComponentExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Ingress mdxType=\"Ingress\">\n    Et feltsett er et sett med skjemafelter som hører sammen, for eksempel navn, adresse og postnummer/sted. Feltsettet\n    må ha en overskrift som beskriver innholdet, og kan også ha en hjelpetekst eller en feilmelding.\n    </Ingress>\n    <ComponentExample component={Example} knobs={{\n      boolProps: [\"Kompakt\", \"Med hjelpetekst\", \"Med feil\"],\n      choiceProps: [{\n        name: \"Variant\",\n        values: [\"small\", \"medium\", \"large\"],\n        defaultValue: 0\n      }]\n    }} mdxType=\"ComponentExample\" />\n    <h2>{`Tekst og validering`}</h2>\n    <p>{`Velg størrelse på overskriften til feltsettet etter prinsippene for skjemadesign. Lag en kort og tydelig overskrift, som beskriver hva brukeren skal gjøre. Du kan også legge en forklarende hjelpetekst under feltsettet.`}</p>\n    <p>{`Hvis feltsettet ikke validerer, kan vi enten velge å legge en feilemelding under hele settet, eller under ett eller flere felt, hvis det gir bedre hjelp.`}</p>\n    <p>{`Eksempel:\nI et sett med radioknapper, viser vi feilmeldingen under feltsettet. Merk at feilmeldingen erstatter en eventuell hjelpetekst, slik at den feilmeldingen du lager også må fortelle hva hjelpeteksten var.`}</p>\n    <h2>{`Bruk`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Et sett med radioknapper`}</li>\n      <li parentName=\"ul\">{`Et sett med avmerkingsbokser`}</li>\n      <li parentName=\"ul\">{`Et feltsett som til sammen utgjør et konsept (for eksempel adressefelter)`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["FieldGroup","legend","className","children","helpLabel","errorLabel","variant","forceCompact","inverted","componentClassName","classNames","boolValues","choiceValues","undefined","_frontmatter","makeShortcode","name","props","console","warn","Ingress","ComponentExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","Example","knobs","boolProps","choiceProps","values","defaultValue","parentName","isMDXComponent"],"sourceRoot":""}